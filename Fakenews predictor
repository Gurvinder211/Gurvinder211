{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Gurvinder211/Gurvinder211/blob/main/Fakenews%20predictor\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "yAtUHJOHWMNJ"
      },
      "outputs": [],
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "import nltk\n",
        "import re\n",
        "from wordcloud import WordCloud"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "wc_xLCv-XagT"
      },
      "outputs": [],
      "source": [
        "from tensorflow.keras.preprocessing.text import Tokenizer\n",
        "from tensorflow.keras.preprocessing.sequence import pad_sequences\n",
        "from tensorflow.keras.models import Sequential\n",
        "from tensorflow.keras.layers import Dense, Embedding, LSTM, Conv1D, MaxPool1D\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.metrics import classification_report, accuracy_score"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "LqY9kyniaVmn"
      },
      "outputs": [],
      "source": [
        "fake = pd.read_csv('https://raw.githubusercontent.com/laxmimerit/fake-real-news-dataset/main/data/Fake.csv')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "0oJTjK2Gc57f",
        "outputId": "ab432554-2b54-44d0-bd43-bc909b3246ca"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-6af29408-ea7d-4def-ab46-fbb2583f6022\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>title</th>\n",
              "      <th>text</th>\n",
              "      <th>subject</th>\n",
              "      <th>date</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Donald Trump Sends Out Embarrassing New Year’...</td>\n",
              "      <td>Donald Trump just couldn t wish all Americans ...</td>\n",
              "      <td>News</td>\n",
              "      <td>December 31, 2017</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Drunk Bragging Trump Staffer Started Russian ...</td>\n",
              "      <td>House Intelligence Committee Chairman Devin Nu...</td>\n",
              "      <td>News</td>\n",
              "      <td>December 31, 2017</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Sheriff David Clarke Becomes An Internet Joke...</td>\n",
              "      <td>On Friday, it was revealed that former Milwauk...</td>\n",
              "      <td>News</td>\n",
              "      <td>December 30, 2017</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Trump Is So Obsessed He Even Has Obama’s Name...</td>\n",
              "      <td>On Christmas day, Donald Trump announced that ...</td>\n",
              "      <td>News</td>\n",
              "      <td>December 29, 2017</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Pope Francis Just Called Out Donald Trump Dur...</td>\n",
              "      <td>Pope Francis used his annual Christmas Day mes...</td>\n",
              "      <td>News</td>\n",
              "      <td>December 25, 2017</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6af29408-ea7d-4def-ab46-fbb2583f6022')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-6af29408-ea7d-4def-ab46-fbb2583f6022 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-6af29408-ea7d-4def-ab46-fbb2583f6022');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "                                               title  \\\n",
              "0   Donald Trump Sends Out Embarrassing New Year’...   \n",
              "1   Drunk Bragging Trump Staffer Started Russian ...   \n",
              "2   Sheriff David Clarke Becomes An Internet Joke...   \n",
              "3   Trump Is So Obsessed He Even Has Obama’s Name...   \n",
              "4   Pope Francis Just Called Out Donald Trump Dur...   \n",
              "\n",
              "                                                text subject  \\\n",
              "0  Donald Trump just couldn t wish all Americans ...    News   \n",
              "1  House Intelligence Committee Chairman Devin Nu...    News   \n",
              "2  On Friday, it was revealed that former Milwauk...    News   \n",
              "3  On Christmas day, Donald Trump announced that ...    News   \n",
              "4  Pope Francis used his annual Christmas Day mes...    News   \n",
              "\n",
              "                date  \n",
              "0  December 31, 2017  \n",
              "1  December 31, 2017  \n",
              "2  December 30, 2017  \n",
              "3  December 29, 2017  \n",
              "4  December 25, 2017  "
            ]
          },
          "execution_count": 10,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "fake.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "U-LrH8WYc7aG",
        "outputId": "5137690b-e1a5-4bf8-9b78-51286f5cc045"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "Index(['title', 'text', 'subject', 'date'], dtype='object')"
            ]
          },
          "execution_count": 11,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "fake.columns"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dv4a1RZyc-um",
        "outputId": "36eadb8d-80bb-461b-eab4-1d0166d46eca"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "News               9050\n",
              "politics           6841\n",
              "left-news          4459\n",
              "Government News    1570\n",
              "US_News             783\n",
              "Middle-east         778\n",
              "Name: subject, dtype: int64"
            ]
          },
          "execution_count": 12,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "fake['subject'].value_counts()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 407
        },
        "id": "8-1j86WDc-xv",
        "outputId": "08912867-66bb-4080-e145-025352791262"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f9b026bda90>"
            ]
          },
          "execution_count": 13,
          "metadata": {},
          "output_type": "execute_result"
        },
        {
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 720x432 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "plt.figure(figsize =(10, 6))\n",
        "sns.countplot(x = 'subject', data=fake)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 36
        },
        "id": "7K23wcUbc-0a",
        "outputId": "31596427-c933-4cbb-b67a-b220d389457f"
      },
      "outputs": [
        {
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            },
            "text/plain": [
              "'this is a data'"
            ]
          },
          "execution_count": 14,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "' '.join(['this', 'is', 'a', 'data'])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "q3QmT-ZYdaDS"
      },
      "outputs": [],
      "source": [
        "text = ' '.join(fake['text'].tolist())"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 391
        },
        "id": "271dnQ23c-20",
        "outputId": "cd954501-d178-453a-e382-e3a6c36a60b4"
      },
      "outputs": [
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 720x720 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        " wordcloud = WordCloud().generate(text)\n",
        " fig = plt.figure(figsize=(10, 10))\n",
        " plt.imshow(wordcloud) \n",
        " plt.axis('off')\n",
        " plt.tight_layout(pad=0)\n",
        " plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "alvWIQOydZO0"
      },
      "outputs": [],
      "source": [
        "real = pd.read_csv('https://raw.githubusercontent.com/laxmimerit/fake-real-news-dataset/main/data/True.csv')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "aSnM6JR6c-5V"
      },
      "outputs": [],
      "source": [
        "text = ' '.join(real['text'].tolist())"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 436
        },
        "id": "6LRCdHUbc-7y",
        "outputId": "a653d016-580b-493d-e199-b907e6fd7bf0"
      },
      "outputs": [
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 720x720 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "wordcloud = WordCloud(width=1920, height=1080).generate(text)\n",
        "fig = plt.figure(figsize=(10, 10))\n",
        "plt.imshow(wordcloud) \n",
        "plt.axis('off')\n",
        "plt.tight_layout(pad=0)\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "Q6MyeUIXc--S",
        "outputId": "5caf70d2-4489-428f-8d0b-f68603e3e2ff"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-c3c3acab-459d-45f5-b665-73671de9f4e7\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>title</th>\n",
              "      <th>text</th>\n",
              "      <th>subject</th>\n",
              "      <th>date</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>18682</th>\n",
              "      <td>U.S. Justice Department, Latin American countr...</td>\n",
              "      <td>WASHINGTON (Reuters) - The U.S. Justice Depart...</td>\n",
              "      <td>worldnews</td>\n",
              "      <td>September 29, 2017</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9462</th>\n",
              "      <td>California Senate passes gun control package</td>\n",
              "      <td>SACRAMENTO, Calif. (Reuters) - The California ...</td>\n",
              "      <td>politicsNews</td>\n",
              "      <td>May 19, 2016</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1387</th>\n",
              "      <td>Republicans move on tax reform; Fed officials ...</td>\n",
              "      <td>WASHINGTON (Reuters) - Congressional Republica...</td>\n",
              "      <td>politicsNews</td>\n",
              "      <td>October 5, 2017</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17444</th>\n",
              "      <td>Factbox: Raqqa - Battle for Islamic State's Sy...</td>\n",
              "      <td>BEIRUT (Reuters) - The battle for the city of ...</td>\n",
              "      <td>worldnews</td>\n",
              "      <td>October 15, 2017</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11876</th>\n",
              "      <td>Billionaire Odebrecht in Brazil scandal releas...</td>\n",
              "      <td>RIO DE JANEIRO/SAO PAULO (Reuters) - Billionai...</td>\n",
              "      <td>worldnews</td>\n",
              "      <td>December 19, 2017</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c3c3acab-459d-45f5-b665-73671de9f4e7')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-c3c3acab-459d-45f5-b665-73671de9f4e7 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-c3c3acab-459d-45f5-b665-73671de9f4e7');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "                                                   title  \\\n",
              "18682  U.S. Justice Department, Latin American countr...   \n",
              "9462        California Senate passes gun control package   \n",
              "1387   Republicans move on tax reform; Fed officials ...   \n",
              "17444  Factbox: Raqqa - Battle for Islamic State's Sy...   \n",
              "11876  Billionaire Odebrecht in Brazil scandal releas...   \n",
              "\n",
              "                                                    text       subject  \\\n",
              "18682  WASHINGTON (Reuters) - The U.S. Justice Depart...     worldnews   \n",
              "9462   SACRAMENTO, Calif. (Reuters) - The California ...  politicsNews   \n",
              "1387   WASHINGTON (Reuters) - Congressional Republica...  politicsNews   \n",
              "17444  BEIRUT (Reuters) - The battle for the city of ...     worldnews   \n",
              "11876  RIO DE JANEIRO/SAO PAULO (Reuters) - Billionai...     worldnews   \n",
              "\n",
              "                      date  \n",
              "18682  September 29, 2017   \n",
              "9462         May 19, 2016   \n",
              "1387      October 5, 2017   \n",
              "17444    October 15, 2017   \n",
              "11876   December 19, 2017   "
            ]
          },
          "execution_count": 20,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "real.sample(5)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "xfZ2e5HFc_Ar"
      },
      "outputs": [],
      "source": [
        "unknown_publishers = []\n",
        "for index, row in enumerate(real.text.values):\n",
        "  try:\n",
        "    record = row.split('-', maxsplit=1)\n",
        "    record[1]\n",
        "        \n",
        "    assert(len(record[0])<120)\n",
        "  except:\n",
        "    unknown_publishers.append(index)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fK2sf2fmc_Dh",
        "outputId": "97b66b7b-7059-44f1-8a7a-b2fcf6ec0d37"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "222"
            ]
          },
          "execution_count": 22,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "len(unknown_publishers)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "27zd6n0lc_GD",
        "outputId": "2c11a251-b00a-4158-d65e-b12655ba344c"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "7        The following statements were posted to the ve...\n",
              "8        The following statements were posted to the ve...\n",
              "12       The following statements were posted to the ve...\n",
              "13       The following statements were posted to the ve...\n",
              "14        (In Dec. 25 story, in second paragraph, corre...\n",
              "                               ...                        \n",
              "20135     (Story corrects to million from billion in pa...\n",
              "20500     (This Sept 8 story corrects headline, clarifi...\n",
              "20667     (Story refiles to add dropped word  not , in ...\n",
              "21246     (Story corrects third paragraph to show Mosul...\n",
              "21339     (Story corrects to fix spelling in paragraph ...\n",
              "Name: text, Length: 222, dtype: object"
            ]
          },
          "execution_count": 23,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "real.iloc[unknown_publishers].text"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2SHYE4pXc_I-",
        "outputId": "3873d13b-0b1f-4097-d097-1134fde9404c"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "title      Graphic: Supreme Court roundup\n",
              "text                                     \n",
              "subject                      politicsNews\n",
              "date                       June 16, 2016 \n",
              "Name: 8970, dtype: object"
            ]
          },
          "execution_count": 24,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "real.iloc[8970]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "4mP9DU3Mc_Lk"
      },
      "outputs": [],
      "source": [
        "real = real.drop(8970, axis=0)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "3Dn11zFEc_OK"
      },
      "outputs": [],
      "source": [
        "publisher = []\n",
        "tmp_text = []\n",
        "\n",
        "for index, row in enumerate(real.text.values):\n",
        "  if index in unknown_publishers:\n",
        "    tmp_text.append(row)\n",
        "    publisher.append('Unknown')\n",
        "        \n",
        "  else: \n",
        "    record = row.split('-', maxsplit=1)\n",
        "    publisher.append(record[0].strip())\n",
        "    tmp_text.append(record[1].strip())"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "QnrnOONNc_Qw"
      },
      "outputs": [],
      "source": [
        "real['publisher']=publisher\n",
        "real['text'] = tmp_text"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "EeF--LxSc_T1",
        "outputId": "bb5c8209-cb30-48dc-ca93-f655dc12f0cf"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-8cb0a130-07d4-4618-8368-6c1cb1c62e64\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>title</th>\n",
              "      <th>text</th>\n",
              "      <th>subject</th>\n",
              "      <th>date</th>\n",
              "      <th>publisher</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>As U.S. budget fight looms, Republicans flip t...</td>\n",
              "      <td>The head of a conservative Republican faction ...</td>\n",
              "      <td>politicsNews</td>\n",
              "      <td>December 31, 2017</td>\n",
              "      <td>WASHINGTON (Reuters)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>U.S. military to accept transgender recruits o...</td>\n",
              "      <td>Transgender people will be allowed for the fir...</td>\n",
              "      <td>politicsNews</td>\n",
              "      <td>December 29, 2017</td>\n",
              "      <td>WASHINGTON (Reuters)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Senior U.S. Republican senator: 'Let Mr. Muell...</td>\n",
              "      <td>The special counsel investigation of links bet...</td>\n",
              "      <td>politicsNews</td>\n",
              "      <td>December 31, 2017</td>\n",
              "      <td>WASHINGTON (Reuters)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>FBI Russia probe helped by Australian diplomat...</td>\n",
              "      <td>Trump campaign adviser George Papadopoulos tol...</td>\n",
              "      <td>politicsNews</td>\n",
              "      <td>December 30, 2017</td>\n",
              "      <td>WASHINGTON (Reuters)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Trump wants Postal Service to charge 'much mor...</td>\n",
              "      <td>President Donald Trump called on the U.S. Post...</td>\n",
              "      <td>politicsNews</td>\n",
              "      <td>December 29, 2017</td>\n",
              "      <td>SEATTLE/WASHINGTON (Reuters)</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8cb0a130-07d4-4618-8368-6c1cb1c62e64')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-8cb0a130-07d4-4618-8368-6c1cb1c62e64 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-8cb0a130-07d4-4618-8368-6c1cb1c62e64');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "                                               title  \\\n",
              "0  As U.S. budget fight looms, Republicans flip t...   \n",
              "1  U.S. military to accept transgender recruits o...   \n",
              "2  Senior U.S. Republican senator: 'Let Mr. Muell...   \n",
              "3  FBI Russia probe helped by Australian diplomat...   \n",
              "4  Trump wants Postal Service to charge 'much mor...   \n",
              "\n",
              "                                                text       subject  \\\n",
              "0  The head of a conservative Republican faction ...  politicsNews   \n",
              "1  Transgender people will be allowed for the fir...  politicsNews   \n",
              "2  The special counsel investigation of links bet...  politicsNews   \n",
              "3  Trump campaign adviser George Papadopoulos tol...  politicsNews   \n",
              "4  President Donald Trump called on the U.S. Post...  politicsNews   \n",
              "\n",
              "                 date                     publisher  \n",
              "0  December 31, 2017           WASHINGTON (Reuters)  \n",
              "1  December 29, 2017           WASHINGTON (Reuters)  \n",
              "2  December 31, 2017           WASHINGTON (Reuters)  \n",
              "3  December 30, 2017           WASHINGTON (Reuters)  \n",
              "4  December 29, 2017   SEATTLE/WASHINGTON (Reuters)  "
            ]
          },
          "execution_count": 28,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "real.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jgT1kGP6c_Wh",
        "outputId": "cb11bcf9-f005-40a5-bcff-e525f5189f40"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "(21416, 5)"
            ]
          },
          "execution_count": 29,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "real.shape"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "UNCZcKsyc_ZW"
      },
      "outputs": [],
      "source": [
        "empty_fake_index = [index for index,text in enumerate(fake.text.tolist()) if str(text).strip()==\"\"]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "jkJZpoWtc_cA",
        "outputId": "37157658-6fb8-4d39-e3f2-015275bd92e1"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-f77a2c69-f8bb-478e-9e32-fac067367a6e\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>title</th>\n",
              "      <th>text</th>\n",
              "      <th>subject</th>\n",
              "      <th>date</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>10923</th>\n",
              "      <td>TAKE OUR POLL: Who Do You Think President Trum...</td>\n",
              "      <td></td>\n",
              "      <td>politics</td>\n",
              "      <td>May 10, 2017</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11041</th>\n",
              "      <td>Joe Scarborough BERATES Mika Brzezinski Over “...</td>\n",
              "      <td></td>\n",
              "      <td>politics</td>\n",
              "      <td>Apr 26, 2017</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11190</th>\n",
              "      <td>WATCH TUCKER CARLSON Scorch Sanctuary City May...</td>\n",
              "      <td></td>\n",
              "      <td>politics</td>\n",
              "      <td>Apr 6, 2017</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11225</th>\n",
              "      <td>MAYOR OF SANCTUARY CITY: Trump Trying To Make ...</td>\n",
              "      <td></td>\n",
              "      <td>politics</td>\n",
              "      <td>Apr 2, 2017</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11236</th>\n",
              "      <td>SHOCKER: Public School Turns Computer Lab Into...</td>\n",
              "      <td></td>\n",
              "      <td>politics</td>\n",
              "      <td>Apr 1, 2017</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21816</th>\n",
              "      <td>BALTIMORE BURNS: MARYLAND GOVERNOR BRINGS IN N...</td>\n",
              "      <td></td>\n",
              "      <td>left-news</td>\n",
              "      <td>Apr 27, 2015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21826</th>\n",
              "      <td>FULL VIDEO: THE BLOCKBUSTER INVESTIGATION INTO...</td>\n",
              "      <td></td>\n",
              "      <td>left-news</td>\n",
              "      <td>Apr 25, 2015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21827</th>\n",
              "      <td>(VIDEO) HILLARY CLINTON: RELIGIOUS BELIEFS MUS...</td>\n",
              "      <td></td>\n",
              "      <td>left-news</td>\n",
              "      <td>Apr 25, 2015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21857</th>\n",
              "      <td>(VIDEO)ICE PROTECTING OBAMA: WON’T RELEASE NAM...</td>\n",
              "      <td></td>\n",
              "      <td>left-news</td>\n",
              "      <td>Apr 14, 2015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21873</th>\n",
              "      <td>(VIDEO) HYSTERICAL SNL TAKE ON HILLARY’S ANNOU...</td>\n",
              "      <td></td>\n",
              "      <td>left-news</td>\n",
              "      <td>Apr 12, 2015</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>630 rows × 4 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f77a2c69-f8bb-478e-9e32-fac067367a6e')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-f77a2c69-f8bb-478e-9e32-fac067367a6e button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-f77a2c69-f8bb-478e-9e32-fac067367a6e');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "                                                   title text    subject  \\\n",
              "10923  TAKE OUR POLL: Who Do You Think President Trum...        politics   \n",
              "11041  Joe Scarborough BERATES Mika Brzezinski Over “...        politics   \n",
              "11190  WATCH TUCKER CARLSON Scorch Sanctuary City May...        politics   \n",
              "11225  MAYOR OF SANCTUARY CITY: Trump Trying To Make ...        politics   \n",
              "11236  SHOCKER: Public School Turns Computer Lab Into...        politics   \n",
              "...                                                  ...  ...        ...   \n",
              "21816  BALTIMORE BURNS: MARYLAND GOVERNOR BRINGS IN N...       left-news   \n",
              "21826  FULL VIDEO: THE BLOCKBUSTER INVESTIGATION INTO...       left-news   \n",
              "21827  (VIDEO) HILLARY CLINTON: RELIGIOUS BELIEFS MUS...       left-news   \n",
              "21857  (VIDEO)ICE PROTECTING OBAMA: WON’T RELEASE NAM...       left-news   \n",
              "21873  (VIDEO) HYSTERICAL SNL TAKE ON HILLARY’S ANNOU...       left-news   \n",
              "\n",
              "               date  \n",
              "10923  May 10, 2017  \n",
              "11041  Apr 26, 2017  \n",
              "11190   Apr 6, 2017  \n",
              "11225   Apr 2, 2017  \n",
              "11236   Apr 1, 2017  \n",
              "...             ...  \n",
              "21816  Apr 27, 2015  \n",
              "21826  Apr 25, 2015  \n",
              "21827  Apr 25, 2015  \n",
              "21857  Apr 14, 2015  \n",
              "21873  Apr 12, 2015  \n",
              "\n",
              "[630 rows x 4 columns]"
            ]
          },
          "execution_count": 31,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "fake.iloc[empty_fake_index]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "xes7_dSuc_ex"
      },
      "outputs": [],
      "source": [
        "fake['text'] = fake['title'] + \" \" + fake['text']\n",
        "real['text'] = real['title'] + \" \" + real['text']"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "-jWjfeYCc_hW"
      },
      "outputs": [],
      "source": [
        "real['class'] = 1\n",
        "fake['class'] = 0"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TS4RypSJc_kT",
        "outputId": "ead955a2-77d0-4b7a-8da4-ad5a34632c70"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "Index(['title', 'text', 'subject', 'date', 'publisher', 'class'], dtype='object')"
            ]
          },
          "execution_count": 34,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "real.columns "
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "LRoNkmCFc_nD"
      },
      "outputs": [],
      "source": [
        "real = real[['text', 'class']]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "fJBj5_Kxc_p-"
      },
      "outputs": [],
      "source": [
        "fake = fake[['text', 'class']]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "rEtUDSIZc_tn"
      },
      "outputs": [],
      "source": [
        "data = real.append(fake, ignore_index=True)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "51uilj6qfGm0",
        "outputId": "b010e700-67a8-484e-d8aa-673b24013954"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-c9258f39-a2cf-439c-95f8-9eb61f004556\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>text</th>\n",
              "      <th>class</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>27757</th>\n",
              "      <td>Antonin Scalia’s Own Past Ruling Will Hand Ob...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35443</th>\n",
              "      <td>IRS CHIEF: Okay For Illegal Aliens To Use Stol...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4091</th>\n",
              "      <td>Senate Republican leader says still aiming for...</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13046</th>\n",
              "      <td>Bone fragments found in Mexico to be tested fo...</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10845</th>\n",
              "      <td>Former Virginia Governor Gilmore drops Republi...</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c9258f39-a2cf-439c-95f8-9eb61f004556')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-c9258f39-a2cf-439c-95f8-9eb61f004556 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-c9258f39-a2cf-439c-95f8-9eb61f004556');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "                                                    text  class\n",
              "27757   Antonin Scalia’s Own Past Ruling Will Hand Ob...      0\n",
              "35443  IRS CHIEF: Okay For Illegal Aliens To Use Stol...      0\n",
              "4091   Senate Republican leader says still aiming for...      1\n",
              "13046  Bone fragments found in Mexico to be tested fo...      1\n",
              "10845  Former Virginia Governor Gilmore drops Republi...      1"
            ]
          },
          "execution_count": 38,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "data.sample(5)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2kH6hMNkfGs_",
        "outputId": "0a974482-3485-4b2e-a428-5548c87ea344"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Collecting spacy==2.2.3\n",
            "  Downloading spacy-2.2.3-cp37-cp37m-manylinux1_x86_64.whl (10.4 MB)\n",
            "\u001b[K     |████████████████████████████████| 10.4 MB 4.5 MB/s \n",
            "\u001b[?25hRequirement already satisfied: requests<3.0.0,>=2.13.0 in /usr/local/lib/python3.7/dist-packages (from spacy==2.2.3) (2.23.0)\n",
            "Collecting blis<0.5.0,>=0.4.0\n",
            "  Downloading blis-0.4.1-cp37-cp37m-manylinux1_x86_64.whl (3.7 MB)\n",
            "\u001b[K     |████████████████████████████████| 3.7 MB 51.8 MB/s \n",
            "\u001b[?25hCollecting catalogue<1.1.0,>=0.0.7\n",
            "  Downloading catalogue-1.0.1-py2.py3-none-any.whl (16 kB)\n",
            "Requirement already satisfied: wasabi<1.1.0,>=0.4.0 in /usr/local/lib/python3.7/dist-packages (from spacy==2.2.3) (0.10.1)\n",
            "Requirement already satisfied: murmurhash<1.1.0,>=0.28.0 in /usr/local/lib/python3.7/dist-packages (from spacy==2.2.3) (1.0.8)\n",
            "Requirement already satisfied: numpy>=1.15.0 in /usr/local/lib/python3.7/dist-packages (from spacy==2.2.3) (1.21.6)\n",
            "Requirement already satisfied: cymem<2.1.0,>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from spacy==2.2.3) (2.0.6)\n",
            "Requirement already satisfied: setuptools in /usr/local/lib/python3.7/dist-packages (from spacy==2.2.3) (57.4.0)\n",
            "Requirement already satisfied: preshed<3.1.0,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from spacy==2.2.3) (3.0.7)\n",
            "Collecting plac<1.2.0,>=0.9.6\n",
            "  Downloading plac-1.1.3-py2.py3-none-any.whl (20 kB)\n",
            "Collecting srsly<1.1.0,>=0.1.0\n",
            "  Downloading srsly-1.0.5-cp37-cp37m-manylinux2014_x86_64.whl (184 kB)\n",
            "\u001b[K     |████████████████████████████████| 184 kB 67.2 MB/s \n",
            "\u001b[?25hCollecting thinc<7.4.0,>=7.3.0\n",
            "  Downloading thinc-7.3.1-cp37-cp37m-manylinux1_x86_64.whl (2.2 MB)\n",
            "\u001b[K     |████████████████████████████████| 2.2 MB 43.8 MB/s \n",
            "\u001b[?25hRequirement already satisfied: typing-extensions>=3.6.4 in /usr/local/lib/python3.7/dist-packages (from catalogue<1.1.0,>=0.0.7->spacy==2.2.3) (4.1.1)\n",
            "Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from catalogue<1.1.0,>=0.0.7->spacy==2.2.3) (3.8.1)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0,>=2.13.0->spacy==2.2.3) (2022.9.24)\n",
            "Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0,>=2.13.0->spacy==2.2.3) (3.0.4)\n",
            "Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0,>=2.13.0->spacy==2.2.3) (2.10)\n",
            "Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0,>=2.13.0->spacy==2.2.3) (1.24.3)\n",
            "Requirement already satisfied: tqdm<5.0.0,>=4.10.0 in /usr/local/lib/python3.7/dist-packages (from thinc<7.4.0,>=7.3.0->spacy==2.2.3) (4.64.1)\n",
            "Installing collected packages: srsly, plac, blis, thinc, catalogue, spacy\n",
            "  Attempting uninstall: srsly\n",
            "    Found existing installation: srsly 2.4.4\n",
            "    Uninstalling srsly-2.4.4:\n",
            "      Successfully uninstalled srsly-2.4.4\n",
            "  Attempting uninstall: blis\n",
            "    Found existing installation: blis 0.7.8\n",
            "    Uninstalling blis-0.7.8:\n",
            "      Successfully uninstalled blis-0.7.8\n",
            "  Attempting uninstall: thinc\n",
            "    Found existing installation: thinc 8.1.2\n",
            "    Uninstalling thinc-8.1.2:\n",
            "      Successfully uninstalled thinc-8.1.2\n",
            "  Attempting uninstall: catalogue\n",
            "    Found existing installation: catalogue 2.0.8\n",
            "    Uninstalling catalogue-2.0.8:\n",
            "      Successfully uninstalled catalogue-2.0.8\n",
            "  Attempting uninstall: spacy\n",
            "    Found existing installation: spacy 3.4.1\n",
            "    Uninstalling spacy-3.4.1:\n",
            "      Successfully uninstalled spacy-3.4.1\n",
            "\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n",
            "en-core-web-sm 3.4.0 requires spacy<3.5.0,>=3.4.0, but you have spacy 2.2.3 which is incompatible.\n",
            "confection 0.0.2 requires srsly<3.0.0,>=2.4.0, but you have srsly 1.0.5 which is incompatible.\u001b[0m\n",
            "Successfully installed blis-0.4.1 catalogue-1.0.1 plac-1.1.3 spacy-2.2.3 srsly-1.0.5 thinc-7.3.1\n"
          ]
        }
      ],
      "source": [
        "!pip install spacy==2.2.3\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "UjBuYBiWfGvV",
        "outputId": "fb3af06f-3d49-490d-f881-612d5f22f98e"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Collecting en_core_web_sm==2.2.5\n",
            "  Downloading https://github.com/explosion/spacy-models/releases/download/en_core_web_sm-2.2.5/en_core_web_sm-2.2.5.tar.gz (12.0 MB)\n",
            "\u001b[K     |████████████████████████████████| 12.0 MB 4.5 MB/s \n",
            "\u001b[?25hRequirement already satisfied: spacy>=2.2.2 in /usr/local/lib/python3.7/dist-packages (from en_core_web_sm==2.2.5) (2.2.3)\n",
            "Requirement already satisfied: murmurhash<1.1.0,>=0.28.0 in /usr/local/lib/python3.7/dist-packages (from spacy>=2.2.2->en_core_web_sm==2.2.5) (1.0.8)\n",
            "Requirement already satisfied: wasabi<1.1.0,>=0.4.0 in /usr/local/lib/python3.7/dist-packages (from spacy>=2.2.2->en_core_web_sm==2.2.5) (0.10.1)\n",
            "Requirement already satisfied: srsly<1.1.0,>=0.1.0 in /usr/local/lib/python3.7/dist-packages (from spacy>=2.2.2->en_core_web_sm==2.2.5) (1.0.5)\n",
            "Requirement already satisfied: catalogue<1.1.0,>=0.0.7 in /usr/local/lib/python3.7/dist-packages (from spacy>=2.2.2->en_core_web_sm==2.2.5) (1.0.1)\n",
            "Requirement already satisfied: numpy>=1.15.0 in /usr/local/lib/python3.7/dist-packages (from spacy>=2.2.2->en_core_web_sm==2.2.5) (1.21.6)\n",
            "Requirement already satisfied: requests<3.0.0,>=2.13.0 in /usr/local/lib/python3.7/dist-packages (from spacy>=2.2.2->en_core_web_sm==2.2.5) (2.23.0)\n",
            "Requirement already satisfied: preshed<3.1.0,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from spacy>=2.2.2->en_core_web_sm==2.2.5) (3.0.7)\n",
            "Requirement already satisfied: plac<1.2.0,>=0.9.6 in /usr/local/lib/python3.7/dist-packages (from spacy>=2.2.2->en_core_web_sm==2.2.5) (1.1.3)\n",
            "Requirement already satisfied: setuptools in /usr/local/lib/python3.7/dist-packages (from spacy>=2.2.2->en_core_web_sm==2.2.5) (57.4.0)\n",
            "Requirement already satisfied: thinc<7.4.0,>=7.3.0 in /usr/local/lib/python3.7/dist-packages (from spacy>=2.2.2->en_core_web_sm==2.2.5) (7.3.1)\n",
            "Requirement already satisfied: blis<0.5.0,>=0.4.0 in /usr/local/lib/python3.7/dist-packages (from spacy>=2.2.2->en_core_web_sm==2.2.5) (0.4.1)\n",
            "Requirement already satisfied: cymem<2.1.0,>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from spacy>=2.2.2->en_core_web_sm==2.2.5) (2.0.6)\n",
            "Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from catalogue<1.1.0,>=0.0.7->spacy>=2.2.2->en_core_web_sm==2.2.5) (3.8.1)\n",
            "Requirement already satisfied: typing-extensions>=3.6.4 in /usr/local/lib/python3.7/dist-packages (from catalogue<1.1.0,>=0.0.7->spacy>=2.2.2->en_core_web_sm==2.2.5) (4.1.1)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0,>=2.13.0->spacy>=2.2.2->en_core_web_sm==2.2.5) (2022.9.24)\n",
            "Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0,>=2.13.0->spacy>=2.2.2->en_core_web_sm==2.2.5) (1.24.3)\n",
            "Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0,>=2.13.0->spacy>=2.2.2->en_core_web_sm==2.2.5) (3.0.4)\n",
            "Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests<3.0.0,>=2.13.0->spacy>=2.2.2->en_core_web_sm==2.2.5) (2.10)\n",
            "Requirement already satisfied: tqdm<5.0.0,>=4.10.0 in /usr/local/lib/python3.7/dist-packages (from thinc<7.4.0,>=7.3.0->spacy>=2.2.2->en_core_web_sm==2.2.5) (4.64.1)\n",
            "Building wheels for collected packages: en-core-web-sm\n",
            "  Building wheel for en-core-web-sm (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for en-core-web-sm: filename=en_core_web_sm-2.2.5-py3-none-any.whl size=12011737 sha256=7376eaa3d755f475f0c5d983d712d81867d9cb37c7df0c8b2216eeebe855f084\n",
            "  Stored in directory: /tmp/pip-ephem-wheel-cache-bybf5lmk/wheels/51/19/da/a3885266a3c241aff0ad2eb674ae058fd34a4870fef1c0a5a0\n",
            "Successfully built en-core-web-sm\n",
            "Installing collected packages: en-core-web-sm\n",
            "  Attempting uninstall: en-core-web-sm\n",
            "    Found existing installation: en-core-web-sm 3.4.0\n",
            "    Uninstalling en-core-web-sm-3.4.0:\n",
            "      Successfully uninstalled en-core-web-sm-3.4.0\n",
            "Successfully installed en-core-web-sm-2.2.5\n",
            "\u001b[38;5;2m✔ Download and installation successful\u001b[0m\n",
            "You can now load the model via spacy.load('en_core_web_sm')\n"
          ]
        }
      ],
      "source": [
        "!python -m spacy download en_core_web_sm\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TNHCk70NfGxb",
        "outputId": "1ca4e447-eb5a-49cd-be30-36255e30b61b"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Collecting beautifulsoup4==4.9.1\n",
            "  Downloading beautifulsoup4-4.9.1-py3-none-any.whl (115 kB)\n",
            "\u001b[K     |████████████████████████████████| 115 kB 4.7 MB/s \n",
            "\u001b[?25hCollecting soupsieve>1.2\n",
            "  Downloading soupsieve-2.3.2.post1-py3-none-any.whl (37 kB)\n",
            "Installing collected packages: soupsieve, beautifulsoup4\n",
            "  Attempting uninstall: beautifulsoup4\n",
            "    Found existing installation: beautifulsoup4 4.6.3\n",
            "    Uninstalling beautifulsoup4-4.6.3:\n",
            "      Successfully uninstalled beautifulsoup4-4.6.3\n",
            "Successfully installed beautifulsoup4-4.9.1 soupsieve-2.3.2.post1\n"
          ]
        }
      ],
      "source": [
        "pip install beautifulsoup4==4.9.1"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "oQvZHpt8fG0d",
        "outputId": "3c8c3ee9-032b-4473-a94c-e07fc15dcf90"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Requirement already satisfied: textblob==0.15.3 in /usr/local/lib/python3.7/dist-packages (0.15.3)\n",
            "Requirement already satisfied: nltk>=3.1 in /usr/local/lib/python3.7/dist-packages (from textblob==0.15.3) (3.7)\n",
            "Requirement already satisfied: regex>=2021.8.3 in /usr/local/lib/python3.7/dist-packages (from nltk>=3.1->textblob==0.15.3) (2022.6.2)\n",
            "Requirement already satisfied: joblib in /usr/local/lib/python3.7/dist-packages (from nltk>=3.1->textblob==0.15.3) (1.2.0)\n",
            "Requirement already satisfied: click in /usr/local/lib/python3.7/dist-packages (from nltk>=3.1->textblob==0.15.3) (7.1.2)\n",
            "Requirement already satisfied: tqdm in /usr/local/lib/python3.7/dist-packages (from nltk>=3.1->textblob==0.15.3) (4.64.1)\n"
          ]
        }
      ],
      "source": [
        "pip install textblob==0.15.3\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0Lur7HynfG2y",
        "outputId": "8c32f4e8-5afb-4bc2-9fff-f8f15fb56296"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Collecting git+https://github.com/laxmimerit/preprocess_kgptalkie.git\n",
            "  Cloning https://github.com/laxmimerit/preprocess_kgptalkie.git to /tmp/pip-req-build-so_hedjg\n",
            "  Running command git clone -q https://github.com/laxmimerit/preprocess_kgptalkie.git /tmp/pip-req-build-so_hedjg\n",
            "Building wheels for collected packages: preprocess-kgptalkie\n",
            "  Building wheel for preprocess-kgptalkie (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Created wheel for preprocess-kgptalkie: filename=preprocess_kgptalkie-0.1.3-py3-none-any.whl size=11756 sha256=8f79b87ae4b2ec2d851a5d2cc1addd599baa57bdf6fcade8ef0deffb2b879917\n",
            "  Stored in directory: /tmp/pip-ephem-wheel-cache-efsll6n1/wheels/0d/b3/29/bfe3deffda68980088d17b81331be6667e837ffb4a071bae82\n",
            "Successfully built preprocess-kgptalkie\n",
            "Installing collected packages: preprocess-kgptalkie\n",
            "Successfully installed preprocess-kgptalkie-0.1.3\n"
          ]
        }
      ],
      "source": [
        "\n",
        "!pip install git+https://github.com/laxmimerit/preprocess_kgptalkie.git --upgrade --force-reinstall\n",
        "\n",
        "\n",
        "    "
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "_PehUquGfG5J"
      },
      "outputs": [],
      "source": [
        "import preprocess_kgptalkie as ps"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "A6DM91bofG7-",
        "outputId": "a37194c7-4a86-4ea8-ba9e-9a7833f39dd2"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "0        As US budget fight looms Republicans flip thei...\n",
              "1        US military to accept transgender recruits on ...\n",
              "2        Senior US Republican senator Let Mr Mueller do...\n",
              "3        FBI Russia probe helped by Australian diplomat...\n",
              "4        Trump wants Postal Service to charge much more...\n",
              "                               ...                        \n",
              "44892    McPain John McCain Furious That Iran Treated U...\n",
              "44893    JUSTICE Yahoo Settles Email Privacy Classactio...\n",
              "44894    Sunnistan US and Allied Safe Zone Plan to Take...\n",
              "44895    How to Blow 700 Million Al Jazeera America Fin...\n",
              "44896    10 US Navy Sailors Held by Iranian Military Si...\n",
              "Name: text, Length: 44897, dtype: object"
            ]
          },
          "execution_count": 45,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "data['text'].apply(lambda x: ps.remove_special_chars(x))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 36
        },
        "id": "3G9P3YN1fG-V",
        "outputId": "b6e83d17-767f-4d01-f0a3-010a0de8eb61"
      },
      "outputs": [
        {
          "data": {
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            },
            "text/plain": [
              "'this is great'"
            ]
          },
          "execution_count": 46,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "ps.remove_special_chars('this ,. @ # is gre@at')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "JpIaLxrGfHAy",
        "outputId": "ee09739c-a4af-4fa7-a752-f2ef8cbd2ff8"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-f3b088c6-4517-4312-be54-c74dc58d34d5\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>text</th>\n",
              "      <th>class</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>As U.S. budget fight looms, Republicans flip t...</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>U.S. military to accept transgender recruits o...</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Senior U.S. Republican senator: 'Let Mr. Muell...</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>FBI Russia probe helped by Australian diplomat...</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Trump wants Postal Service to charge 'much mor...</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f3b088c6-4517-4312-be54-c74dc58d34d5')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-f3b088c6-4517-4312-be54-c74dc58d34d5 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-f3b088c6-4517-4312-be54-c74dc58d34d5');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "                                                text  class\n",
              "0  As U.S. budget fight looms, Republicans flip t...      1\n",
              "1  U.S. military to accept transgender recruits o...      1\n",
              "2  Senior U.S. Republican senator: 'Let Mr. Muell...      1\n",
              "3  FBI Russia probe helped by Australian diplomat...      1\n",
              "4  Trump wants Postal Service to charge 'much mor...      1"
            ]
          },
          "execution_count": 47,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "data.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "06NE4f42fHDQ",
        "outputId": "343b320c-d083-4bd8-f36a-fd5c0bb7bbb4"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Requirement already satisfied: gensim in /usr/local/lib/python3.7/dist-packages (3.6.0)\n",
            "Requirement already satisfied: numpy>=1.11.3 in /usr/local/lib/python3.7/dist-packages (from gensim) (1.21.6)\n",
            "Requirement already satisfied: six>=1.5.0 in /usr/local/lib/python3.7/dist-packages (from gensim) (1.15.0)\n",
            "Requirement already satisfied: smart-open>=1.2.1 in /usr/local/lib/python3.7/dist-packages (from gensim) (5.2.1)\n",
            "Requirement already satisfied: scipy>=0.18.1 in /usr/local/lib/python3.7/dist-packages (from gensim) (1.7.3)\n"
          ]
        }
      ],
      "source": [
        "!pip install gensim"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "_mTbEr3-fHGL"
      },
      "outputs": [],
      "source": [
        "import gensim"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "y1h2kOFCfHIu"
      },
      "outputs": [],
      "source": [
        "y = data['class'].values"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "U4SIGqYMfHMM"
      },
      "outputs": [],
      "source": [
        "X = [d.split() for d in data['text'].tolist()]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jOcOy1QCfHPM",
        "outputId": "f1a6e9c3-6ed6-4154-f04d-c49c93c4e712"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "list"
            ]
          },
          "execution_count": 52,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "type(X[0])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "82zPiFpgfHRd",
        "outputId": "308fbfe0-4657-4664-a91d-7598c56c4d67"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "['As', 'U.S.', 'budget', 'fight', 'looms,', 'Republicans', 'flip', 'their', 'fiscal', 'script', 'The', 'head', 'of', 'a', 'conservative', 'Republican', 'faction', 'in', 'the', 'U.S.', 'Congress,', 'who', 'voted', 'this', 'month', 'for', 'a', 'huge', 'expansion', 'of', 'the', 'national', 'debt', 'to', 'pay', 'for', 'tax', 'cuts,', 'called', 'himself', 'a', '“fiscal', 'conservative”', 'on', 'Sunday', 'and', 'urged', 'budget', 'restraint', 'in', '2018.', 'In', 'keeping', 'with', 'a', 'sharp', 'pivot', 'under', 'way', 'among', 'Republicans,', 'U.S.', 'Representative', 'Mark', 'Meadows,', 'speaking', 'on', 'CBS’', '“Face', 'the', 'Nation,”', 'drew', 'a', 'hard', 'line', 'on', 'federal', 'spending,', 'which', 'lawmakers', 'are', 'bracing', 'to', 'do', 'battle', 'over', 'in', 'January.', 'When', 'they', 'return', 'from', 'the', 'holidays', 'on', 'Wednesday,', 'lawmakers', 'will', 'begin', 'trying', 'to', 'pass', 'a', 'federal', 'budget', 'in', 'a', 'fight', 'likely', 'to', 'be', 'linked', 'to', 'other', 'issues,', 'such', 'as', 'immigration', 'policy,', 'even', 'as', 'the', 'November', 'congressional', 'election', 'campaigns', 'approach', 'in', 'which', 'Republicans', 'will', 'seek', 'to', 'keep', 'control', 'of', 'Congress.', 'President', 'Donald', 'Trump', 'and', 'his', 'Republicans', 'want', 'a', 'big', 'budget', 'increase', 'in', 'military', 'spending,', 'while', 'Democrats', 'also', 'want', 'proportional', 'increases', 'for', 'non-defense', '“discretionary”', 'spending', 'on', 'programs', 'that', 'support', 'education,', 'scientific', 'research,', 'infrastructure,', 'public', 'health', 'and', 'environmental', 'protection.', '“The', '(Trump)', 'administration', 'has', 'already', 'been', 'willing', 'to', 'say:', '‘We’re', 'going', 'to', 'increase', 'non-defense', 'discretionary', 'spending', '...', 'by', 'about', '7', 'percent,’”', 'Meadows,', 'chairman', 'of', 'the', 'small', 'but', 'influential', 'House', 'Freedom', 'Caucus,', 'said', 'on', 'the', 'program.', '“Now,', 'Democrats', 'are', 'saying', 'that’s', 'not', 'enough,', 'we', 'need', 'to', 'give', 'the', 'government', 'a', 'pay', 'raise', 'of', '10', 'to', '11', 'percent.', 'For', 'a', 'fiscal', 'conservative,', 'I', 'don’t', 'see', 'where', 'the', 'rationale', 'is.', '...', 'Eventually', 'you', 'run', 'out', 'of', 'other', 'people’s', 'money,”', 'he', 'said.', 'Meadows', 'was', 'among', 'Republicans', 'who', 'voted', 'in', 'late', 'December', 'for', 'their', 'party’s', 'debt-financed', 'tax', 'overhaul,', 'which', 'is', 'expected', 'to', 'balloon', 'the', 'federal', 'budget', 'deficit', 'and', 'add', 'about', '$1.5', 'trillion', 'over', '10', 'years', 'to', 'the', '$20', 'trillion', 'national', 'debt.', '“It’s', 'interesting', 'to', 'hear', 'Mark', 'talk', 'about', 'fiscal', 'responsibility,”', 'Democratic', 'U.S.', 'Representative', 'Joseph', 'Crowley', 'said', 'on', 'CBS.', 'Crowley', 'said', 'the', 'Republican', 'tax', 'bill', 'would', 'require', 'the', 'United', 'States', 'to', 'borrow', '$1.5', 'trillion,', 'to', 'be', 'paid', 'off', 'by', 'future', 'generations,', 'to', 'finance', 'tax', 'cuts', 'for', 'corporations', 'and', 'the', 'rich.', '“This', 'is', 'one', 'of', 'the', 'least', '...', 'fiscally', 'responsible', 'bills', 'we’ve', 'ever', 'seen', 'passed', 'in', 'the', 'history', 'of', 'the', 'House', 'of', 'Representatives.', 'I', 'think', 'we’re', 'going', 'to', 'be', 'paying', 'for', 'this', 'for', 'many,', 'many', 'years', 'to', 'come,”', 'Crowley', 'said.', 'Republicans', 'insist', 'the', 'tax', 'package,', 'the', 'biggest', 'U.S.', 'tax', 'overhaul', 'in', 'more', 'than', '30', 'years,', 'will', 'boost', 'the', 'economy', 'and', 'job', 'growth.', 'House', 'Speaker', 'Paul', 'Ryan,', 'who', 'also', 'supported', 'the', 'tax', 'bill,', 'recently', 'went', 'further', 'than', 'Meadows,', 'making', 'clear', 'in', 'a', 'radio', 'interview', 'that', 'welfare', 'or', '“entitlement', 'reform,”', 'as', 'the', 'party', 'often', 'calls', 'it,', 'would', 'be', 'a', 'top', 'Republican', 'priority', 'in', '2018.', 'In', 'Republican', 'parlance,', '“entitlement”', 'programs', 'mean', 'food', 'stamps,', 'housing', 'assistance,', 'Medicare', 'and', 'Medicaid', 'health', 'insurance', 'for', 'the', 'elderly,', 'poor', 'and', 'disabled,', 'as', 'well', 'as', 'other', 'programs', 'created', 'by', 'Washington', 'to', 'assist', 'the', 'needy.', 'Democrats', 'seized', 'on', 'Ryan’s', 'early', 'December', 'remarks,', 'saying', 'they', 'showed', 'Republicans', 'would', 'try', 'to', 'pay', 'for', 'their', 'tax', 'overhaul', 'by', 'seeking', 'spending', 'cuts', 'for', 'social', 'programs.', 'But', 'the', 'goals', 'of', 'House', 'Republicans', 'may', 'have', 'to', 'take', 'a', 'back', 'seat', 'to', 'the', 'Senate,', 'where', 'the', 'votes', 'of', 'some', 'Democrats', 'will', 'be', 'needed', 'to', 'approve', 'a', 'budget', 'and', 'prevent', 'a', 'government', 'shutdown.', 'Democrats', 'will', 'use', 'their', 'leverage', 'in', 'the', 'Senate,', 'which', 'Republicans', 'narrowly', 'control,', 'to', 'defend', 'both', 'discretionary', 'non-defense', 'programs', 'and', 'social', 'spending,', 'while', 'tackling', 'the', 'issue', 'of', 'the', '“Dreamers,”', 'people', 'brought', 'illegally', 'to', 'the', 'country', 'as', 'children.', 'Trump', 'in', 'September', 'put', 'a', 'March', '2018', 'expiration', 'date', 'on', 'the', 'Deferred', 'Action', 'for', 'Childhood', 'Arrivals,', 'or', 'DACA,', 'program,', 'which', 'protects', 'the', 'young', 'immigrants', 'from', 'deportation', 'and', 'provides', 'them', 'with', 'work', 'permits.', 'The', 'president', 'has', 'said', 'in', 'recent', 'Twitter', 'messages', 'he', 'wants', 'funding', 'for', 'his', 'proposed', 'Mexican', 'border', 'wall', 'and', 'other', 'immigration', 'law', 'changes', 'in', 'exchange', 'for', 'agreeing', 'to', 'help', 'the', 'Dreamers.', 'Representative', 'Debbie', 'Dingell', 'told', 'CBS', 'she', 'did', 'not', 'favor', 'linking', 'that', 'issue', 'to', 'other', 'policy', 'objectives,', 'such', 'as', 'wall', 'funding.', '“We', 'need', 'to', 'do', 'DACA', 'clean,”', 'she', 'said.', 'On', 'Wednesday,', 'Trump', 'aides', 'will', 'meet', 'with', 'congressional', 'leaders', 'to', 'discuss', 'those', 'issues.', 'That', 'will', 'be', 'followed', 'by', 'a', 'weekend', 'of', 'strategy', 'sessions', 'for', 'Trump', 'and', 'Republican', 'leaders', 'on', 'Jan.', '6', 'and', '7,', 'the', 'White', 'House', 'said.', 'Trump', 'was', 'also', 'scheduled', 'to', 'meet', 'on', 'Sunday', 'with', 'Florida', 'Republican', 'Governor', 'Rick', 'Scott,', 'who', 'wants', 'more', 'emergency', 'aid.', 'The', 'House', 'has', 'passed', 'an', '$81', 'billion', 'aid', 'package', 'after', 'hurricanes', 'in', 'Florida,', 'Texas', 'and', 'Puerto', 'Rico,', 'and', 'wildfires', 'in', 'California.', 'The', 'package', 'far', 'exceeded', 'the', '$44', 'billion', 'requested', 'by', 'the', 'Trump', 'administration.', 'The', 'Senate', 'has', 'not', 'yet', 'voted', 'on', 'the', 'aid.']\n"
          ]
        }
      ],
      "source": [
        "print(X[0])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "juJBlDRgfHUi"
      },
      "outputs": [],
      "source": [
        "DIM = 100\n",
        "w2v_model = gensim.models.Word2Vec(sentences=X, size=DIM, window=10, min_count=1)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bxyDGVQdfHXO",
        "outputId": "cce90b3f-1024-4cba-d427-84b827bf831a"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "420494"
            ]
          },
          "execution_count": 55,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "len(w2v_model.wv.vocab)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "MuPZz80bfHZ9",
        "outputId": "9f9e73ab-a032-4567-a8d7-50fcab5c4893"
      },
      "outputs": [
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:1: DeprecationWarning: Call to deprecated `__getitem__` (Method will be removed in 4.0.0, use self.wv.__getitem__() instead).\n",
            "  \"\"\"Entry point for launching an IPython kernel.\n"
          ]
        },
        {
          "data": {
            "text/plain": [
              "array([ 0.92004716, -1.7204968 ,  0.4595772 ,  1.1558257 , -1.7749629 ,\n",
              "       -0.7639297 ,  2.3462484 ,  1.3271208 , -1.7757407 , -1.1898915 ,\n",
              "       -0.2391228 ,  2.030371  ,  3.4689949 ,  0.5045601 , -0.47125712,\n",
              "       -1.2452356 ,  0.29422793, -2.9503036 ,  2.0681696 , -1.8752303 ,\n",
              "        0.2960877 , -3.8616583 , -2.0990088 ,  3.9247358 , -0.89884126,\n",
              "        2.089359  , -1.5932893 , -0.59094673, -0.6090896 , -1.1189324 ,\n",
              "       -1.0760509 , -1.879387  , -0.93256134, -0.84533906,  0.9655401 ,\n",
              "        1.1448622 , -0.13581924, -0.5400534 , -1.5931569 , -0.3198836 ,\n",
              "        0.7138719 ,  0.82580036, -0.81181854, -0.71571594,  1.8872914 ,\n",
              "       -1.1161624 ,  3.937251  ,  1.0383979 , -2.5870757 ,  0.73251   ,\n",
              "        0.9543808 , -0.80091846, -1.4316651 ,  0.27471036,  1.0164    ,\n",
              "        2.2275975 , -0.8123415 , -0.7243138 ,  0.3883612 , -2.2332625 ,\n",
              "        0.7587491 , -3.9610803 ,  1.416431  , -1.8185261 ,  0.8500868 ,\n",
              "        0.36991972,  0.84308547, -0.17784372,  1.4812753 , -0.8759233 ,\n",
              "        0.36751556,  0.81935304,  0.26850653,  0.27217552,  0.9808334 ,\n",
              "        1.9308357 ,  1.0726537 , -1.106787  ,  0.30117083,  2.1158109 ,\n",
              "       -0.8079458 ,  0.71869576, -2.9461508 ,  0.05707558, -2.3548965 ,\n",
              "        2.7180572 , -1.3578645 , -1.9254274 , -2.602507  , -2.9710903 ,\n",
              "       -2.7457118 , -1.188591  , -0.8738272 , -0.7141522 ,  1.3679515 ,\n",
              "       -0.21464683,  0.7178536 ,  1.2043043 ,  0.34467182,  0.3744017 ],\n",
              "      dtype=float32)"
            ]
          },
          "execution_count": 56,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "w2v_model['project']"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kLIhD30UfHcz",
        "outputId": "c6683d91-8436-4f9b-c323-f67097680e24"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "[('investment', 0.5773336291313171),\n",
              " ('market', 0.5736491084098816),\n",
              " ('million.That,', 0.5679278373718262),\n",
              " ('incubator', 0.5657656192779541),\n",
              " ('complex', 0.5453794598579407),\n",
              " ('earner', 0.5380817651748657),\n",
              " ('culture,', 0.5375764966011047),\n",
              " ('complication', 0.5367202758789062),\n",
              " ('gap', 0.5320987701416016),\n",
              " ('competition', 0.5299416780471802)]"
            ]
          },
          "execution_count": 57,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        " w2v_model.wv.most_similar('model')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "cR2aCC_-fHfX"
      },
      "outputs": [],
      "source": [
        "tokenizer = Tokenizer()\n",
        "tokenizer.fit_on_texts(X)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "VOJrmlgsfHi1"
      },
      "outputs": [],
      "source": [
        "X = tokenizer.texts_to_sequences(X)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "fVeOQ77Fm9Qa",
        "outputId": "6c4c2ad0-b23a-4cfc-fe57-d7417c332126"
      },
      "outputs": [
        {
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "plt.hist([len(x) for x in X], bins = 700)\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "M6l6k44Pm9TO",
        "outputId": "953e44d4-631a-42c1-87ba-7282acd7c1a1"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "1603"
            ]
          },
          "execution_count": 61,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "nos = np.array([len(x) for x in X])\n",
        "len(nos[nos>1000])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "FF8bfqWPm9V_"
      },
      "outputs": [],
      "source": [
        "maxlen = 1000\n",
        "X = pad_sequences(X, maxlen=maxlen)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "FwhDswV9m9YK",
        "outputId": "77156751-56ca-44aa-92fa-a2d65d2de968"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "1000"
            ]
          },
          "execution_count": 63,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "len(X[101])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "QGnygRx0m9bC"
      },
      "outputs": [],
      "source": [
        "vocab_size = len(tokenizer.word_index) + 1\n",
        "vocab = tokenizer.word_index"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "aSW9e3GTm9fs"
      },
      "outputs": [],
      "source": [
        "def get_weight_matrix(model):\n",
        "    weight_matrix = np.zeros((vocab_size, DIM))\n",
        "    \n",
        "    for word, i in vocab.items():\n",
        "        try: weight_matrix[i] = model.wv[word]\n",
        "        except: print(word, 'not found')\n",
        "\n",
        "    \n",
        "    return weight_matrix"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TO3V6uo-m9iE",
        "outputId": "5520811d-5064-4742-a268-8d819709f1f2"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "\u001b[1;30;43mStreaming output truncated to the last 5000 lines.\u001b[0m\n",
            "sure!check not found\n",
            "magazine:if not found\n",
            "gibbons, not found\n",
            "gibbons not found\n",
            "carving.at not found\n",
            "https://t.co/hzypgkucg6 not found\n",
            "pic.twitter.com/axwls5edpi not found\n",
            "protesters…several not found\n",
            "antifa.another not found\n",
            "pic.twitter.com/yfm9kagu1g not found\n",
            "2017#breaking: not found\n",
            "pic.twitter.com/re8dwumrfd not found\n",
            "2017***warning***video not found\n",
            "graphic:video not found\n",
            "@rebelutionary_z not found\n",
            "pic.twitter.com/rut4v1kmdw not found\n",
            "anarcho-khomeinist not found\n",
            "(@nthrepublic) not found\n",
            "2017la not found\n",
            "removed.attendees not found\n",
            "members.attendees not found\n",
            "media.far-right not found\n",
            "abermarle not found\n",
            "after.rally not found\n",
            "maced not found\n",
            "maced, not found\n",
            "clergy.new not found\n",
            "statue.among not found\n",
            "west.protestors not found\n",
            "faces.using not found\n",
            "noon.unlike not found\n",
            "today:our not found\n",
            "pic.twitter.com/fdxfy6xwu5 not found\n",
            "views.police not found\n",
            "protesters.breaking: not found\n",
            "leos! not found\n",
            "pic.twitter.com/y4jek7ecu4 not found\n",
            "soros.antifa not found\n",
            "#antifaterroristorganization#charlottesville not found\n",
            "pic.twitter.com/mrb7xu4txt not found\n",
            "jewelnel not found\n",
            "*who not found\n",
            "workday?when not found\n",
            "breaks.columbia not found\n",
            "university.does not found\n",
            "?we not found\n",
            "company!muslims not found\n",
            "themsomali not found\n",
            "realitywe not found\n",
            "slope!read not found\n",
            "up…calls not found\n",
            "hater:in not found\n",
            "cops.his not found\n",
            "wsb-tv, not found\n",
            "chicken” not found\n",
            "liberallogic: not found\n",
            "#imwithstupid not found\n",
            "that!a not found\n",
            "brar not found\n",
            "pic.twitter.com/jfe6vxtawg not found\n",
            "dress” not found\n",
            "change?we not found\n",
            "uzinyc, not found\n",
            "dress.what not found\n",
            "garment.twitter not found\n",
            "dress:so not found\n",
            "https://t.co/mxlmdqwg4p not found\n",
            "pic.twitter.com/2wskojhfe5 not found\n",
            "rianna not found\n",
            "croxford not found\n",
            "(@the_crox) not found\n",
            "2017uzinyc not found\n",
            "today.com.last not found\n",
            "81-year not found\n",
            "revenge! not found\n",
            "ontario.the not found\n",
            "arrested.statement not found\n",
            "police:this not found\n",
            "1-800-222-tips, not found\n",
            "reviews:oregon not found\n",
            "standards.moreover, not found\n",
            "manner.amy not found\n",
            "fabbrini, not found\n",
            "christopher.fabbrini not found\n",
            "2013.fabbrini not found\n",
            "with.earlier not found\n",
            "oregonian.a not found\n",
            "90-110.ziegler not found\n",
            "report.fabbrini not found\n",
            "condition.board not found\n",
            "sherrene not found\n",
            "hagenbach, not found\n",
            "hagenbach not found\n",
            "case.fabbrini not found\n",
            "lenora not found\n",
            "said.fabbrini not found\n",
            "intel…now not found\n",
            "company!here not found\n",
            "varney:3 not found\n",
            "background!i not found\n",
            "right?they not found\n",
            "hacked.there not found\n",
            "amazing!as not found\n",
            "story!here not found\n",
            "brothers:abid, not found\n",
            "february.three not found\n",
            "hacking.imran not found\n",
            "schultz.his not found\n",
            "2016.imran not found\n",
            "2016.most not found\n",
            "them.democrats not found\n",
            "investigation.judge not found\n",
            "agents.even not found\n",
            "zarakia: not found\n",
            "rant!via: not found\n",
            "fisherman: not found\n",
            "lol!unfortunately not found\n",
            "them.leave not found\n",
            "city…you not found\n",
            "california! not found\n",
            "below).coming not found\n",
            "centerthis not found\n",
            "center.it not found\n",
            "america!santa not found\n",
            "trumpsince not found\n",
            "respond.many not found\n",
            "congress.santa not found\n",
            "tone.city not found\n",
            "illegally.paid not found\n",
            "this?free not found\n",
            "unlimited?a not found\n",
            "sprinthere not found\n",
            "textsee not found\n",
            "“slave not found\n",
            "plantations:jemele not found\n",
            "sportscenter, not found\n",
            "month.hill not found\n",
            "ravens.the not found\n",
            "ravens, not found\n",
            "flacco not found\n",
            "icymi, not found\n",
            "nathanael not found\n",
            ".slave not found\n",
            "celtics. not found\n",
            "though?read not found\n",
            "his…after not found\n",
            "cornejo, not found\n",
            "dad.cornejo, not found\n",
            "all.he not found\n",
            "all.only not found\n",
            "payments.texas not found\n",
            "states…is not found\n",
            "transformation”? not found\n",
            "election:ilhan not found\n",
            "assimilation?quite not found\n",
            "officenew not found\n",
            "officecandidates not found\n",
            "policy:son not found\n",
            "deeqo not found\n",
            "massdearborn: not found\n",
            "amnesty-pushing not found\n",
            "congresswhy not found\n",
            "law?wrapsnet not found\n",
            "everyone!what not found\n",
            "50,000!some not found\n",
            "refugees.places not found\n",
            "smoalis:isolation not found\n",
            "pic.twitter.com/gxgnzgpi1h not found\n",
            "submissions.dershowitz not found\n",
            "impeached:mr. not found\n",
            "banner…tells not found\n",
            "[0:25]harlow not found\n",
            "“anti-muslim”, not found\n",
            "“anti-female” not found\n",
            "d.c.equipment not found\n",
            "road.although not found\n",
            "skype. not found\n",
            "20-yr-old not found\n",
            "window…judge not found\n",
            "mubashra not found\n",
            "probation.in not found\n",
            "friends.uddin not found\n",
            "friends.she not found\n",
            "neighborhood.shortly not found\n",
            "window.the not found\n",
            "o., not found\n",
            "judge.uddin not found\n",
            "friends.prosecutors not found\n",
            "tribunein not found\n",
            "14-yr not found\n",
            "17-yr not found\n",
            "assaulted.a not found\n",
            "teen.zohair not found\n",
            "foleshill, not found\n",
            "longford not found\n",
            "coventry not found\n",
            "tomari: not found\n",
            "mailwhen not found\n",
            ".https://twitter.com/polnewsforever/status/884063000793165824the not found\n",
            "show.lisa not found\n",
            "documents.police not found\n",
            "fox43 not found\n",
            "summit.an not found\n",
            "https://t.co/muvsqtxqf8 not found\n",
            "pic.twitter.com/kccvdkvlrw not found\n",
            "worldthis not found\n",
            "“distorted not found\n",
            "xvi not found\n",
            "2009.pope not found\n",
            "church.pope not found\n",
            "repubblica).the not found\n",
            "scalfari. not found\n",
            "csnnews not found\n",
            "off… not found\n",
            "oorah! not found\n",
            "arm.it not found\n",
            "2013.see not found\n",
            "words.see not found\n",
            "congregation:i not found\n",
            "conditions.benefit not found\n",
            "whole.for not found\n",
            "man.life not found\n",
            "greeting.donald not found\n",
            "cod, not found\n",
            "celebrations.four not found\n",
            "cerrone, not found\n",
            "kaminski, not found\n",
            "hines, not found\n",
            "times.video not found\n",
            "25.kaminski not found\n",
            "“jihad” not found\n",
            "jordan.it not found\n",
            "term.sarsour not found\n",
            "israel-supporting not found\n",
            "wahaaj, not found\n",
            "bombing.isna, not found\n",
            "sarsour. not found\n",
            "spot.shirley not found\n",
            "now.yamuachi not found\n",
            "full.not not found\n",
            "yamuachi not found\n",
            "now.watch:upon not found\n",
            "kitv. not found\n",
            "#charliegard not found\n",
            "charge!daily not found\n",
            "news!members not found\n",
            "trump…a not found\n",
            "trumpmelania not found\n",
            "broadcaster.brzezinski not found\n",
            "right.later not found\n",
            "states.kate not found\n",
            "law.kate not found\n",
            "deportations.the not found\n",
            "authorities.rep. not found\n",
            "comments:he not found\n",
            "impeachingpresident not found\n",
            "comey.amash, not found\n",
            "starbuck’s not found\n",
            "coffee…you’ll not found\n",
            "ewwwww!fecal not found\n",
            "bbc1 not found\n",
            "nero.social not found\n",
            "tweets:i not found\n",
            "caff not found\n",
            "pic.twitter.com/xvhdc4kcgz not found\n",
            "2017cleanliness not found\n",
            "branches.expert not found\n",
            "matter.meanwhile not found\n",
            "bacteria.all not found\n",
            "bbc/goodhouskeeping not found\n",
            "fence…neighbors not found\n",
            "pittsfield, not found\n",
            "property.just not found\n",
            "hampshire.pittsfield, not found\n",
            "wrapsnetauthorities not found\n",
            "great:neighbors not found\n",
            "homes.so not found\n",
            "background.read not found\n",
            "pigs!” not found\n",
            "southern:antifa not found\n",
            "@lauren_southern not found\n",
            "afpic.twitter.com/drahkbx45h not found\n",
            "2017listen not found\n",
            "cops:just not found\n",
            "pic.twitter.com/udcj0autbk not found\n",
            "it:antifa not found\n",
            "pic.twitter.com/mxymkl8eln not found\n",
            "capitolanother not found\n",
            "pic.twitter.com/32s8f3m4vb not found\n",
            "clinic…the not found\n",
            "bond.***the not found\n",
            "thought.here not found\n",
            "latest:a not found\n",
            "cohorts.assistant not found\n",
            "(jumana) not found\n",
            "america…senator not found\n",
            "sauce” not found\n",
            "mogadishu?isolation not found\n",
            "older…you not found\n",
            "omerdic, not found\n",
            "imam.the not found\n",
            "necklace.the not found\n",
            "husband.sydney not found\n",
            "pic.twitter.com/h3gc534pup not found\n",
            "(@7newssydney) not found\n",
            "2017family not found\n",
            "pru not found\n",
            "goward not found\n",
            "beranton not found\n",
            "wptvthe not found\n",
            "investigation.however, not found\n",
            "wound.in not found\n",
            "whisenant.whisenant not found\n",
            "ebony, not found\n",
            "herald.whisenant not found\n",
            "pacer, not found\n",
            "listed.his not found\n",
            "it.whisenant not found\n",
            "punished.muslim not found\n",
            "assimilation? not found\n",
            "manchester: not found\n",
            "attackthe not found\n",
            "krishnan not found\n",
            "guru-murthy not found\n",
            "rusholme not found\n",
            "descent.but not found\n",
            "ffs.the not found\n",
            ".watch:another not found\n",
            ".@dhsgov not found\n",
            "pic.twitter.com/qzqaqlqtgd not found\n",
            "classroom…terrified not found\n",
            "avail.the not found\n",
            "place.shokingly, not found\n",
            "“frightened” not found\n",
            "gunfire.amal not found\n",
            "forces.she not found\n",
            "ladin not found\n",
            "2011.amal not found\n",
            "scott-clarke not found\n",
            "uk.along not found\n",
            "khairiah not found\n",
            "22.first not found\n",
            "najwa not found\n",
            "attacks.by not found\n",
            "him.outside, not found\n",
            "midnight.she not found\n",
            "windows.bin not found\n",
            "rocked.the not found\n",
            "compound.up not found\n",
            "approaching.bin not found\n",
            "13.amal not found\n",
            "huddled.they not found\n",
            "downstairs.upstairs, not found\n",
            "upwards.one not found\n",
            "shot.sumaiya not found\n",
            "man.seal not found\n",
            "room.amal not found\n",
            "out.o not found\n",
            "laden.meanwhile, not found\n",
            "breathing.little not found\n",
            "amal.she not found\n",
            "miram not found\n",
            "identification.at not found\n",
            "pakastanis not found\n",
            "safiyah, not found\n",
            "safiyah not found\n",
            "father.khairiah, not found\n",
            "osama, not found\n",
            "mailnavy not found\n",
            "alabama! not found\n",
            "orleans.alabama not found\n",
            "commission.african-american not found\n",
            "selma.supporters not found\n",
            "symbols.sen. not found\n",
            "flaws.read not found\n",
            "‘sologamist’ not found\n",
            "groom: not found\n",
            "smalley not found\n",
            "sologamy, not found\n",
            "state.sologamists not found\n",
            "wusa not found\n",
            "her.except not found\n",
            "it.anderson not found\n",
            "exclaimed.anderson not found\n",
            "all?nadine not found\n",
            "herself:read not found\n",
            "happen.a not found\n",
            "[video]and not found\n",
            "[video]see not found\n",
            "hamtramck:in not found\n",
            "detroit-area not found\n",
            "reasons.that not found\n",
            "allowed.five not found\n",
            "away.last not found\n",
            "pna not found\n",
            "cellphones.phones not found\n",
            "khanum, not found\n",
            "phone.like not found\n",
            "music.this not found\n",
            "drinkard, not found\n",
            "sisterhood.read not found\n",
            "sued! not found\n",
            "removal…’bout not found\n",
            "1984a not found\n",
            "toutant not found\n",
            "fight.longtime not found\n",
            "monday.marksbury not found\n",
            "war.last not found\n",
            "concerns.marksbury not found\n",
            "sculpture.read not found\n",
            "“boys, not found\n",
            "creatures” not found\n",
            "playhouse.the not found\n",
            "simon(e) not found\n",
            "condoms.carmichael not found\n",
            "schoolhouses.and not found\n",
            "https://www.youtube.com/watch?v=zkytu7m95pq not found\n",
            "areu not found\n",
            "#portland not found\n",
            "riot:glass not found\n",
            "@portlandpolice not found\n",
            "pic.twitter.com/b5hmirwcwn not found\n",
            "bivins, not found\n",
            "portand not found\n",
            "way.law not found\n",
            "pic.twitter.com/hiuvknfk7z not found\n",
            "2017target not found\n",
            "this?more not found\n",
            "pic.twitter.com/seyrtnvzpl not found\n",
            "2017riot not found\n",
            "blocks! not found\n",
            "pic.twitter.com/zzucqevt3m not found\n",
            "2017group not found\n",
            "pic.twitter.com/smlgveorq5 not found\n",
            "2016arrestees not found\n",
            "pic.twitter.com/9imhqrei1a not found\n",
            "pic.twitter.com/fyenmipk3y not found\n",
            "surprise:#maydaypdx not found\n",
            "#maydaystrike not found\n",
            "#oregon not found\n",
            "#opdx not found\n",
            "#quanicehayes not found\n",
            "#pdx not found\n",
            "thx. not found\n",
            "pic.twitter.com/kqzuwqalok not found\n",
            "dax not found\n",
            "(@anondcc) not found\n",
            "speech!president not found\n",
            "participate.to not found\n",
            "lefty: not found\n",
            "bronx?” not found\n",
            "spewing?reporter: not found\n",
            "march?protester: not found\n",
            "officials.check not found\n",
            "liberals:this not found\n",
            "one!a not found\n",
            "video.we not found\n",
            "fighting.the not found\n",
            "ground.language not found\n",
            "fight:a not found\n",
            "anyone.read not found\n",
            "headscarf”…you not found\n",
            "clue: not found\n",
            "lying/spinning: not found\n",
            "https://www.youtube.com/watch?v=_6mzc5kpr3sif not found\n",
            "them.please not found\n",
            "people…black not found\n",
            "wrote.bryant not found\n",
            "continued:i not found\n",
            "quote.i not found\n",
            "example.instead not found\n",
            "whole.i not found\n",
            "life.real not found\n",
            "friend?we not found\n",
            "(martin not found\n",
            "x) not found\n",
            "example.not not found\n",
            "mores.just not found\n",
            "right?nothing not found\n",
            "start!future not found\n",
            "party.audrey not found\n",
            "babble. not found\n",
            "party.but, not found\n",
            "tootsie not found\n",
            "audrey. not found\n",
            "costume.read not found\n",
            "lines! not found\n",
            "$11k not found\n",
            "force.delta not found\n",
            "opposite:five not found\n",
            "complete.strickland not found\n",
            "storms.strickland not found\n",
            "midtown, not found\n",
            "eyelyn not found\n",
            "arkansas? not found\n",
            "answered.delta not found\n",
            "owners.suzanna not found\n",
            "said.delta not found\n",
            "skyped not found\n",
            "wsbtvin not found\n",
            "hours:if not found\n",
            "sure!<strong>in not found\n",
            "</strong>does not found\n",
            "<strong>audra not found\n",
            "https://twitter.com/foxnews not found\n",
            ">@foxnews</a> not found\n",
            "https://twitter.com/cnn not found\n",
            ">@cnn</a> not found\n",
            "https://t.co/sj9ohk94ik not found\n",
            ">pic.twitter.com/sj9ohk94ik</a></p> not found\n",
            "https://twitter.com/tyler_bridges/status/851214160042106880 not found\n",
            "></script>another not found\n",
            "https://t.co/qfefm8x2cw not found\n",
            ">pic.twitter.com/qfefm8x2cw</a></p> not found\n",
            "https://twitter.com/jaysedavid/status/851223662976004096 not found\n",
            "></script>bridges not found\n",
            ">yahoo</a> not found\n",
            "23-yr not found\n",
            "tent…forces not found\n",
            "boyfriend.the not found\n",
            "siegaue not found\n",
            "lover.the not found\n",
            "police.he not found\n",
            "‘man-spreading’ not found\n",
            "horrible!we not found\n",
            "week:while not found\n",
            "apart.new not found\n",
            "fight.one not found\n",
            "said.j not found\n",
            "bowery/delancey not found\n",
            "said.first not found\n",
            "wounds.via: not found\n",
            "apartment…stabs not found\n",
            "woman…what not found\n",
            "unthinkable! not found\n",
            "halimi, not found\n",
            "arrondissement.the not found\n",
            "4:30am.three not found\n",
            "situation.french not found\n",
            "israel.whilst not found\n",
            "knuckle…boss not found\n",
            "imagine.the not found\n",
            "yells.instead, not found\n",
            "worker.it not found\n",
            "fire…in not found\n",
            "home.brian not found\n",
            "ktvk-tv. not found\n",
            "lisa. not found\n",
            "ellison.police not found\n",
            "crime.meantime, not found\n",
            "ellisons not found\n",
            "ahwatukee not found\n",
            "kmov.comvia: not found\n",
            "humiliation: not found\n",
            "perfume.speaking not found\n",
            "abu-yusuf not found\n",
            ".explaining not found\n",
            "[dressing not found\n",
            "breitbartsharia not found\n",
            "craziness: not found\n",
            "“mankind” not found\n",
            "nau not found\n",
            "cailin not found\n",
            "jefferstold not found\n",
            "gun’…said not found\n",
            "‘posed not found\n",
            "threat’ not found\n",
            "wtvd. not found\n",
            "student.read not found\n",
            "liberal”: not found\n",
            "‘dreamer’: not found\n",
            "out:here not found\n",
            "pic.twitter.com/9chcrruiiv not found\n",
            "(@lionelmedia) not found\n",
            "2017grandmother: not found\n",
            "her:grandmother: not found\n",
            "pic.twitter.com/oy9h7watit not found\n",
            "pic.twitter.com/p5uvjm4ek8 not found\n",
            "pic.twitter.com/a2ms2xqmhn not found\n",
            "surge…restraining not found\n",
            "(mac) not found\n",
            "girls:british not found\n",
            "[video]new not found\n",
            "title:kiwi not found\n",
            "zealand.hubbard, not found\n",
            "iuniarra not found\n",
            "sipaia not found\n",
            "samoa.australia not found\n",
            "fassina not found\n",
            "223kg.read not found\n",
            "sub-humans: not found\n",
            "suspects.after not found\n",
            "yorkironically, not found\n",
            "‘snowflake not found\n",
            "earnhardt, not found\n",
            "“holy not found\n",
            "sh*t!” not found\n",
            "“sign not found\n",
            "times”…man not found\n",
            "kprc. not found\n",
            "erasmo not found\n",
            "arrest.https://www.youtube.com/watch?v=qs9o7xulwsw not found\n",
            "death…just not found\n",
            "abdulgader, not found\n",
            "unconscious.the not found\n",
            "sudan.under not found\n",
            "costs.abdulgader not found\n",
            "elorch, not found\n",
            "elorch not found\n",
            "hoyawe not found\n",
            "“‘haley’s’ not found\n",
            "comet” not found\n",
            "terror-nation not found\n",
            "u.n.…and not found\n",
            "charm.the not found\n",
            "beshar not found\n",
            "jeane not found\n",
            "beheads, not found\n",
            "cannibalizes not found\n",
            "bus…granted not found\n",
            "freedom…no not found\n",
            "monitoring.baker, not found\n",
            "illness.mclean not found\n",
            "delley, not found\n",
            "medication.she not found\n",
            "medication.baker not found\n",
            "bay.in not found\n",
            "newssurely not found\n",
            "dhs) not found\n",
            "left:https://twitter.com/corporatocrazy/status/829894370123927556 not found\n",
            "italy…open not found\n",
            "boat:more not found\n",
            "left.remember not found\n",
            "closed.hundreds not found\n",
            "television.angry not found\n",
            "“pop-stars” not found\n",
            "woman…crowd not found\n",
            "https://www.youtube.com/watch?v=xilsmku67q0 not found\n",
            "order…the not found\n",
            "states.u.s. not found\n",
            "iraq.aclu not found\n",
            "decided.via: not found\n",
            "“die!” not found\n",
            "pic.twitter.com/gr0g7rkohd not found\n",
            "(@kgbveteran) not found\n",
            "racist’? not found\n",
            "heated:tucker not found\n",
            "ways!why not found\n",
            "?https://www.youtube.com/watch?time_continue=684&v=riavxxkarfm not found\n",
            "shop…projects not found\n",
            "pic.twitter.com/yu7m2h6ov8 not found\n",
            "iv:xx not found\n",
            "hotep not found\n",
            "doobs not found\n",
            "(@doedoobs) not found\n",
            "march…find not found\n",
            "https://www.youtube.com/watch?v=ipqrimr8gww not found\n",
            "burning: not found\n",
            "law…women’s not found\n",
            "dissapointed not found\n",
            "islamaphobia! not found\n",
            "pic.twitter.com/fjn3wq7p7p not found\n",
            "fit…clearly not found\n",
            "d.c.near not found\n",
            "fire.keep not found\n",
            "pic.twitter.com/xtvcoy9pwc not found\n",
            "https://t.co/9bajc0h2bu not found\n",
            "2017folks, not found\n",
            "pic.twitter.com/wfkjnracfk not found\n",
            "mascots…while not found\n",
            "2005.a not found\n",
            "mascots.a not found\n",
            "chieftains not found\n",
            "braves.not not found\n",
            "potawatomi:central not found\n",
            "chippewas not found\n",
            "upheld.the not found\n",
            "potawatomi not found\n",
            "mascots.that not found\n",
            "office…obama not found\n",
            "crime…discusses not found\n",
            "thugs…forced not found\n",
            "[video} not found\n",
            "cbsyoutube not found\n",
            "it!#breaking: not found\n",
            "https://t.co/ty2rbok0je not found\n",
            "pic.twitter.com/m0z6yrrtui not found\n",
            "2015wichita, not found\n",
            "show.court not found\n",
            "martinez-maldonado not found\n",
            "respectively.for not found\n",
            "“tyler not found\n",
            "payne” not found\n",
            "women.actor not found\n",
            "twitter.everyone not found\n",
            "women.one not found\n",
            "partner.we've not found\n",
            "https://t.co/37vv8gybnt not found\n",
            "(@lancegross) not found\n",
            "bulletproof: not found\n",
            "items.we not found\n",
            "thoughts?read not found\n",
            "liberal’s not found\n",
            "sharia-law not found\n",
            "america.don not found\n",
            "rooftops:kamandar not found\n",
            "bakhtiar, not found\n",
            "isis-khorasan: not found\n",
            "pic.twitter.com/ukokg63ft5 not found\n",
            "cracker!” not found\n",
            "tots! not found\n",
            "geographic, not found\n",
            "infowarswe not found\n",
            "https://t.co/afw1vjwvwh not found\n",
            "#genderrevolution not found\n",
            "pic.twitter.com/xvzknddvum not found\n",
            "(@natgeo) not found\n",
            "(@scottlaw9) not found\n",
            "luxury-yacht not found\n",
            "2016https://twitter.com/chamgurogi/status/809800916484456448these not found\n",
            "qed: not found\n",
            "@natgeo not found\n",
            "pic.twitter.com/h33ohchq64 not found\n",
            "(@sgt_bravo) not found\n",
            "bear: not found\n",
            "will’ not found\n",
            "hacking”…runs not found\n",
            "postrussia not found\n",
            "fake…turning not found\n",
            "todayat not found\n",
            "wrong.arpaio not found\n",
            "todayremember not found\n",
            "certificate?the not found\n",
            "crash.the not found\n",
            "molokai, not found\n",
            "fuddy, not found\n",
            "matsuda, not found\n",
            "fuddy not found\n",
            "death.fuddy, not found\n",
            "president.makani not found\n",
            "honolulu-based not found\n",
            "todayarpaio not found\n",
            "forged.they not found\n",
            "911chief not found\n",
            "rowe’s not found\n",
            "‘mere not found\n",
            "symbol’ not found\n",
            "town…somali not found\n",
            "harir not found\n",
            "ayanle not found\n",
            "response.breitbart not found\n",
            "added.crookston, not found\n",
            "‘holiday’ not found\n",
            "messages.jake not found\n",
            "licenses.but not found\n",
            "asking:tapper: not found\n",
            "boom!https://youtu.be/t7tc3gr0d5m not found\n",
            "republicans”…this not found\n",
            "media.gimme not found\n",
            "break!!!! not found\n",
            "ridiculous!read not found\n",
            "tank.muslims not found\n",
            "theorists.a not found\n",
            "mawyer not found\n",
            "report.here not found\n",
            "compounds:watch not found\n",
            "states:alex not found\n",
            "satanic-zionist not found\n",
            "islam.muslims not found\n",
            "@seiu not found\n",
            "#fightfor15 not found\n",
            "pic.twitter.com/9aiv8x3yiq not found\n",
            "it.seated not found\n",
            "pic.twitter.com/xk1alcekpt not found\n",
            "cali-bano not found\n",
            "(@curiogorilla) not found\n",
            "lilia not found\n",
            "mouline, not found\n",
            "amherst.the not found\n",
            "pic.twitter.com/1um9ry2ma8 not found\n",
            "job!via: not found\n",
            "learn…now! not found\n",
            "learn:1. not found\n",
            "irrelevant2. not found\n",
            "be3. not found\n",
            "money4. not found\n",
            "exist6. not found\n",
            "it7. not found\n",
            "homeread not found\n",
            "reynoso, not found\n",
            "structureironically, not found\n",
            "texas-austin not found\n",
            "administrators.sorority not found\n",
            "halloween.though not found\n",
            "costumes.don not found\n",
            "celebritiesthe not found\n",
            "halloween.it not found\n",
            "checklist.the not found\n",
            "teacher.a not found\n",
            "recording.in not found\n",
            "asked.norman not found\n",
            "siano, not found\n",
            "kforvia: not found\n",
            "nation.hillary not found\n",
            "hammered: not found\n",
            "“‘weak-kneed, not found\n",
            "‘despicable not found\n",
            "cowardice’ not found\n",
            "clovis. not found\n",
            "declared.marlow not found\n",
            "watch:https://youtu.be/jgx6xrz0zlq not found\n",
            "words…caught not found\n",
            "january:i not found\n",
            "\"rapist\". not found\n",
            "things!hrc not found\n",
            "1990s.hillary not found\n",
            "c-span.https://youtu.be/beeiimrcp4evia: not found\n",
            "majesty”: not found\n",
            "task…and not found\n",
            "rosters.with not found\n",
            "worked!although not found\n",
            "storbl not found\n",
            "strobl. not found\n",
            "u-m not found\n",
            "fix.university not found\n",
            "pic.twitter.com/n7po5mwtao not found\n",
            "website.since not found\n",
            "srobl not found\n",
            "graphic!*** not found\n",
            "means.watch: not found\n",
            "parents” not found\n",
            "“blonde, not found\n",
            "cheerful” not found\n",
            "families…could not found\n",
            "right-wingers” not found\n",
            "world.asserting not found\n",
            ".this, not found\n",
            "alleges.researcher not found\n",
            "prausner, not found\n",
            "normal.because not found\n",
            "progeny.they not found\n",
            "prausner not found\n",
            ".k not found\n",
            "germanic not found\n",
            ".mothers not found\n",
            "[stolen] not found\n",
            "gun…wife not found\n",
            "wifethe not found\n",
            "fingerprints?finally not found\n",
            "unrest.what not found\n",
            "find:charlotte not found\n",
            "rakeyia not found\n",
            "treehouseadditionally, not found\n",
            "wscotv:(6:00pm not found\n",
            "custody.three not found\n",
            "releases):the not found\n",
            "statement:there not found\n",
            "shooting.two not found\n",
            "gun.due not found\n",
            "officers.upon not found\n",
            "scott.mr. not found\n",
            "scene.homicide not found\n",
            "event.attached not found\n",
            "scottthe not found\n",
            "job.she not found\n",
            "line.order not found\n",
            "bible-clinging, not found\n",
            "#blacklivesmatter…nfl not found\n",
            "mariners not found\n",
            "callerhis not found\n",
            "@mariners, not found\n",
            "(@clev_45) not found\n",
            "pic.twitter.com/4vrllnbvp0 not found\n",
            "tweet:go not found\n",
            "https://t.co/r5a1lcmevf not found\n",
            "crowell? not found\n",
            "gun…drop not found\n",
            "f*#king not found\n",
            "gun!” not found\n",
            "them.several not found\n",
            "book.neighbor not found\n",
            "gun:and not found\n",
            "rdkeyia not found\n",
            "video****#breaking: not found\n",
            "immigrants…”i not found\n",
            "spanish” not found\n",
            "spanish? not found\n",
            "to.at not found\n",
            "states.now, not found\n",
            "be.hispanic not found\n",
            "tougher.langlois not found\n",
            "father-in-law.the not found\n",
            "next.so not found\n",
            "cnn/kaiser not found\n",
            "immigration.working-class not found\n",
            "grads.those not found\n",
            "zavaleta not found\n",
            "mexico.a not found\n",
            "landscapedebates not found\n",
            "albertville; not found\n",
            "personal.this not found\n",
            "thing.five not found\n",
            "work.albertville not found\n",
            "immigrants.more not found\n",
            "area.terrified not found\n",
            "towns.but not found\n",
            "parents.now, not found\n",
            "congregation.eateries not found\n",
            "catfish.the not found\n",
            "changed.but not found\n",
            "simmering.stop not found\n",
            "legally.sit not found\n",
            "system.step not found\n",
            "walmart.cross not found\n",
            "lead.could not found\n",
            "choice?as not found\n",
            "cnn/kff not found\n",
            "them.more not found\n",
            "https://t.co/uq8xoonfyn not found\n",
            "justice…nc not found\n",
            "“injustice” not found\n",
            "crimes43-year-old not found\n",
            "walmart? not found\n",
            "nc.fox not found\n",
            "reported:protesters not found\n",
            "interstate-85 not found\n",
            "scott.officers not found\n",
            "entrance.walmart not found\n",
            "pic.twitter.com/xnxovnjlj9 not found\n",
            "(@brianfox46) not found\n",
            "ipads.walmart not found\n",
            "pallets.protesters not found\n",
            "#wakeupwith9 not found\n",
            "pic.twitter.com/nnl7xg7dkt not found\n",
            "wsoc: not found\n",
            "pic.twitter.com/og3t2zw2wd not found\n",
            "kaepernicks not found\n",
            "travesty.recently not found\n",
            "muslin-colin not found\n",
            "compromised.the not found\n",
            "misguided.garfield not found\n",
            "(seattle) not found\n",
            "#seattle not found\n",
            "pic.twitter.com/o362ugxmd2 not found\n",
            "hautehoopla not found\n",
            "(@hautehoopla) not found\n",
            "left.h/t not found\n",
            "cons. not found\n",
            "“terror” not found\n",
            "muslims.richard not found\n",
            "fowler: not found\n",
            "else.h/t not found\n",
            "“happily not found\n",
            "donate” not found\n",
            "anti-jew, not found\n",
            "pinkett-smith? not found\n",
            "ameirca?// not found\n",
            "]]>last not found\n",
            "people:https://youtu.be/zvsa44-c9xg not found\n",
            "anthem.during not found\n",
            "officers.kaepernick not found\n",
            "critics:dear not found\n",
            "stand.other not found\n",
            "expect:us not found\n",
            "#oppressedmillionaires not found\n",
            "https://t.co/luaar0ik7d not found\n",
            "2016lowe not found\n",
            "(@smb06) not found\n",
            "above:i not found\n",
            "https://t.co/1n0dcdrsic not found\n",
            "cops:don not found\n",
            "#southpark not found\n",
            "@comedycentral not found\n",
            "pic.twitter.com/eqekquuf0g not found\n",
            "(@southpark) not found\n",
            "here:this not found\n",
            "nuts.never not found\n",
            "detroiter. not found\n",
            "concerts.fox not found\n",
            "center.kid not found\n",
            "actions.hey not found\n",
            "9-11…today, not found\n",
            "“humbly not found\n",
            "begs” not found\n",
            "page.from not found\n",
            "page.dear not found\n",
            "wilson,my not found\n",
            "injuries.i not found\n",
            "attack.on not found\n",
            "individuals.every not found\n",
            "everlasting.america.i not found\n",
            "09/11/2001.to not found\n",
            "for.you not found\n",
            "heard.please, not found\n",
            "country.stand not found\n",
            "banner.we not found\n",
            "you.respectfully, not found\n",
            "fanrussell not found\n",
            "anthem…because…”it’s not found\n",
            "navy.disciplinary not found\n",
            "ucmj not found\n",
            "bong.the not found\n",
            "jihadess not found\n",
            "couple.french not found\n",
            "h., not found\n",
            "aballa, not found\n",
            "25.aballa not found\n",
            "dead.molins not found\n",
            "abballa, not found\n",
            "magnanville not found\n",
            "raid.he not found\n",
            "kermiche, not found\n",
            "dgsi, not found\n",
            "cazeneuve not found\n",
            "bossy-saint-antoine, not found\n",
            "essonne not found\n",
            "effort…obama not found\n",
            "mission?a not found\n",
            "vineyard.according not found\n",
            "mission.obama not found\n",
            "vineyard.on not found\n",
            "reports.fore not found\n",
            "-karl not found\n",
            "marxearly not found\n",
            "dqla6. not found\n",
            "[edwards] not found\n",
            "horner, not found\n",
            "dequincy. not found\n",
            "edwards; not found\n",
            "people.georgetown not found\n",
            "degioia not found\n",
            "university.on not found\n",
            "screams: not found\n",
            "charges.ahmed not found\n",
            "alshami, not found\n",
            "system.alshami not found\n",
            "iga not found\n",
            "ludington not found\n",
            "buffalo.according not found\n",
            "worth.it not found\n",
            "$3,811.56.the not found\n",
            "units.alshami not found\n",
            "charges.outside not found\n",
            "wkbw not found\n",
            "song…dancers not found\n",
            "‘shot’ not found\n",
            "vmas not found\n",
            "bowl? not found\n",
            "#vma not found\n",
            "https://t.co/lyvffrieno not found\n",
            "(@mtv) not found\n",
            "jersey…with not found\n",
            "playing…awesome! not found\n",
            "trend! not found\n",
            "background!furious not found\n",
            "protest.one not found\n",
            "burned.another, not found\n",
            "nate3914, not found\n",
            "childish.tomi not found\n",
            "students…”trigger not found\n",
            "nonsense.after not found\n",
            "warrior/black not found\n",
            "pic.twitter.com/9ep3n0zbgv not found\n",
            "(@chicagomaroon) not found\n",
            "tool.it not found\n",
            "touch.the not found\n",
            "election.recent not found\n",
            "international.on not found\n",
            "nevada:under not found\n",
            "“dixie” not found\n",
            "year…there not found\n",
            "tradition… not found\n",
            "inclusiveness! not found\n",
            "colleges! not found\n",
            "games.ole not found\n",
            "traditions.dixie not found\n",
            "vaught-hemingway not found\n",
            "disease…has not found\n",
            "walking…flashing not found\n",
            "here:they not found\n",
            "post)watch not found\n",
            "story.at not found\n",
            "media…should not found\n",
            "pm.semenya not found\n",
            "warning.. not found\n",
            "pic.twitter.com/i5hqsybobl not found\n",
            "runner.last not found\n",
            "guard.there not found\n",
            "saturday.it not found\n",
            "sisemenya not found\n",
            "strength.an not found\n",
            "unbeatable.the not found\n",
            "important.semenya not found\n",
            "telegraphwatch not found\n",
            "characteristics.semenya, not found\n",
            "testosterone.only not found\n",
            "medal.south not found\n",
            "semenya, not found\n",
            "iaaf.the not found\n",
            "butana not found\n",
            "komphela not found\n",
            "snuff.represented not found\n",
            "mccaskey not found\n",
            "shuford, not found\n",
            "district] not found\n",
            "learners, not found\n",
            "courtroom.khadidja not found\n",
            "said.issa, not found\n",
            "wednesday.ms. not found\n",
            "investigation…let not found\n",
            "taken:ryan not found\n",
            "thiago not found\n",
            "go!team not found\n",
            "feigen, not found\n",
            "moment.read not found\n",
            "milwaukee…honors not found\n",
            "card…brings not found\n",
            "(#imwithher).jayrome not found\n",
            "hillary:here not found\n",
            "jerome!) not found\n",
            "gun:https://twitter.com/brothertooturnt/status/765033077995343872https://twitter.com/brothertooturnt/status/764682372746973184https://twitter.com/brothertooturnt/status/764681054846328832jayrome not found\n",
            "loot:https://twitter.com/brothertooturnt/status/764706238894604288here not found\n",
            "https://twitter.com/brothertooturnt/status/764889161623011329here not found\n",
            "he?https://twitter.com/brothertooturnt/status/764710518443704320here not found\n",
            "forgi not found\n",
            "need…take not found\n",
            "suburbs…burn not found\n",
            "down…we not found\n",
            "sherelle, not found\n",
            "them.sylville not found\n",
            "smith's not found\n",
            "sherelle not found\n",
            "pic.twitter.com/prxr2prcuv not found\n",
            "@mongoaggression not found\n",
            "#milwaukee not found\n",
            "pic.twitter.com/61jrpk2q7w not found\n",
            "officers.smith not found\n",
            "fox6nowresidents not found\n",
            "crowds.the not found\n",
            "night:#breaking: not found\n",
            "#milwaukeestreets, not found\n",
            "property#milwaukeeunrestpic.twitter.com/isdvm7qdpz not found\n",
            "alwaysactions not found\n",
            "(@alwaysactions) not found\n",
            "over…interesting not found\n",
            "side.city not found\n",
            "sentinelhere not found\n",
            "record:court not found\n",
            "fox6nowhere not found\n",
            "friends:he not found\n",
            "guns.this not found\n",
            "other”…blames not found\n",
            "dad” not found\n",
            "smith.court not found\n",
            "october.fox6 not found\n",
            "bayatpour not found\n",
            "followed:angry not found\n",
            "night/sunday not found\n",
            "earlier.protesters not found\n",
            "sky.the not found\n",
            "custody.smith not found\n",
            "officer.he not found\n",
            "fox6now not found\n",
            "mosque…witnesses not found\n",
            "man…guess not found\n",
            "queens.police not found\n",
            "maulama not found\n",
            "park.both not found\n",
            "dead.his not found\n",
            "later.imam not found\n",
            "1.50pm.both not found\n",
            "condition.witnesses not found\n",
            "hispanic.they not found\n",
            "whites: not found\n",
            "folks”…”don’t not found\n",
            "white.student not found\n",
            "added.dalia not found\n",
            "poc, not found\n",
            "roschdi not found\n",
            "college.another not found\n",
            "saint-fleur not found\n",
            "[pitzer not found\n",
            "reformvia: not found\n",
            "efimova not found\n",
            "test.efimova not found\n",
            "meili not found\n",
            "]king not found\n",
            "efimova, not found\n",
            "janeiro.as not found\n",
            "magnitude?the not found\n",
            "event.hey not found\n",
            "like:https://youtu.be/bfdhd3ucyauat not found\n",
            "rogge not found\n",
            "nawal not found\n",
            "moutawakel not found\n",
            "concluded.lula, not found\n",
            "announcement.lula, not found\n",
            "knowledge.judge not found\n",
            "immunity.moro not found\n",
            "her.rousseff not found\n",
            "man.signs not found\n",
            "inside.saudi not found\n",
            "veils.western not found\n",
            "inside.women not found\n",
            "faces.saudi not found\n",
            "gender.they not found\n",
            "themprotesters not found\n",
            "stores.a not found\n",
            "#stopenslavingsaudiwomen not found\n",
            "chaperone.earlier not found\n",
            "drink.via: not found\n",
            "games!the not found\n",
            "teletubbies?then not found\n",
            "propaganda! not found\n",
            "ugh!one not found\n",
            "tonga not found\n",
            "usa!michael not found\n",
            "doubters!jack not found\n",
            ".dear not found\n",
            "obama:it not found\n",
            "unfit?this not found\n",
            "unfit?less not found\n",
            "unfit?as not found\n",
            "unfit?leftist not found\n",
            "hitchens not found\n",
            "unfit?says not found\n",
            "unfit?by not found\n",
            "unfit?after not found\n",
            "unfit?one not found\n",
            "safire not found\n",
            "filegate. not found\n",
            "really?i not found\n",
            "rapist.as not found\n",
            "controversial.in not found\n",
            "woodstock not found\n",
            "ajc. not found\n",
            "cotriss, not found\n",
            "denies.cotriss not found\n",
            "ovation.the not found\n",
            "jenkins. not found\n",
            "girl.a not found\n",
            "petra.fathey not found\n",
            "jumping.judge not found\n",
            "vanderschoor not found\n",
            "warrant.kennewick not found\n",
            "fathey, not found\n",
            "said.holt not found\n",
            "tri-cities, not found\n",
            "holt.prosecutors not found\n",
            "said.before not found\n",
            "called.fathey not found\n",
            "crimes.read not found\n",
            "vimmerby, not found\n",
            "harassment.it not found\n",
            "face…screamed not found\n",
            "“tight not found\n",
            "jeans”…muslim not found\n",
            "face.krissoni not found\n",
            "31-year-old.the not found\n",
            "at.in not found\n",
            "reasoning.and not found\n",
            "witness.he not found\n",
            "face.eventually not found\n",
            "#lawsmatter: not found\n",
            "pin.youngstown not found\n",
            "underway.burton not found\n",
            "jail.milich not found\n",
            "said.watch:the not found\n",
            "said.legal not found\n",
            "wkbn not found\n",
            "machete…german not found\n",
            "reusch not found\n",
            "newsupdate:the not found\n",
            "worse.video not found\n",
            "liberals…but not found\n",
            "hours.cleveland not found\n",
            "injuries.it not found\n",
            "convention.activists not found\n",
            "other.kplc not found\n",
            "[video]…#obamaswaroncops not found\n",
            "edgerton.the not found\n",
            "hit.melton not found\n",
            "p.m.authorities not found\n",
            "kctv5police not found\n",
            "kshbupdate: not found\n",
            "custody.police not found\n",
            "suspects.police not found\n",
            "home.about not found\n",
            "way.next not found\n",
            "house.about not found\n",
            "scene.read not found\n",
            "kansascity.com not found\n",
            "“scantily not found\n",
            "dressed”…”the not found\n",
            "garde-colombe not found\n",
            "mother.jean-marc not found\n",
            "duprat, not found\n",
            "laragne-monteglin not found\n",
            "arrested.amaury not found\n",
            "navarranne not found\n",
            "screwed: not found\n",
            "raped” not found\n",
            "they?stickers not found\n",
            "nybro, not found\n",
            "media.jihad not found\n",
            "merciful. not found\n",
            "justified.how not found\n",
            "sweden!one not found\n",
            "tider not found\n",
            "emmaboda not found\n",
            "packets.but not found\n",
            "read.they not found\n",
            "argued.via: not found\n",
            "convention…will not found\n",
            "assemble” not found\n",
            "states.bikers not found\n",
            "says:none not found\n",
            "views:via: not found\n",
            "home…screamed not found\n",
            "(impd) not found\n",
            "her.investigators not found\n",
            "car.neighbors not found\n",
            "a.m.ratney not found\n",
            "room.at not found\n",
            "wxin not found\n",
            "audience” not found\n",
            "sweden…several not found\n",
            "minors.several not found\n",
            "molestation.in not found\n",
            "migrants.according not found\n",
            "crimes.crimes not found\n",
            "s.according not found\n",
            "cologne.this not found\n",
            "bravalla not found\n",
            "norrkoping not found\n",
            "putte not found\n",
            "parken not found\n",
            "karlstad. not found\n",
            "harm?detroit not found\n",
            "weekley not found\n",
            "weekley. not found\n",
            "morning.officer not found\n",
            "frommer.mckenzie not found\n",
            "hit.frommer not found\n",
            "said.frommer not found\n",
            "said.mejia not found\n",
            "wehrle, not found\n",
            "employed.in not found\n",
            "claimed.another not found\n",
            "wehrle not found\n",
            "killed…cowardly not found\n",
            "“upset” not found\n",
            "friday.lakeem not found\n",
            "keon not found\n",
            "investigation.investigators not found\n",
            "tbi. not found\n",
            "tbi not found\n",
            "preliminarily, not found\n",
            "shootings…taunt, not found\n",
            "watch:twitter not found\n",
            "location:this not found\n",
            "mournshare not found\n",
            "pic.twitter.com/x47myf3nmz not found\n",
            "(@thattrumpguy) not found\n",
            "id’d: not found\n",
            "report.racist not found\n",
            "named.thompson, not found\n",
            "grandfather.officer not found\n",
            "2014:ironically, not found\n",
            "homeland.it not found\n",
            "minnesota.after not found\n",
            "dallas.he not found\n",
            "protesters:johnson not found\n",
            "shootings:is not found\n",
            "sources.a not found\n",
            "delphene not found\n",
            "mesquite.johnson not found\n",
            "available.johnson not found\n",
            "brown.police not found\n",
            "conference.police not found\n",
            "standoff.boulware not found\n",
            "dallas.via: not found\n",
            "page:black not found\n",
            "blackpower not found\n",
            "blackknights not found\n",
            "goal! not found\n",
            "assassins, not found\n",
            "means! not found\n",
            "eg: not found\n",
            "control!thank not found\n",
            "updates: not found\n",
            "died…sniper not found\n",
            "shot…first not found\n",
            "identified…”person not found\n",
            "today:dallas not found\n",
            "released:breaking: not found\n",
            "pic.twitter.com/lgjoghuorj not found\n",
            "thompson:dart not found\n",
            "id's not found\n",
            "https://t.co/pbdha8nfqm not found\n",
            "pic.twitter.com/zcmwtgbytl not found\n",
            "news:\"i not found\n",
            "https://t.co/adbgwqmc77 not found\n",
            "@cbsdfw not found\n",
            "(@cbs11andrea) not found\n",
            "2016mark not found\n",
            "released.this not found\n",
            "https://t.co/jmmcm5zull not found\n",
            "pic.twitter.com/gbflupy6sx not found\n",
            "speech:don't not found\n",
            "(@leighdow) not found\n",
            "barbee not found\n",
            "(@baylorbarbee) not found\n",
            "convention”… not found\n",
            "“martial not found\n",
            "declared.that not found\n",
            "activists.on not found\n",
            "sun.on not found\n",
            "twitterer not found\n",
            "(@thesaintnegro) not found\n",
            "kckesson not found\n",
            "(netta), not found\n",
            "(dm) not found\n",
            "(je), not found\n",
            "(s):je: not found\n",
            "[sam?] not found\n",
            "seriously.as not found\n",
            "speri not found\n",
            "july.on not found\n",
            "term.via: not found\n",
            "place…the not found\n",
            "group?chief not found\n",
            "tx.please not found\n",
            "families.update: not found\n",
            "pic.twitter.com/ukwszjezo3 not found\n",
            "2016#update not found\n",
            "(chopper11) not found\n",
            "pic.twitter.com/6gnauwvvfr not found\n",
            "scene.#breaking not found\n",
            "pic.twitter.com/u8obkcqhja not found\n",
            "fox4terry not found\n",
            "(@fox4terry) not found\n",
            "va…make not found\n",
            "pearce, not found\n",
            "15.kris not found\n",
            "sscc, not found\n",
            "reformpearce not found\n",
            "college:when not found\n",
            "[sscc not found\n",
            "roades not found\n",
            "“trumpocalypse”: not found\n",
            "(riots) not found\n",
            "convention.democrats not found\n",
            "convention.hundreds not found\n",
            "-gpthe not found\n",
            "trumpocalypse, not found\n",
            "proclivities.the not found\n",
            "her…big not found\n",
            "minor?…why not found\n",
            "list…and not found\n",
            "fayetteville.shanika not found\n",
            "street.she not found\n",
            "murder.minor, not found\n",
            "air.shortly not found\n",
            "announcement.when not found\n",
            "listed.according not found\n",
            "her.deputies not found\n",
            "custody.via: not found\n",
            "fayobserver not found\n",
            "ramadan” not found\n",
            "pastor:minneapolis-st. not found\n",
            "minnesota.designated not found\n",
            "(council not found\n",
            "islam.apparently, not found\n",
            "reporter.i not found\n",
            "shooting.rector not found\n",
            "divinity.so, not found\n",
            "akbar”…takes not found\n",
            "“foreigners” not found\n",
            "islamic? not found\n",
            "developing: not found\n",
            "friday.isis not found\n",
            "attack.bangladesh not found\n",
            "holey not found\n",
            "hostage.the not found\n",
            "explosions.jamuna not found\n",
            "attack.sumon not found\n",
            "rab, not found\n",
            "greater” not found\n",
            "campaign?we not found\n",
            "campaign:anti-jihad not found\n",
            "pam[ela] not found\n",
            "tillison not found\n",
            "christian):anti-jihad not found\n",
            "muhammad.geller, not found\n",
            "quotes:geller not found\n",
            "building.and not found\n",
            "islam.in not found\n",
            "documentary.if not found\n",
            "this?, not found\n",
            "extremist.via: not found\n",
            "obama…and not found\n",
            "newspaper.those not found\n",
            "sets.if not found\n",
            "home?this not found\n",
            "tricky.someone not found\n",
            "endless.even not found\n",
            "ulysses.your not found\n",
            "ulysses. not found\n",
            "parasite! not found\n",
            "neo-nazi-rag not found\n",
            "revenge.another not found\n",
            "speaker.it not found\n",
            "fire…wreaked not found\n",
            "city…gets not found\n",
            "pic.twitter.com/o2nbednimk not found\n",
            "justice.until not found\n",
            "now.cbs not found\n",
            "that:prosecutors not found\n",
            "police.feds not found\n",
            "pic.twitter.com/xealntt2g2 not found\n",
            "(@rickritterwjz) not found\n",
            "attorney.in not found\n",
            "mayhem.when not found\n",
            "“immense” not found\n",
            "agree?for not found\n",
            "kilauea, not found\n",
            "kauai not found\n",
            "unclear.multiple not found\n",
            "tgi not found\n",
            "shosana not found\n",
            "chantara, not found\n",
            "chantara not found\n",
            "macmillan, not found\n",
            "course…learn not found\n",
            "preference?it not found\n",
            "lgtbqi not found\n",
            "said.(it not found\n",
            "intersex.)the not found\n",
            "biederman, not found\n",
            "investigation…but not found\n",
            "cairo-born not found\n",
            "wfaa.com not found\n",
            "abdel-hafiz. not found\n",
            "dallas.and not found\n",
            "said.responding not found\n",
            "[abdel-hafiz] not found\n",
            "gunworks not found\n",
            "civilians.in not found\n",
            "owner?shockingly, not found\n",
            "flessner not found\n",
            "2002:wright not found\n",
            "american/egyptian not found\n",
            "9/11:knowing not found\n",
            "unc: not found\n",
            "“golf not found\n",
            "outings” not found\n",
            "microagressions.the not found\n",
            "about.christmas not found\n",
            "microagression.golf not found\n",
            "finley not found\n",
            "administrators.)the not found\n",
            "scolds.still not found\n",
            "adhd not found\n",
            "skinthe not found\n",
            "sharbari not found\n",
            "coordinator.in not found\n",
            "dey not found\n",
            "band-aids not found\n",
            "workshop.via: not found\n",
            "2014.harvard not found\n",
            "rate.from not found\n",
            "website:student not found\n",
            "profile:harvard not found\n",
            "institutions.harvard not found\n",
            "professions.blanca not found\n",
            "five.tuition not found\n",
            "year.morales not found\n",
            "page.she not found\n",
            "professionals.since not found\n",
            "guest-workers.the not found\n",
            "2014.lawyers not found\n",
            "residency.daca not found\n",
            "johnson.several not found\n",
            "(r-ut).united not found\n",
            "illegally.favoritism not found\n",
            "august:people not found\n",
            "crime.baltimore not found\n",
            "african-american; not found\n",
            "chief.after not found\n",
            "said.goodson not found\n",
            "mistrial.mosby not found\n",
            "idaho…why not found\n",
            "rebellion.on not found\n",
            "idaho-based not found\n",
            "kmvt not found\n",
            "respond.pro-mass not found\n",
            "feet.instead, not found\n",
            "about!police not found\n",
            "third.here not found\n",
            "accountable.why? not found\n",
            "secrecy.members not found\n",
            "hohmann, not found\n",
            "hohmann not found\n",
            "recounted.davis not found\n",
            "family.neither not found\n",
            "odell. not found\n",
            "schlema not found\n",
            "muller. not found\n",
            "week.joshua not found\n",
            "b.j. not found\n",
            "ficker not found\n",
            "[joshua not found\n",
            "“painting not found\n",
            "history.robbie not found\n",
            "gunworks, not found\n",
            "enforcement.staff not found\n",
            "demand.after not found\n",
            "ammunition.though not found\n",
            "else.they not found\n",
            "53.the not found\n",
            "texting.he not found\n",
            "area.abell not found\n",
            "comment.once not found\n",
            "fbi.for not found\n",
            "quote/unquote, not found\n",
            "said.can not found\n",
            "luck.dick not found\n",
            "gephardt, not found\n",
            "minnesota.o not found\n",
            "here:https://youtu.be/ubo5dg9twp4ryan not found\n",
            "jenks.jenks not found\n",
            "ryan-championed not found\n",
            "allahpundit not found\n",
            "ryan-backed not found\n",
            "syria:when not found\n",
            "france; not found\n",
            "years.reports not found\n",
            "minnesota.last not found\n",
            "cedar-riverside not found\n",
            "(isil). not found\n",
            "profound.during not found\n",
            "#boycottdisney: not found\n",
            "kids…makes not found\n",
            "“finding not found\n",
            "dory” not found\n",
            "lesbian.let's not found\n",
            "2016disney/pixar not found\n",
            "confirmation.in not found\n",
            "stroller.the not found\n",
            "films.there not found\n",
            "dorothy.via: not found\n",
            "hostage…shots not found\n",
            "refugees…update: not found\n",
            "country.update: not found\n",
            "apd:watch not found\n",
            "apd not found\n",
            "below.he not found\n",
            "kfda-tv not found\n",
            "updates.via: not found\n",
            "app…”frequent not found\n",
            "visitor” not found\n",
            "“pulse” not found\n",
            "nightclub…asked not found\n",
            "“romantically” not found\n",
            "aries.he not found\n",
            "years.chris not found\n",
            "callen not found\n",
            "foxnews.com.omar not found\n",
            "deny.robertson not found\n",
            "monar not found\n",
            "salha, not found\n",
            "salha not found\n",
            "seminary.the not found\n",
            "timbuktu not found\n",
            "taubah.robertson, not found\n",
            "pierce.prosecutors not found\n",
            "training.jimenez not found\n",
            "prison.robertson not found\n",
            "prisoners.in not found\n",
            "presnell, not found\n",
            "served.robertson not found\n",
            "news.federal not found\n",
            "1991.as not found\n",
            "bomb.during not found\n",
            "claims.after not found\n",
            "comments…talked not found\n",
            "people”…quit not found\n",
            "shift.my not found\n",
            "co-worker.gilroy not found\n",
            "lucie.mateen not found\n",
            "crude.and not found\n",
            "house.fed not found\n",
            "affair.rather not found\n",
            "job.mateen not found\n",
            "outbursts.speaking not found\n",
            "said.greg not found\n",
            "(mateen not found\n",
            "davis.none not found\n",
            "esmerelda not found\n",
            "onbayshore not found\n",
            "mateen.mateen, not found\n",
            "mosque.if not found\n",
            "“racist”…gets not found\n",
            "speech…trashes not found\n",
            "speech.larissa not found\n",
            ".martinez not found\n",
            "raised.for not found\n",
            "response.esquire not found\n",
            "anglo, not found\n",
            "free…italy’s not found\n",
            "week.angelino not found\n",
            "alone.italian not found\n",
            "morcone, not found\n",
            "salary.asylum not found\n",
            "aoste not found\n",
            "migrants.in not found\n",
            "get?alaskan not found\n",
            "vanpelt not found\n",
            "rule:see not found\n",
            "below:pictured: not found\n",
            "ktva/screenshotaccording not found\n",
            "with:we not found\n",
            "ktva not found\n",
            "rhe not found\n",
            "below:several not found\n",
            "thug.we not found\n",
            "$20,000:i not found\n",
            "pic.twitter.com/vjxoi26x4s not found\n",
            "(@thomas1774paine) not found\n",
            "surgery.well not found\n",
            "balloon…watch not found\n",
            "***turn not found\n",
            "volume***these not found\n",
            "(sjw not found\n",
            "https://twitter.com/133760d/status/739160618448609284h/t not found\n",
            "establishment:here not found\n",
            "tuesday.a not found\n",
            "popville not found\n",
            "plates.cummings not found\n",
            "staffers.allen not found\n",
            "categories.yet not found\n",
            "(d-d.c.) not found\n",
            "revealed…angry not found\n",
            "gorilla’s not found\n",
            "lol!tweets not found\n",
            "news:there not found\n",
            "boy.here not found\n",
            "incident:harambe, not found\n",
            "exhibit.watch not found\n",
            "thane not found\n",
            "enclosure.during not found\n",
            "isaiah, not found\n",
            "wlwt-tv.cincinnati not found\n",
            "rifle.the not found\n",
            "(koin) not found\n",
            "andresen not found\n",
            "truck.jimmy not found\n",
            "said.severs not found\n",
            "reunited.the not found\n",
            "kroners not found\n",
            "year.outraged not found\n",
            "system.integration not found\n",
            "for.shader not found\n",
            "“harassing” not found\n",
            "offender! not found\n",
            "offender.police not found\n",
            "tincher, not found\n",
            "sacramento.once not found\n",
            "placerville not found\n",
            "incident.read not found\n",
            "ebonie not found\n",
            "viral…twitter not found\n",
            "posts.zakia not found\n",
            "antwerp.the not found\n",
            "selfie, not found\n",
            "vice.com not found\n",
            "augusteyns not found\n",
            "appeared.belkhiri not found\n",
            "protesting.here not found\n",
            "tweets:belkhiri not found\n",
            "zionists. not found\n",
            "charges…protesters not found\n",
            "gray: not found\n",
            "reports.for not found\n",
            "rights:judge not found\n",
            "fate.prosecutors not found\n",
            "6.police not found\n",
            "injuries.baltimore not found\n",
            "injury.read not found\n",
            "hanged…says not found\n",
            "slavery?some not found\n",
            "violence!!watch not found\n",
            "door”…undercover not found\n",
            "non-assimilating not found\n",
            "[isis]. not found\n",
            "gym…reason not found\n",
            "breasts.but not found\n",
            "public.vecchio not found\n",
            "shares.here not found\n",
            "facebook:vecchio not found\n",
            "videotarget not found\n",
            "girl.here not found\n",
            "life:the not found\n",
            "bat.unsurprisingly, not found\n",
            "danger.target, not found\n",
            "rooms.despite not found\n",
            "policy.via: not found\n",
            "english…you’re not found\n",
            "ownermilwaukee not found\n",
            "english-only not found\n",
            "applauding.ron not found\n",
            "business.leon not found\n",
            "side.leon not found\n",
            "said.schneider, not found\n",
            "“flush not found\n",
            "target…” not found\n",
            "anti-target not found\n",
            "gender.opponents not found\n",
            "policy.claire not found\n",
            "chretien, not found\n",
            "rise…one not found\n",
            "hiv…entertained not found\n",
            "“thrill” not found\n",
            "transmission.dr not found\n",
            "mallolas not found\n",
            "periodico. not found\n",
            "outlet.he not found\n",
            "virus.psychosexual not found\n",
            "morley not found\n",
            "hellou: not found\n",
            "towns…forcing not found\n",
            "neb. not found\n",
            "amendment.you not found\n",
            "town.but not found\n",
            "controversy.city not found\n",
            "inspections.they not found\n",
            "foods:african not found\n",
            "community.across not found\n",
            "lexington.since not found\n",
            "years.most not found\n",
            "muslim.)for not found\n",
            "americans.noel, not found\n",
            "immigrants.noel, not found\n",
            "dorner, not found\n",
            "dorner not found\n",
            "residents.how not found\n",
            "understanding.from not found\n",
            "rrw):in not found\n",
            "fentress not found\n",
            "pinglap not found\n",
            "decades.many not found\n",
            "capacity.immigrants not found\n",
            "help.tyson not found\n",
            "costs.affordable not found\n",
            "noel. not found\n",
            "bush.john not found\n",
            "lafley, not found\n",
            "says.lafley not found\n",
            "this:assimilation not found\n",
            "america.and, not found\n",
            "profit!for not found\n",
            "#benghazi!ellen: not found\n",
            "“behave” not found\n",
            "salia not found\n",
            "syria.then not found\n",
            "congratulation, not found\n",
            "son.it not found\n",
            "bail.it not found\n",
            "sala. not found\n",
            "recruiter.her not found\n",
            "why.we not found\n",
            "camera.families not found\n",
            "pc.belgian not found\n",
            "trial.his not found\n",
            "streets.for not found\n",
            "because…”white not found\n",
            "policein not found\n",
            "collis not found\n",
            "collis. not found\n",
            "pic.twitter.com/l1gtxnczqq not found\n",
            "mikachu not found\n",
            "daugher not found\n",
            "bathroom…finds not found\n",
            "her…dragging not found\n",
            "p.m.police not found\n",
            "hartstirn not found\n",
            "arrived.jason not found\n",
            "condition.hartstirn, not found\n",
            "harm.police not found\n",
            "abc7-chicago not found\n",
            "america?it not found\n",
            "you!in not found\n",
            "alone.colorado not found\n",
            "illegals.denver not found\n",
            "wage.in not found\n",
            "english.in not found\n",
            "experience.if not found\n",
            "lunches.we not found\n",
            "molesters!losing not found\n",
            "unknownthis not found\n",
            "statistics:cis not found\n",
            "influence; not found\n",
            "12,661.convictions not found\n",
            "judiciary/congress/legislature,etc. not found\n",
            "assault-domestic not found\n",
            "health/safety not found\n",
            "offenses- not found\n",
            "flight/escape not found\n",
            "voluntary- not found\n",
            "non-family-gun not found\n",
            "homidice- not found\n",
            "non-family- not found\n",
            "family- not found\n",
            "john/jane not found\n",
            "doe- not found\n",
            "1total not found\n",
            "abna not found\n",
            "essa not found\n",
            "al-salem, not found\n",
            "syria.shocking not found\n",
            "christ” not found\n",
            "album.pop not found\n",
            "(kjv)adele not found\n",
            "day.before not found\n",
            "album.beyonce not found\n",
            "career.you not found\n",
            "judge:this not found\n",
            "it.adele not found\n",
            "nowtheendbeginsbesides not found\n",
            "2010.now, not found\n",
            "twitter.philippians not found\n",
            "pic.twitter.com/rstz9ijd3z not found\n",
            "(@rimafakih) not found\n",
            "2016fakih not found\n",
            "salibi, not found\n",
            "reports.at not found\n",
            "arab-american, not found\n",
            "lebanese-american, not found\n",
            "muslim-american. not found\n",
            "albawaba, not found\n",
            "ago…everyone not found\n",
            "pipes.obama not found\n",
            "newsflint, not found\n",
            "michigan.flint not found\n",
            "ago.forbes not found\n",
            "flint.however, not found\n",
            "manager.with not found\n",
            "place:flint not found\n",
            "cop.according not found\n",
            "hand.drugs not found\n",
            "other.as not found\n",
            "“emotional not found\n",
            "chose.the not found\n",
            "abuse.social not found\n",
            "powys not found\n",
            "msn not found\n",
            "delivered.flowers, not found\n",
            "2015.under not found\n",
            "food.authorities not found\n",
            "meijer not found\n",
            "tomcat not found\n",
            "mohammed” not found\n",
            "e-bay…with not found\n",
            "e-baythe not found\n",
            "ebay.the not found\n",
            "fawstin.fawstin not found\n",
            "$3,000.fawstin not found\n",
            "event.geert not found\n",
            "@boschfawstin not found\n",
            "https://t.co/bcby8rxk6z not found\n",
            "2016fawstin not found\n",
            "auction:my not found\n",
            "sides.what not found\n",
            "mohammad? not found\n",
            "cartoons.my not found\n",
            "‘sesame not found\n",
            "bffs not found\n",
            "mind.in not found\n",
            "mately, not found\n",
            "ernie, not found\n",
            "mately not found\n",
            "mately.read not found\n",
            "chemtrails: not found\n",
            "reveal.boulder not found\n",
            "d.d. not found\n",
            "that.'[/quote_box_center]dangerous not found\n",
            "trendolizer not found\n",
            "farm.what not found\n",
            "leave.that not found\n",
            "out.baker not found\n",
            "back.baker not found\n",
            "prayer.now not found\n",
            "?)what not found\n",
            "least” not found\n",
            "times…saws not found\n",
            "<sarcasm>!an not found\n",
            "post.illegal not found\n",
            "prosecutors.standing not found\n",
            "morales-caceresis not found\n",
            "alien.nelson not found\n",
            "courtroom.they not found\n",
            "zadvydas not found\n",
            "streets.so, not found\n",
            "rate…black not found\n",
            "privilege?the not found\n",
            "t-shirt.she not found\n",
            "life:and not found\n",
            "discrimination:it not found\n",
            "university.- not found\n",
            "mailwhite not found\n",
            "process:the not found\n",
            "harvard.harvard not found\n",
            "ut-austin, not found\n",
            "twisted! not found\n",
            "anti-trump: not found\n",
            "#cagopconventionhttps://t.co/qkvixbp7vs not found\n",
            "reson not found\n",
            "anti-americanism! not found\n",
            "students:https://t.co/ep5mfxyf9f not found\n",
            "revenge: not found\n",
            "land!an not found\n",
            "off-inspired not found\n",
            "bunting.police not found\n",
            "fylde, not found\n",
            "lancashire.emma not found\n",
            "sophie, not found\n",
            "masterchef, not found\n",
            "cuadrilla, not found\n",
            "group.after not found\n",
            "off.protesters not found\n",
            "cuadrilla not found\n",
            "camera…watch not found\n",
            "policy.andy not found\n",
            "excuse.after not found\n",
            "bprwatch not found\n",
            "here:https://youtu.be/cgl0c4b3gr8via: not found\n",
            "hameln not found\n",
            "junge not found\n",
            "freiheit.north not found\n",
            "instead.one not found\n",
            "nickelsdorf not found\n",
            "migrants.trains not found\n",
            "disgusting…are not found\n",
            "crime.a not found\n",
            "report.quarryville, not found\n",
            "shoemaker, not found\n",
            "sheetz not found\n",
            "pike. not found\n",
            "quarryville, not found\n",
            "activities.shoemaker not found\n",
            "brasher, not found\n",
            "“frightening not found\n",
            "trend”: not found\n",
            "often.sergey not found\n",
            "baygulov not found\n",
            "arrested.as not found\n",
            "tribute.here not found\n",
            "system:tillman not found\n",
            "center.let not found\n",
            "got.just not found\n",
            "seats:as not found\n",
            "humanitarian.i not found\n",
            "cops.really not found\n",
            "opioids?via: not found\n",
            "attendant…refused not found\n",
            "*update not found\n",
            "beloworiginal not found\n",
            "court.abdulrahman not found\n",
            "mapleton, not found\n",
            "dakota.after not found\n",
            "live.ali not found\n",
            "issues.ali, not found\n",
            "terrorizing.the not found\n",
            "africa.rapes not found\n",
            "immigration.via: not found\n",
            "live*update- not found\n",
            "mapleton not found\n",
            "exam.abdulrahman not found\n",
            "mapleton. not found\n",
            "convicted.at not found\n",
            "sleeping.mental not found\n",
            "trial.ali not found\n",
            "(schow not found\n",
            "examiner.) not found\n",
            "lights?thirteen not found\n",
            "tennent not found\n",
            "prick:this not found\n",
            "witherspoon, not found\n",
            "otherwise:brown not found\n",
            "charlestowne not found\n",
            "mlw not found\n",
            "surgery.even not found\n",
            "lgbtq-rstuvwxyz not found\n",
            "inclusivity.from not found\n",
            "tribune:target not found\n",
            "identity.the not found\n",
            "certificate.while not found\n",
            "restrooms.while not found\n",
            "workplaces.target not found\n",
            "identity.via: not found\n",
            "enforcement.tuesday, not found\n",
            "list) not found\n",
            "(r-sc)86% not found\n",
            "release.root not found\n",
            "continues.wilkerson not found\n",
            "hermilo not found\n",
            "vildo not found\n",
            "moralez, not found\n",
            "immigrant.at not found\n",
            "josh. not found\n",
            "movie.read not found\n",
            "who’re not found\n",
            "laws.boycotting not found\n",
            "opposite.while not found\n",
            "campus…radical not found\n",
            "him[video] not found\n",
            "newspaper.mcdonald, not found\n",
            "campus.one not found\n",
            "racizm not found\n",
            "encounter.other not found\n",
            "pigz not found\n",
            "ed.the not found\n",
            "almiron, not found\n",
            "fantastic: not found\n",
            "afro-futurism not found\n",
            "almiron not found\n",
            "journal.on not found\n",
            "riseling, not found\n",
            "noted.wisconsin-madison not found\n",
            "callerhere not found\n",
            "vehicle:here not found\n",
            "stalls:it not found\n",
            "doing!this not found\n",
            "palmdale, not found\n",
            "bathroom.jason not found\n",
            "pomare, not found\n",
            "(lasd) not found\n",
            "reported.when not found\n",
            "outlet.while not found\n",
            "store.witnesses not found\n",
            "bathroom…you not found\n",
            "woodbridge, not found\n",
            "virginia.mall not found\n",
            "peeping.via: not found\n",
            "(d-florida).tsa not found\n",
            "(transportation not found\n",
            "neffenger not found\n",
            "done.neffenger not found\n",
            "vulnerabilies.a not found\n",
            "swimsuits: not found\n",
            "europe…oppressive not found\n",
            "burkini’s not found\n",
            "tourists.but not found\n",
            "modesty.the not found\n",
            "secularism.there not found\n",
            "france.marks not found\n",
            "dutch.house not found\n",
            "fraser, not found\n",
            "advertising.in not found\n",
            "dkny, not found\n",
            "uniqlo not found\n",
            "muslim-themed not found\n",
            "collections.some not found\n",
            "m&s, not found\n",
            "remona not found\n",
            "aly not found\n",
            "newspaper.across not found\n",
            "radicalism.women not found\n",
            "rossignol not found\n",
            "message.advertisement not found\n",
            "badinter not found\n",
            "said.prime not found\n",
            "people.at not found\n",
            "them.muslim not found\n",
            "media.valls not found\n",
            "secularism.rooted not found\n",
            "attacks.only not found\n",
            "plan.air not found\n",
            "paris-tehran not found\n",
            "‘snowflakes’ not found\n",
            "‘allah’ not found\n",
            "yusra not found\n",
            "9.news not found\n",
            "@newstalk1010 not found\n",
            "screed.khogali not found\n",
            "tweet.read not found\n",
            "flag?! not found\n",
            "roberson not found\n",
            "squadron.but not found\n",
            "audience.however, not found\n",
            "stop.a not found\n",
            "distance.an not found\n",
            "wednesday.an not found\n",
            "sila, not found\n",
            "sila not found\n",
            "avenues.but not found\n",
            "sila.he not found\n",
            "terrorists.look not found\n",
            "traditions?now not found\n",
            "abuse?as not found\n",
            "school..principal not found\n",
            "decades.some not found\n",
            "here:over not found\n",
            "tuesday.at not found\n",
            "says.alexander not found\n",
            "time.[/quote_box_center]here not found\n",
            "arraignments.norman not found\n",
            "said.detroit not found\n",
            "year.mcquade not found\n",
            "sign.4-traders not found\n",
            "policy.moms not found\n",
            "chipotle, not found\n",
            "sonic, not found\n",
            "“anti-bias” not found\n",
            "preschool.preschoolers not found\n",
            "classrooms.it not found\n",
            "bethy not found\n",
            "cu-boulder.she not found\n",
            "justice!a not found\n",
            "facilities.bill not found\n",
            "occupancy. not found\n",
            "degendered. not found\n",
            "doulos not found\n",
            "christou, not found\n",
            "[lgbt] not found\n",
            "christou not found\n",
            "this:what not found\n",
            "answer!read not found\n",
            "middleburg, not found\n",
            "brownett not found\n",
            "wjax-tv. not found\n",
            "brownett, not found\n",
            "‘bundle not found\n",
            "being? not found\n",
            "quipped.in not found\n",
            "something.yet, not found\n",
            "added.indeed, not found\n",
            "sir.via: not found\n",
            "sentences…here’s not found\n",
            "2016.david not found\n",
            "akana not found\n",
            "pahala, not found\n",
            "2017.marvin not found\n",
            "remitted.bernard not found\n",
            "2016.reginald not found\n",
            "2016.carmel not found\n",
            "bretous not found\n",
            "2016.terry not found\n",
            "2016.willie not found\n",
            "chevell not found\n",
            "2016.nathan not found\n",
            "2016.lewis not found\n",
            "2016.manuel not found\n",
            "2016.alvin not found\n",
            "cordell not found\n",
            "remittedkevin not found\n",
            "2016.nabar not found\n",
            "moneek not found\n",
            "criam not found\n",
            "2016.amos not found\n",
            "embress not found\n",
            "(conspiracy not found\n",
            "2016.roy not found\n",
            "debose not found\n",
            "2016.dexter not found\n",
            "lanoyd not found\n",
            "dickens not found\n",
            "2016.andre not found\n",
            "ester not found\n",
            "2016.ian not found\n",
            "kavanaugh not found\n",
            "release.isadore not found\n",
            "gennings not found\n",
            "release.lamont not found\n",
            "durville not found\n",
            "2016.vander not found\n",
            "2016.george not found\n",
            "2016.curtis not found\n",
            "remitted.jerome not found\n",
            "2016.vernon not found\n",
            "2016.andrew not found\n",
            "holzendorf not found\n",
            "2016.tommy not found\n",
            "bradenton, not found\n",
            "2016.angela not found\n",
            "laplatney not found\n",
            "2016.anthony not found\n",
            "2017.herbert not found\n",
            "okmulgee, not found\n",
            "remitted.byron not found\n",
            "mcdade not found\n",
            "2016.john not found\n",
            "milton, not found\n",
            "remitted.gregory not found\n",
            "release.larry not found\n",
            "nokes not found\n",
            "2016.wayne not found\n",
            "2016.exdonovan not found\n",
            "remitted.carol not found\n",
            "2016.jose not found\n",
            "2016.ismael not found\n",
            "2017.melissa not found\n",
            "remitted.jeffrey not found\n",
            "sapp not found\n",
            "2016.robin not found\n",
            "evette not found\n",
            "2016.eric not found\n",
            "2016.ernest not found\n",
            "spiller not found\n",
            "2016.tairone not found\n",
            "traniel not found\n",
            "buna, not found\n",
            "2016.alohondra not found\n",
            "staton not found\n",
            "2016.corey not found\n",
            "2016.damion not found\n",
            "2016.dwayne not found\n",
            "twane not found\n",
            "2016.jesse not found\n",
            "remitted.shermaine not found\n",
            "2016.sammy not found\n",
            "elmira, not found\n",
            "yandal not found\n",
            "parenting! not found\n",
            "'facebook-jssdk'));please not found\n",
            "personposted not found\n",
            "tindle. not found\n",
            "sfsu not found\n",
            "davia not found\n",
            "greece.the not found\n",
            "below.via: not found\n",
            "outfitters not found\n",
            "smartphone…but not found\n",
            "detect.cnn not found\n",
            "kjellberg not found\n",
            "heat.the not found\n",
            "“easter” not found\n",
            "packaging? not found\n",
            ".cadbury not found\n",
            "packaging.they not found\n",
            "details.both not found\n",
            "back.both not found\n",
            "easter”…muslim not found\n",
            "easter.asad not found\n",
            "motivated.mohammad not found\n",
            "knife.mr not found\n",
            "faisal. not found\n",
            "‘excuse not found\n",
            "brussels?’ not found\n",
            ".matthew not found\n",
            "arrested.a not found\n",
            "brussels?' not found\n",
            "cuba…dirty not found\n",
            "wounded.meanwhile not found\n",
            "resettlement:in not found\n",
            "february.hassan not found\n",
            "54b not found\n",
            "ball.salim not found\n",
            "blumer.read not found\n",
            "allegiance…”total not found\n",
            "time”…could not found\n",
            "anti-americans not found\n",
            "(syria), not found\n",
            "death.https://youtu.be/rlfbmvpx9vssadiq not found\n",
            "sadie not found\n",
            "zadrande not found\n",
            "halunkenbande, not found\n",
            "maroc. not found\n",
            "off”…fbi not found\n",
            "islamist-themed not found\n",
            "dunleavy, not found\n",
            "expert[/quote_box_center]critics not found\n",
            "detectives.[quote_box_center]ali not found\n",
            "elshekh not found\n",
            "students.[/quote_box_center]both not found\n",
            "ongoing.merced not found\n",
            "warnke, not found\n",
            "someone…claimed not found\n",
            "“loved not found\n",
            "fbi.wait, not found\n",
            "family.asked not found\n",
            "abu-rayyan, not found\n",
            "balaya not found\n",
            "jihad?via: not found\n",
            "resorts….killing not found\n",
            "children…eyewitness not found\n",
            "tourists.local not found\n",
            "g-d].this not found\n",
            "2015.isis not found\n",
            "injuries.an not found\n",
            ".local not found\n",
            "beugr not found\n",
            "night:i not found\n",
            "nationalist.i not found\n",
            "rally.my not found\n",
            "filth.when not found\n",
            "chant.around not found\n",
            "bernouts.at not found\n",
            "bernie), not found\n",
            "infuriated.then not found\n",
            "bernouts, not found\n",
            "speech.as not found\n",
            "joliet not found\n",
            "1968.folks, not found\n",
            "house.via: not found\n",
            "days…obama not found\n",
            "priority… not found\n",
            "year?george not found\n",
            "rally:moveon.org not found\n",
            "ideology:four not found\n",
            "hospital:violence not found\n",
            "panic:what not found\n",
            "ayers:actual not found\n",
            "pic.twitter.com/7dqat4dvmh not found\n",
            "palestinian…pulls not found\n",
            "neck…what not found\n",
            "altercation.nati not found\n",
            "ostri, not found\n",
            "video…why not found\n",
            "teenager.both not found\n",
            "safe.here not found\n",
            "tape:https://youtu.be/zzpx_bzka40police not found\n",
            "saverna not found\n",
            "teen.according not found\n",
            "home.spence not found\n",
            "on.spence not found\n",
            "questioned.the not found\n",
            "buzzfeedat not found\n",
            "dangerous.tim not found\n",
            "felony.baltimore not found\n",
            "ans.but not found\n",
            "via:larep.fr not found\n",
            "vacation?austrians not found\n",
            "dressed.as not found\n",
            "appropriately.however, not found\n",
            "hospitalised.it not found\n",
            "critical.police not found\n",
            "facebook.six not found\n",
            "escaped.local not found\n",
            "sonntagfruh, not found\n",
            "linz, not found\n",
            "graz, not found\n",
            "sankt not found\n",
            "polten not found\n",
            "today.seven not found\n",
            "months.now not found\n",
            "europe.here not found\n",
            "jungle:via: not found\n",
            "america!it not found\n",
            "ideas.this not found\n",
            "parent.kindergarten not found\n",
            "ps75, not found\n",
            "created:this not found\n",
            "low.read not found\n",
            "more:hannity.com not found\n",
            "protestors…guess not found\n",
            "protesters.here not found\n",
            "event:ashley-anne not found\n",
            "kahanding, not found\n",
            "wire.after not found\n",
            "extremists.not not found\n",
            "attack.that not found\n",
            "philadelphia.his not found\n",
            "wbns-10tv not found\n",
            "his: not found\n",
            "“black” not found\n",
            "agree.in not found\n",
            "“whitewashing” not found\n",
            "debate.during not found\n",
            "jackman, not found\n",
            "award.she not found\n",
            "statement:society not found\n",
            "forces.lieutenant-general not found\n",
            "themselves.blattmann not found\n",
            "islamisation.here not found\n",
            "invaders:the not found\n",
            "johannessen.he not found\n",
            "johannessen not found\n",
            "monday.he not found\n",
            "johannessen, not found\n",
            "johannessen. not found\n",
            "lesson.but not found\n",
            "beaucamps not found\n",
            "refugees.gemma not found\n",
            "gough not found\n",
            "work.writing not found\n",
            "housed.german not found\n",
            "clausnitz, not found\n",
            "clausnitz not found\n",
            "disembarked.one not found\n",
            "coach.local not found\n",
            "tense.they not found\n",
            "november:liberal not found\n",
            "months.during not found\n",
            "mccallum not found\n",
            "2016.world not found\n",
            "(cawi) not found\n",
            "cawi, not found\n",
            "counterparts.here not found\n",
            "floor) not found\n",
            "one.join not found\n",
            "cawi not found\n",
            "#hijabsolidarityor not found\n",
            "indicted… not found\n",
            "ranch.bundy, not found\n",
            "extortion.here not found\n",
            "government:here not found\n",
            "woman:https://youtu.be/lhj6h9vledaaccording not found\n",
            "laughter):cliven not found\n",
            "emmet, not found\n",
            "2014.here not found\n",
            "soebarkah not found\n",
            "bogden. not found\n",
            "violence?here not found\n",
            "place:did not found\n",
            "are:conspiracy not found\n",
            "fineconspiracy not found\n",
            "fineassault not found\n",
            "finethreatening not found\n",
            "fineuse not found\n",
            "consecutiveobstruction not found\n",
            "fineinterference not found\n",
            "fineinterstate not found\n",
            "fineeditor not found\n",
            "bucheit.no, not found\n",
            "kornze. not found\n",
            "kornze, not found\n",
            "others?no, not found\n",
            "crimes.at not found\n",
            "hage, not found\n",
            "nothing.kit not found\n",
            "reported:for not found\n",
            "bundy.blm not found\n",
            "hages not found\n",
            "cfc not found\n",
            "[court not found\n",
            "claims.] not found\n",
            "fashion.read not found\n",
            "below:federal not found\n",
            "othersvia: not found\n",
            "outposth/t not found\n",
            "ship?…you not found\n",
            "revealed.sweden not found\n",
            "day.when not found\n",
            "crisis.a not found\n",
            "cruises.the not found\n",
            "sightseeing.but not found\n",
            "salon.in not found\n",
            "freezing.willis not found\n",
            "vacations…gives not found\n",
            "padierna not found\n",
            "granada not found\n",
            "bowing-747 not found\n",
            "mich.? not found\n",
            "malkin, not found\n",
            "“yeezus” not found\n",
            "saturdaynightonline.com not found\n",
            "contraception! not found\n",
            "condoms…”lesser not found\n",
            "control.his not found\n",
            "catholics.at not found\n",
            "defect.the not found\n",
            "humanae not found\n",
            "“musician” not found\n",
            "pablo, not found\n",
            "tidal.then not found\n",
            "album.at not found\n",
            "tlop not found\n",
            "tidal. not found\n",
            "pitchfork not found\n",
            "sanders:liberalism not found\n",
            "conservative.via: not found\n",
            "wsb-tv.monday, not found\n",
            "trip.butts not found\n",
            "hours.a not found\n",
            "apologize.via: not found\n",
            "again…grammy not found\n",
            "#blackdeathsmatter not found\n",
            "white.during not found\n",
            "lemmy not found\n",
            "rhead.but not found\n",
            "insider.to not found\n",
            "run-dmc not found\n",
            "grammys. not found\n",
            "added.even not found\n",
            "town…refused not found\n",
            "bus…said not found\n",
            "wasserfahrt not found\n",
            "altmark not found\n",
            "flats.both not found\n",
            "salzwedel not found\n",
            "flats.the not found\n",
            "salzwedel. not found\n",
            "kollwitz not found\n",
            "linksjugend not found\n",
            "(left-wing not found\n",
            "solid) not found\n",
            "police:in not found\n",
            "oststadt not found\n",
            "mannheim not found\n",
            "heidelberg not found\n",
            "page:dear not found\n",
            "nazi] not found\n",
            "here.after not found\n",
            "selin not found\n",
            "non-german, not found\n",
            "restaurants”…update: not found\n",
            "flashback:sept. not found\n",
            "bakery-cafe not found\n",
            "shaich not found\n",
            "decision:within not found\n",
            "associates.in not found\n",
            "bloomberg-backed not found\n",
            "policies.watts not found\n",
            "kroger, not found\n",
            "2016:abingdon, not found\n",
            "emmorton not found\n",
            "abingdon. not found\n",
            "bread), not found\n",
            "warrant.a not found\n",
            "said.skyteam not found\n",
            "chesapeake. not found\n",
            "really” not found\n",
            "berlinale, not found\n",
            "szumowska, not found\n",
            "lacombe, not found\n",
            "eldinger, not found\n",
            "rohrwacher.the not found\n",
            "protest.streep not found\n",
            "ich not found\n",
            "saying.many not found\n",
            "berlinale not found\n",
            "wall…watch not found\n",
            "stoke-on-trent, not found\n",
            "fundays not found\n",
            "day.water not found\n",
            "interpal, not found\n",
            "funday not found\n",
            "reads:dress not found\n",
            "awrah not found\n",
            "t-shirt/top. not found\n",
            "quarter/full not found\n",
            "wet.the not found\n",
            "lateline, not found\n",
            "al-qa not found\n",
            "gulfnews not found\n",
            "(uk) not found\n",
            "reveal.mps not found\n",
            "vyvyan-robinson, not found\n",
            "clearspring not found\n",
            "vegetables.but not found\n",
            "gateau.a not found\n",
            "stay.a not found\n",
            "guests.asylum not found\n",
            "elsewhere.prices not found\n",
            "tripadvisor not found\n",
            "bar.one not found\n",
            "dail not found\n",
            "undercover: not found\n",
            "“homeless” not found\n",
            "amendment?panhandlers not found\n",
            "give?it not found\n",
            "panhandlers, not found\n",
            "avenue.they not found\n",
            "conned?we not found\n",
            "suv.we not found\n",
            "bloomfield. not found\n",
            "fraud.moments not found\n",
            "frequent.the not found\n",
            "news.we not found\n",
            "cigarettes.elizabeth not found\n",
            "“rapefugees,” not found\n",
            "large.on not found\n",
            "https://youtu.be/dyqb81bpd9mlive not found\n",
            "labye, not found\n",
            "ear.reminder: not found\n",
            "immigrants.via: not found\n",
            "dh.be not found\n",
            "girl.of not found\n",
            "(udi) not found\n",
            "(bufdir). not found\n",
            "norway.most not found\n",
            "bufdir not found\n",
            "trommald not found\n",
            "nrk.a not found\n",
            "storskog not found\n",
            "investigation.trommald not found\n",
            "separately.via: not found\n",
            "thelocalno not found\n",
            "swede’s not found\n",
            "portrayed…his not found\n",
            "islamaphobes not found\n",
            "svt, not found\n",
            "(islamophobia) not found\n",
            "europe.previously, not found\n",
            "said.obviously. not found\n",
            "(mkuc), not found\n",
            "rushd. not found\n",
            "mosque.michael not found\n",
            "[swedish not found\n",
            "[paradise]. not found\n",
            "religion.at not found\n",
            "jannah. not found\n",
            "rates.in not found\n",
            "decade.how not found\n",
            "religions?watch not found\n",
            "yourself:https://youtu.be/guqdznjbibw not found\n",
            "eurabia not found\n",
            "politics.child not found\n",
            "diodk, not found\n",
            "metroxpress not found\n",
            "(denmark not found\n",
            "newspaper)girls not found\n",
            "brides.the not found\n",
            "weekends.several not found\n",
            "all.sofie not found\n",
            "this.integration not found\n",
            "weekends.[age not found\n",
            "18.this not found\n",
            "erupts: not found\n",
            "smugglers.two not found\n",
            "dunkirk.four not found\n",
            "camp.david not found\n",
            "michaux, not found\n",
            "unsa not found\n",
            "figaro: not found\n",
            "tuesday]. not found\n",
            "posth/t not found\n",
            "english” not found\n",
            "jailed.behar not found\n",
            "violence.he not found\n",
            "heart.detective not found\n",
            "imposed.his not found\n",
            "swindon, not found\n",
            "wilts.magistrates not found\n",
            "home.kasemi not found\n",
            "swindon not found\n",
            "order.wayne not found\n",
            "home.magistrates not found\n",
            "“god’s” not found\n",
            "“allah’s” not found\n",
            "wels not found\n",
            "vogelweide not found\n",
            "wels. not found\n",
            "principal.via: not found\n",
            "streets.according not found\n",
            "italian-language not found\n",
            "repubblica, not found\n",
            "ceranova not found\n",
            "tidy.at not found\n",
            "facility.the not found\n",
            "ceranova, not found\n",
            "spezzi not found\n",
            "salvani. not found\n",
            "boldrini, not found\n",
            "(italy not found\n",
            "cleaning.there not found\n",
            "requirement.via: not found\n",
            "been’ not found\n",
            "racists” not found\n",
            "full-whitey.devito not found\n",
            "rights-era not found\n",
            "kids.via: not found\n",
            "obligation?clergymen not found\n",
            "suggested.rt not found\n",
            "chartres not found\n",
            "holy.he not found\n",
            "bethnal not found\n",
            "chartres, not found\n",
            "hallows, not found\n",
            "bowmuslim not found\n",
            "hamlets. not found\n",
            "bangladeshi-sylheti, not found\n",
            "actress” not found\n",
            "racism…maybe not found\n",
            "performance.responding not found\n",
            "rampling.speaking not found\n",
            "choices.nowhere not found\n",
            "ironman not found\n",
            "cheadle. not found\n",
            "ijrhere not found\n",
            "cheadle:@chrisrock not found\n",
            "#theoscars not found\n",
            "responded:https://twitter.com/adambaldwin/status/688841370853740544then not found\n",
            "baldwin:@adambaldwin not found\n",
            "question:https://twitter.com/adambaldwin/status/688898296006352896to not found\n",
            "answer:@adambaldwin not found\n",
            "https://twitter.com/adambaldwin/status/688916800579354624cheadle not found\n",
            "around@adambaldwin not found\n",
            "oscarsowhite, not found\n",
            "facts:https://twitter.com/adambaldwin/status/689889591940100099and not found\n",
            "nominees.in not found\n",
            "income.we not found\n",
            "glove.when not found\n",
            "traveling.for not found\n",
            "criminals!an not found\n",
            "germany.former not found\n",
            "yusupha not found\n",
            "yaffa, not found\n",
            "msv not found\n",
            "duisburg.but not found\n",
            "17-years-old.and not found\n",
            "28.when not found\n",
            "gazzetta not found\n",
            "cuneo not found\n",
            "eur not found\n",
            "gbp) not found\n",
            "allegation.the not found\n",
            "expresshe not found\n",
            "altar: not found\n",
            "lookmann):austrian not found\n",
            "schlossstrasse not found\n",
            "police.that not found\n",
            "permit.according not found\n",
            "months.last not found\n",
            "szalony, not found\n",
            "police.she not found\n",
            "abuse.she not found\n",
            "fondled.the not found\n",
            "desk.she not found\n",
            "investigation.local not found\n",
            "him…his not found\n",
            "ex-green not found\n",
            "#isis, not found\n",
            "say.posted not found\n",
            "2016kennedy not found\n",
            "sheepdog not found\n",
            "“masturbation not found\n",
            "stations” not found\n",
            "guyfi not found\n",
            "laptop.hot not found\n",
            "so.see not found\n",
            "ishot not found\n",
            "day.read not found\n",
            "“seizure” not found\n",
            "stalinsix not found\n",
            "hugley, not found\n",
            "gardiner, not found\n",
            "dawkins-haigler, not found\n",
            "regulations.information not found\n",
            "so.read not found\n",
            "wesel not found\n",
            "shrove not found\n",
            "orsoy not found\n",
            "rheinberg not found\n",
            "occur.in not found\n",
            "orsoy, not found\n",
            "come.this not found\n",
            "orsoy. not found\n",
            "“al not found\n",
            "tv:al not found\n",
            "model.according not found\n",
            "jazeera:ajam not found\n",
            "prices.was not found\n",
            "american?via: not found\n",
            "europe.just not found\n",
            "mean:https://youtu.be/silf8ut4mte not found\n",
            "literally.an not found\n",
            "(rbss) not found\n",
            "saqr not found\n",
            "leena not found\n",
            "al-qasem not found\n",
            "online.rbss not found\n",
            "saqir not found\n",
            "45.the not found\n",
            "al-tabaqa, not found\n",
            "raqqa.she not found\n",
            "killing.the not found\n",
            "ruqia not found\n",
            "raqqa.the not found\n",
            "executed.via: not found\n",
            "heard.southwark not found\n",
            "ehsan not found\n",
            "maida not found\n",
            "flat.the not found\n",
            "cirque not found\n",
            "months.he not found\n",
            "abdulazziz not found\n",
            "via:uk not found\n",
            "invaders” not found\n",
            "courtrooms..she not found\n",
            "illegally.she not found\n",
            "invasion.and not found\n",
            "lawyer.prerna not found\n",
            "lal, not found\n",
            "states.lal not found\n",
            "fiji.lal not found\n",
            "borders.as not found\n",
            "reform.lal not found\n",
            "dreamactivist.org not found\n",
            "dead.german not found\n",
            "recklinghausen not found\n",
            "attacker.officers not found\n",
            "planned.police not found\n",
            "investigation.french not found\n",
            "sallah not found\n",
            "thursday.paris not found\n",
            "mukenge, not found\n",
            "itele not found\n",
            "mukenge not found\n",
            "ground.a not found\n",
            "kool-aid: not found\n",
            "revenant, not found\n",
            "change.dicaprio not found\n",
            "theater…guess not found\n",
            "noticed.once not found\n",
            "there.reportedly, not found\n",
            "shit.one not found\n",
            "was:racism not found\n",
            "usaccording not found\n",
            "]]>racism not found\n",
            "#muslims#freedom#africanposted not found\n",
            "2016islamic not found\n",
            "sympathy.via: not found\n",
            "watch…did not found\n",
            "crying? not found\n",
            "judge:go not found\n",
            "salovey. not found\n",
            "kronman, not found\n",
            "added.noticeably not found\n",
            "dallah not found\n",
            "worldwide.moreover, not found\n",
            "journal.and not found\n",
            "stated.additionally, not found\n",
            "2002.the not found\n",
            "professorships not found\n",
            "california/berkeley, not found\n",
            "institutions.via: not found\n",
            "artesian not found\n",
            "known.about not found\n",
            "kostner not found\n",
            "stabilized.less not found\n",
            "lawn.at not found\n",
            "condition.two not found\n",
            "laflin not found\n",
            "stabilized.the not found\n",
            "lorel not found\n",
            "suburban. not found\n",
            "condition.police not found\n",
            "releasedhours not found\n",
            "24.after not found\n",
            "migrants.last not found\n",
            "helping.much not found\n",
            "infrastructure.hundreds not found\n",
            "invaders.time not found\n",
            "wartnabys.muslim not found\n",
            "attractive?we not found\n",
            "filing.but not found\n",
            "so.on not found\n",
            "thecollegefix.com.what not found\n",
            "comments.for not found\n",
            "thaddeus not found\n",
            "relatives.at not found\n",
            "reported.pryor not found\n",
            "edmonds, not found\n",
            "saying.apparently not found\n",
            "violated.a not found\n",
            "(fire) not found\n",
            "you..in not found\n",
            "room.these not found\n",
            "america,i not found\n",
            "try.we not found\n",
            "audre not found\n",
            "caution.this not found\n",
            "landscape.)yet, not found\n",
            "forthcoming.as not found\n",
            "innocent.i not found\n",
            "responsible.if not found\n",
            "whiteness.i not found\n",
            "you.again, not found\n",
            "k.k.k., not found\n",
            "world.take not found\n",
            "safety.baldwin not found\n",
            "me.white not found\n",
            "loved.perhaps not found\n",
            "aiyana not found\n",
            "cheap.take not found\n",
            "gift.if not found\n",
            "peace,george not found\n",
            "yancyvia: not found\n",
            "yancy, not found\n",
            "“cools not found\n",
            "2015major not found\n",
            "place.environmentalists not found\n",
            "effect.while not found\n",
            "temporarily.the not found\n",
            "accurate.a not found\n",
            "(tcr) not found\n",
            "(ecs) not found\n",
            "tcr not found\n",
            "ecs not found\n",
            "planet.he not found\n",
            "temperatures.she not found\n",
            "approval.pinal not found\n",
            "islam?brentwood, not found\n",
            "wednesday.criticisms not found\n",
            "supertalk not found\n",
            "capacity.sunset not found\n",
            "noe not found\n",
            "covered.stewart not found\n",
            "said.williamson not found\n",
            "school.board not found\n",
            "said.tennessee not found\n",
            "akbar.cbs not found\n",
            "reported:parents not found\n",
            "concertsome not found\n",
            "anoka-hennepin not found\n",
            "concert.at not found\n",
            "attention.it not found\n",
            "turn.one not found\n",
            "anoka- not found\n",
            "citizens…but not found\n",
            "protections.while not found\n",
            "property.as not found\n",
            "sovereignty.over not found\n",
            "wall.congress not found\n",
            "completed.while not found\n",
            "promised.sen. not found\n",
            "(r-al)has not found\n",
            "restrictions.in not found\n",
            "(d-il)to not found\n",
            "cap…okay not found\n",
            "madness.from not found\n",
            "page:share not found\n",
            "..okemos, not found\n",
            "michiganit not found\n",
            "read.no not found\n",
            "boil!so not found\n",
            "wear.one not found\n",
            "choice.today not found\n",
            "okemos not found\n",
            "allah!? not found\n",
            "walmart!!!!here not found\n",
            "(rnn) not found\n",
            "days.freddie not found\n",
            "died.a not found\n",
            "monday.demonstrations not found\n",
            "traffic.tessa not found\n",
            "hill-aston, not found\n",
            "hill-aston not found\n",
            "coma.the not found\n",
            "stop.prosecutors not found\n",
            "vehicle.baltimore not found\n",
            "1.prosecutors not found\n",
            "trials.via: not found\n",
            "migrants.the not found\n",
            "trope.now not found\n",
            "mensajeros not found\n",
            "(messengers not found\n",
            "chueca not found\n",
            "madrid.the not found\n",
            "tvs. not found\n",
            "app.in not found\n",
            "migrants.it not found\n",
            "ikella not found\n",
            "lampedusa. not found\n",
            "gear…you not found\n",
            "weights? not found\n",
            "sexiest not found\n",
            "special.bradley not found\n",
            "linings not found\n",
            "words… not found\n",
            "up!, not found\n",
            "heartbreaking.it not found\n",
            "yearbook.according not found\n",
            "site:one not found\n",
            "weapons.while not found\n",
            "manner.renville not found\n",
            "dahlen, not found\n",
            "dahlen. not found\n",
            "continued:he not found\n",
            "link!renville not found\n",
            "mcfeeley not found\n",
            "mcfreeley not found\n",
            "renvilles.charles not found\n",
            "week.samantha not found\n",
            "ca., not found\n",
            "day.dawson not found\n",
            "below.legendary not found\n",
            "attacks.discussing not found\n",
            "tarantino, not found\n",
            "occurrence.when not found\n",
            "russell: not found\n",
            "t?wells: not found\n",
            "all.russell: not found\n",
            "blazeclick not found\n",
            "aboard.the not found\n",
            "bumper.https://youtu.be/menmwxq_0u0the not found\n",
            "vehicle.pig not found\n",
            "uk.drivers not found\n",
            "imprisonment.via:breaking not found\n",
            "europe.experts not found\n",
            "isil/da not found\n",
            "(cbrn) not found\n",
            "that.behold not found\n",
            "mckesson:.@potus not found\n",
            "pic.twitter.com/b8xq058nbg not found\n",
            "attack:farook not found\n",
            "(nicholas) not found\n",
            "thalasinos, not found\n",
            "2015nicholas not found\n",
            "wednesday.via: not found\n",
            "pot: not found\n",
            "“inhale not found\n",
            "to?chicago not found\n",
            "spokesperson.it not found\n",
            "recorded.seen not found\n",
            "“profiling” not found\n",
            "out.two not found\n",
            "injured.as not found\n",
            "explosives.it not found\n",
            "27.neighbors not found\n",
            "grab…clock not found\n",
            "did.happy not found\n",
            "#thanksgiving!! not found\n",
            "2015dallas not found\n",
            "facetime. not found\n",
            "him.breitbart not found\n",
            "meeting.ahmed not found\n",
            "hollingsworth, not found\n",
            "returned.in not found\n",
            "foundation-sponsored not found\n",
            "(dna not found\n",
            "info)the not found\n",
            "tuesday.jabari not found\n",
            "prison.dean not found\n",
            "worldstarhiphop.com not found\n",
            "carbine not found\n",
            "hiphop not found\n",
            "website:via: not found\n",
            "punditof not found\n",
            "mcdonald:here not found\n",
            "#safetyisforwhitefolks not found\n",
            "#uchicago not found\n",
            "(@derekcaquelin) not found\n",
            "@olivia_a_ortiz not found\n",
            "@uchicago not found\n",
            "https://t.co/rhoqqdks1f not found\n",
            "(@ursulacwagner) not found\n",
            "https://twitter.com/ira/status/671451417798819840that not found\n",
            "https://t.co/gltg2l81bk not found\n",
            "clarkisha not found\n",
            "(@iwriteallday_) not found\n",
            "2015trump's not found\n",
            "https://t.co/rsybxmaxmc not found\n",
            "ctrl not found\n",
            "2015black not found\n",
            "https://t.co/mtkb57oxhx not found\n",
            "fontaine. not found\n",
            "(@chillncliffside) not found\n",
            "2015because not found\n",
            "(ucsb) not found\n",
            "(wsu).in not found\n",
            "is.other not found\n",
            "celebrated.as not found\n",
            "threats.a not found\n",
            "triplets not found\n",
            "triplets.cook not found\n",
            "triplets.now, not found\n",
            "ruin.cook, not found\n",
            "warmsley, not found\n",
            "babies.melissa not found\n",
            "pregnant.california not found\n",
            "yolo!brad not found\n",
            "upbringing.the not found\n",
            "board.quinton not found\n",
            "pollocksivlle, not found\n",
            "azario not found\n",
            "sunday.jones not found\n",
            "maysville not found\n",
            "deputies.the not found\n",
            "pamlico not found\n",
            "hurt.it not found\n",
            "radiator.mceachin not found\n",
            "$250,000.frost not found\n",
            "$125,000.foy not found\n",
            "witn not found\n",
            "legion! not found\n",
            "i.but not found\n",
            "maryland-national not found\n",
            "religion.liberty not found\n",
            "counsel.today, not found\n",
            "association.in not found\n",
            "muster.read not found\n",
            "interventions.the not found\n",
            "work.a not found\n",
            "clinton.miller not found\n",
            "pace.this not found\n",
            "conservative:disney not found\n",
            "[video]the not found\n",
            "dashboard.as not found\n",
            "car.two not found\n",
            "squid. not found\n",
            "squid.at not found\n",
            "ripa, not found\n",
            "strahan, not found\n",
            "viral.then not found\n",
            "end.with not found\n",
            "injustices.the not found\n",
            "brawl.https://twitter.com/restlessbit/status/670836492026163200completely not found\n",
            "blood.this not found\n",
            "scatter.(the not found\n",
            "scene.)via: not found\n",
            "deportation: not found\n",
            "go?as not found\n",
            "deportation.as not found\n",
            "continent.as not found\n",
            "afton not found\n",
            "bladet not found\n",
            "disappeared.the not found\n",
            "up.based not found\n",
            "engstrom, not found\n",
            "fundraises not found\n",
            "shooting…only not found\n",
            "police.four not found\n",
            "swasey.scott not found\n",
            "dontanville, not found\n",
            "dontanville not found\n",
            "said.garrett not found\n",
            "rachel; not found\n",
            "elijah; not found\n",
            "faith.** not found\n",
            "gwpmeanwhile, not found\n",
            "parenthood.as not found\n",
            "faith.dear not found\n",
            "monday.robert not found\n",
            "electricity.metal not found\n",
            "zigmond not found\n",
            "45.those not found\n",
            "man.dear not found\n",
            "dog.his not found\n",
            "bellingham, not found\n",
            "register-guard not found\n",
            "e-mail.gee, not found\n",
            "speech?while not found\n",
            "shepard, not found\n",
            "viking. not found\n",
            "students.how not found\n",
            "action?most not found\n",
            "mascot.sifting not found\n",
            "this:law not found\n",
            "shepard. not found\n",
            "guess.black not found\n",
            "inclusive” not found\n",
            "sexes:man not found\n",
            "goodness.the not found\n",
            "scranton.the not found\n",
            "identity/expression not found\n",
            "s.h.a.r.e. not found\n",
            "[student not found\n",
            "education] not found\n",
            "gonzaga not found\n",
            "chicago.an not found\n",
            "gay-straight not found\n",
            "commercial…doing not found\n",
            "letists not found\n",
            "mattel, not found\n",
            "moschino. not found\n",
            "match.however, not found\n",
            "forward.an not found\n",
            "silenced.this not found\n",
            "morality.think not found\n",
            "interaction.does not found\n",
            "p.e. not found\n",
            "youth.earlier not found\n",
            "with.last not found\n",
            "segregation.see not found\n",
            "facilities.these not found\n",
            "encouraged.what not found\n",
            "boy.but not found\n",
            "roles.it not found\n",
            "hasbro not found\n",
            "easy-bake not found\n",
            "foolnothing not found\n",
            "tool.courtesy not found\n",
            "‘rebuke’ not found\n",
            "actions.obama not found\n",
            "powerful!by not found\n",
            "paris.imagine not found\n",
            "stirring.one not found\n",
            "terror.rebuke. not found\n",
            "means.via: not found\n",
            "eisgruber not found\n",
            "seen:the not found\n",
            "eisgruber:dear not found\n",
            "eisgruber,we not found\n",
            "undergraduates.academic not found\n",
            "princeton.this not found\n",
            "matters.first, not found\n",
            "love.second, not found\n",
            "made.we not found\n",
            "generations.we not found\n",
            "wests, not found\n",
            "georges.similarly, not found\n",
            "sergiu not found\n",
            "klainerman not found\n",
            "rule.we not found\n",
            "university-sponsored not found\n",
            "traits.we not found\n",
            "discussions.unlike not found\n",
            "in.thank not found\n",
            "reply.-the not found\n",
            "draim not found\n",
            "solveig not found\n",
            "loo not found\n",
            "naftzger not found\n",
            "16via: not found\n",
            "mother.saadiq not found\n",
            "now?cair not found\n",
            "qatar.pj not found\n",
            "turkey-syria not found\n",
            "cell.it not found\n",
            "front.his not found\n",
            "website.https://twitter.com/laurww/status/668974136207802368after not found\n",
            "oklahoma.once not found\n",
            "punditafter not found\n",
            "qatar.that not found\n",
            "show:glenn not found\n",
            "action:glenn not found\n",
            "action:https://twitter.com/ggreenwald/status/302484198487359490eventually, not found\n",
            "qatar.u.s. not found\n",
            "true!match not found\n",
            "muslim.your not found\n",
            "is:a. not found\n",
            "gunpowderb. not found\n",
            "patchoulic. not found\n",
            "bloodwhen not found\n",
            "cops.b. not found\n",
            "boyfriend.c. not found\n",
            "sister.when not found\n",
            "zionist! not found\n",
            "christo-fascist! not found\n",
            "to:a. not found\n",
            "bully.b. not found\n",
            "problems.c. not found\n",
            "infidel.your not found\n",
            "fatherb. not found\n",
            "pregnant!c. not found\n",
            "akbar!(for not found\n",
            "guys)when not found\n",
            "whistleb. not found\n",
            "transgenderc. not found\n",
            "slave(for not found\n",
            "gals)when not found\n",
            "cookiesb. not found\n",
            "chargesc. not found\n",
            "work?can not found\n",
            "quiz? not found\n",
            ".five not found\n",
            "terrorism.lebanon, not found\n",
            "country.sherif not found\n",
            "elsayid-ali, not found\n",
            "family…give not found\n",
            "million…or not found\n",
            "intended).give not found\n",
            "entities.mohamed, not found\n",
            "headlines.mohamed not found\n",
            "irving.the not found\n",
            "lawsuit.city not found\n",
            "avis.on not found\n",
            "sedan.that not found\n",
            "started.a not found\n",
            "earlier.mr. not found\n",
            "argued.eventually, not found\n",
            "shamoura, not found\n",
            "bergwerk.the not found\n",
            "zipcar), not found\n",
            "avis. not found\n",
            "welch-robinson, not found\n",
            "page.mr. not found\n",
            "campus…university not found\n",
            ":happening not found\n",
            "pic.twitter.com/ug1wcv0bio not found\n",
            "oiir not found\n",
            "(@oiir_illinois) not found\n",
            "2015at not found\n",
            "post)a not found\n",
            "reported.click not found\n",
            "kaler. not found\n",
            "kaler not found\n",
            "uiuc not found\n",
            "pic.twitter.com/l5oi5cslki not found\n",
            "https://twitter.com/monica_alveezy/status/667057830000627712wouldn not found\n",
            "#uiucstandswithmizzou not found\n",
            "#blacktranslivesmatter not found\n",
            "pic.twitter.com/1pzgkodpk0 not found\n",
            "robberts-mosser not found\n",
            "#blackstudentsmatter#uiucstandswithmizzo#beingblackatillinois not found\n",
            "pic.twitter.com/01wcckwopi not found\n",
            "(@edorbz) not found\n",
            "2015yeah not found\n",
            "wisdom.but not found\n",
            "career?but not found\n",
            "linkwell, not found\n",
            "scandal:the not found\n",
            "song.that not found\n",
            "bomberger not found\n",
            "rimes not found\n",
            "rhimes: not found\n",
            "abortion.thursday not found\n",
            "aired.in not found\n",
            "(kerry not found\n",
            "mellie not found\n",
            "(bellamy not found\n",
            "young) not found\n",
            "funding.https://youtu.be/vnd7oxprxn8the not found\n",
            ":tonight, not found\n",
            "note.after not found\n",
            "background.in not found\n",
            "episode:hollywood not found\n",
            "jesus) not found\n",
            "display.#istandwithmellie not found\n",
            "2015actress not found\n",
            "#istandwithmellie, not found\n",
            "“isil” not found\n",
            "“isis” not found\n",
            ".decoding not found\n",
            "(kjv)in not found\n",
            "have.isil not found\n",
            "levant. not found\n",
            "look.the not found\n",
            "guess!it not found\n",
            "state.listen not found\n",
            "i-s-i-l not found\n",
            "mind:now not found\n",
            "can.and not found\n",
            "working.the not found\n",
            "israel.now not found\n",
            "right.terrorist not found\n",
            "isis:via: not found\n",
            "nowtheendbegins not found\n",
            "nurses: not found\n",
            "sigmaringen, not found\n",
            "healthcare.schw not found\n",
            "srh not found\n",
            "sigmaringen not found\n",
            "saturdays.according not found\n",
            "rompp, not found\n",
            "guards.as not found\n",
            "melter, not found\n",
            "regensburg.the not found\n",
            "sweden…”the not found\n",
            "s.some not found\n",
            "groups.norway not found\n",
            "men.watch not found\n",
            "violence.so not found\n",
            "this?that not found\n",
            "senses.norway not found\n",
            "neighbor.in not found\n",
            "aftonposten, not found\n",
            "melkemichel. not found\n",
            "socialdemokraterna not found\n",
            "wager.not not found\n",
            "stance.while not found\n",
            "characters.clarion not found\n",
            "reviews.suh, not found\n",
            "marilouise not found\n",
            "non-asian not found\n",
            "michel.michel not found\n",
            "them.suh, not found\n",
            "blickers.michel not found\n",
            "play.she not found\n",
            "blickers not found\n",
            "find.via: not found\n",
            "whitewashed: not found\n",
            "apology).if not found\n",
            "hollywood!on not found\n",
            "white.thr not found\n",
            "mirren, not found\n",
            "winslet not found\n",
            "1930s.however, not found\n",
            "vest: not found\n",
            "comptoir not found\n",
            "voltaire, not found\n",
            "hunt.abdeslam not found\n",
            "worldbut not found\n",
            "syria.his not found\n",
            "molenebeek, not found\n",
            "violent.but not found\n",
            "syria.they not found\n",
            "added.ibrahim, not found\n",
            "equipe not found\n",
            "cafe.it not found\n",
            "village’s not found\n",
            "charvieu-chavagneux, not found\n",
            "diversitymachtfreiblog not found\n",
            "them…talks not found\n",
            "nation.resentful not found\n",
            "attention.breitbart not found\n",
            "cloaks.if not found\n",
            "#parisattacks not found\n",
            "#parisshooting not found\n",
            "#fuckfrance not found\n",
            "pic.twitter.com/muss901ra4 not found\n",
            "(@lolatwhitefear) not found\n",
            "refugees.https://twitter.com/johnnyace562/status/665723350698713088https://twitter.com/johnnyace562/status/665723459465379840you not found\n",
            "afrika not found\n",
            "pic.twitter.com/majf4ndedp not found\n",
            "fly.via: not found\n",
            "students.heron not found\n",
            "violin, not found\n",
            "wstp not found\n",
            "service.instead, not found\n",
            "moreno.other not found\n",
            "wrote:just not found\n",
            "disagree.after not found\n",
            "gruhl. not found\n",
            "anarchy…muslim not found\n",
            "1,472%.many not found\n",
            "you.#millionstudentmarch not found\n",
            "students:i not found\n",
            "#usmc not found\n",
            "pic.twitter.com/bs6qn0kdtb not found\n",
            "(@sayhijames) not found\n",
            "message:https://youtu.be/zmji36q8e4ovia: not found\n",
            "sham” not found\n",
            "responsibly.the not found\n",
            "sentencing.but not found\n",
            "babeu, not found\n",
            "confinement.but not found\n",
            "quickly.the not found\n",
            "proceedings.sheriffs not found\n",
            "released.other not found\n",
            "here.)an not found\n",
            "approval.thursday not found\n",
            "event.ad not found\n",
            "halloween; not found\n",
            "event.black not found\n",
            "urine.the not found\n",
            "englewood, not found\n",
            "squalor.they not found\n",
            "restaurant.police not found\n",
            "there.rosales-campos not found\n",
            "police.one not found\n",
            "oswaldo not found\n",
            "colombia.however, not found\n",
            "evaristo not found\n",
            "mexico.police not found\n",
            "salvadorbreak-inspolice not found\n",
            "include:on not found\n",
            "colpan not found\n",
            "knt not found\n",
            "luncheonette not found\n",
            "palisade not found\n",
            "torell not found\n",
            "said.aside not found\n",
            "said.evaristo not found\n",
            "mexicooswaldo not found\n",
            "(below)northjersey.com not found\n",
            "door.rosales-campos not found\n",
            "trespass.via: not found\n",
            "backfires…missou not found\n",
            "cause.protests not found\n",
            "recruitlouisiana not found\n",
            "fall.sci not found\n",
            "country.sci not found\n",
            "cuuntry not found\n",
            "trail.sci not found\n",
            "lsu, not found\n",
            "oklahoma.martin, not found\n",
            "night.martin not found\n",
            "scheme.because not found\n",
            "season.via: not found\n",
            "lesbians: not found\n",
            "services.according not found\n",
            "ruling.while not found\n",
            "beckie not found\n",
            "added.hoagland not found\n",
            "child.as not found\n",
            "added.utah not found\n",
            "callan. not found\n",
            "courts.in not found\n",
            "(apa), not found\n",
            "sprigg, not found\n",
            "parents.regnerus not found\n",
            "female.for not found\n",
            "will.despite not found\n",
            "cretella not found\n",
            "trumbull:[m]others not found\n",
            "[t]radition not found\n",
            "missouri.university not found\n",
            "way,melissa not found\n",
            "event:@joewalljasper not found\n",
            "@caitlinswieca not found\n",
            "pic.twitter.com/8uzsqqfv2k not found\n",
            "2015wouldn not found\n",
            "down:tai: not found\n",
            "mine.student: not found\n",
            "beings.tai:there not found\n",
            "that.student: not found\n",
            "respect?tai:how not found\n",
            "prosperity?student: not found\n",
            "off!students not found\n",
            "reporter.tai: not found\n",
            "me.very not found\n",
            "up!tai: not found\n",
            "spaces.after not found\n",
            "camera.black not found\n",
            "(nice not found\n",
            "camera!)and not found\n",
            "quad:the not found\n",
            "basler, not found\n",
            "reporter:and not found\n",
            "campus:i not found\n",
            "https://t.co/vachgnbbaj not found\n",
            "float.the not found\n",
            "uae-designated not found\n",
            "nature.adam not found\n",
            "director:soltani not found\n",
            "hizballah not found\n",
            "(omar not found\n",
            "ahmad), not found\n",
            "(ibrahim not found\n",
            "hooper), not found\n",
            "hamas-tied not found\n",
            "officials.michigan not found\n",
            "cair: not found\n",
            "(qatar) not found\n",
            "post-9/11, not found\n",
            "figures…what not found\n",
            "muhammad.the not found\n",
            "acton-agua not found\n",
            "woodard not found\n",
            "said.high not found\n",
            "assignment.drawing not found\n",
            "‘tolerant not found\n",
            "car…attack not found\n",
            "firebombed.beatrix not found\n",
            "mep, not found\n",
            "berlin.good not found\n",
            "#afd's not found\n",
            "storch. not found\n",
            "pic.twitter.com/qmac1pfpwp not found\n",
            "zschaepitz not found\n",
            "(@schuldensuehner) not found\n",
            "2015ms. not found\n",
            "oldenburg, not found\n",
            "platform.after not found\n",
            "meps.it not found\n",
            "“discrimination” not found\n",
            "retinitis not found\n",
            "pigmentosa not found\n",
            "right?i not found\n",
            "discrimination.on not found\n",
            "(nixon) not found\n",
            "yesterday.morales, not found\n",
            "business.an not found\n",
            "barbering not found\n",
            "non-muslims: not found\n",
            "hansjoerg not found\n",
            "said:germany not found\n",
            "government.eight not found\n",
            "evil.i not found\n",
            "resurrection.christianity not found\n",
            "faith.but not found\n",
            "confusion.the not found\n",
            "(exodus not found\n",
            "sweetness.peter not found\n",
            "water.for not found\n",
            "boy.the not found\n",
            "s.kirksey not found\n",
            "name.she, not found\n",
            "houston.the not found\n",
            "link.the not found\n",
            "point.kirksey not found\n",
            "girl.kirksey not found\n",
            "gun…school not found\n",
            "lockdown…police not found\n",
            "weapon.police, not found\n",
            "middle/ not found\n",
            "masslive.com not found\n",
            "weapon.a not found\n",
            "rifle.students not found\n",
            "boston.neither not found\n",
            "backpack…breaking: not found\n",
            "knife” not found\n",
            "clara.merced not found\n",
            "couty not found\n",
            "thursday.mohammad not found\n",
            "began.warnke not found\n",
            "injuries.as not found\n",
            "said.little not found\n",
            "account.investigators not found\n",
            "stabbed.byron not found\n",
            "said.price not found\n",
            "released.detectives not found\n",
            "released.two not found\n",
            "truett not found\n",
            "knapp, not found\n",
            "gracepointe not found\n",
            "technomic. not found\n",
            "bojangles not found\n",
            "“right-wing” not found\n",
            "ages.how not found\n",
            "image.moderators not found\n",
            "later.mr not found\n",
            "logic).from not found\n",
            "east.perhaps not found\n",
            "silly? not found\n",
            "rot: not found\n",
            "name.during not found\n",
            "effortlessly.unusual not found\n",
            "shower.ramirez not found\n",
            "work:during not found\n",
            "abomination?katy, not found\n",
            "agree.jordan not found\n",
            "members.students not found\n",
            "myth? not found\n",
            "texted.jordan not found\n",
            "issue.they not found\n",
            "]]>jordan not found\n",
            "bravery!posted not found\n",
            "replied.texas not found\n",
            "state.katy not found\n",
            "frailey, not found\n",
            "administrators.frailey not found\n",
            "week.linahan not found\n",
            "frailey not found\n",
            "achmed not found\n",
            "success.via: not found\n",
            "shameful!a not found\n",
            "said.shvonna not found\n",
            "bejarano, not found\n",
            "altercation.she not found\n",
            "called.alexander not found\n",
            "vehicle.after not found\n",
            "apartment.via: not found\n",
            "relationships/sexuality not found\n",
            "advance.activist not found\n",
            "lalonde, not found\n",
            "handmaids not found\n",
            "montreal.a not found\n",
            "regiopolis-notre not found\n",
            "macdougall not found\n",
            "lifesitenews.macdougall not found\n",
            "consent.a not found\n",
            "lalonde:examples not found\n",
            "pic.twitter.com/j28efozcgq not found\n",
            "(@julieslalonde) not found\n",
            "resort…refugees not found\n",
            "complain: not found\n",
            "arrivals.riksgr not found\n",
            "migrationsverket. not found\n",
            "migrationsverket not found\n",
            "kuldkepp, not found\n",
            "norrbottenskuriren not found\n",
            "comment.kuldepp not found\n",
            "refugees.at not found\n",
            "lule not found\n",
            "eu.however not found\n",
            "explained.but not found\n",
            "north.more not found\n",
            "monday.86,223 not found\n",
            "balkans.via: not found\n",
            "results…winners not found\n",
            "spots.only not found\n",
            "results.van not found\n",
            "ktvu.the not found\n",
            "invalid.the not found\n",
            "illegal.all not found\n",
            "meaning.despite not found\n",
            "allows.democratic not found\n",
            "holste not found\n",
            "bully” not found\n",
            "conservatives.via not found\n",
            "infowars:pearson not found\n",
            "teenager.pearson not found\n",
            "“wash not found\n",
            "group.detergent not found\n",
            "radicalism.in not found\n",
            "reads.https://youtu.be/j_xmalvsutkthe not found\n",
            "mentioned.holding not found\n",
            "participant.the not found\n",
            "(fighters).the not found\n",
            "seekers” not found\n",
            "muslim). not found\n",
            "africa.significantly, not found\n",
            "swedes.in not found\n",
            "mena-countries not found\n",
            "africa]. not found\n",
            "irrelevant.here not found\n",
            "sweden:american not found\n",
            "-jihad not found\n",
            "so.violence. not found\n",
            "rest.because not found\n",
            "racist.non-traditional not found\n",
            "jobs.which not found\n",
            "sea.when not found\n",
            "problem:qur not found\n",
            "socialists.now, not found\n",
            "true.europe not found\n",
            "volunteers.the not found\n",
            "granskning not found\n",
            "sverige not found\n",
            "aftonposten not found\n",
            "responsibility.a not found\n",
            "care.s not found\n",
            "jonlund, not found\n",
            "added.buckle not found\n",
            "cops:while not found\n",
            "gif-ready not found\n",
            "otherwise.from not found\n",
            "interview:last not found\n",
            "headlines.)https://youtu.be/ztqtfsppfyawhy not found\n",
            "men.we not found\n",
            "now.our not found\n",
            "postlaw not found\n",
            "twitter:https://twitter.com/nbcsvu/status/654310751759298560 not found\n",
            "“battlefield not found\n",
            "up.a not found\n",
            "shirt.alan not found\n",
            "dexter not found\n",
            "mccarty not found\n",
            "gresham-barlow not found\n",
            "vadnals not found\n",
            "day.officials not found\n",
            "kshama not found\n",
            "day.seattle not found\n",
            "n.m., not found\n",
            "2014.officials not found\n",
            "1992.columbus not found\n",
            "nydailynewsh/t not found\n",
            "neurosurgeon: not found\n",
            "magazine.here not found\n",
            "gq:you not found\n",
            "popeyes not found\n",
            "doctor? not found\n",
            "crossfire?here not found\n",
            "massacre.you not found\n",
            "numbers.wow not found\n",
            "wow!!for not found\n",
            "knifes, not found\n",
            "unbelievable.a not found\n",
            "pharmacies.really, not found\n",
            "corrections.we not found\n",
            "operations.eyewitness not found\n",
            "hospital:a not found\n",
            "hospitals.many not found\n",
            "units.many not found\n",
            "pharmacies.truly not found\n",
            "east.even not found\n",
            "fit.i not found\n",
            "czechia not found\n",
            "accommodation.for not found\n",
            "icu. not found\n",
            "punished.the not found\n",
            "help.via: not found\n",
            "view…a not found\n",
            "is.carson not found\n",
            "geds not found\n",
            "church…here’s not found\n",
            "worshippers.eva not found\n",
            "brunne, not found\n",
            "gunilla not found\n",
            "pray.calling not found\n",
            "protest.father not found\n",
            "pettersson, not found\n",
            ".calling not found\n",
            "pettersson not found\n",
            "parenthood.daniel not found\n",
            "(at)danielhandler. not found\n",
            "@danielhandler not found\n",
            "@pray_4_life not found\n",
            "2015planned not found\n",
            "research.handler not found\n",
            "aljazeera, not found\n",
            "r:aida not found\n",
            "her.aida not found\n",
            "story.arriving not found\n",
            "keleti not found\n",
            "18-45.bolev not found\n",
            "train.bolev not found\n",
            "r.when not found\n",
            "leave.after not found\n",
            "concluded.bolev not found\n",
            "different.as not found\n",
            "locally).schools not found\n",
            ".meanwhile, not found\n",
            "cigarettes.via: not found\n",
            "[reagan]? not found\n",
            "mahercan not found\n",
            "school.wouldn not found\n",
            "them?here not found\n",
            "show:i not found\n",
            "musim not found\n",
            "lily-white.the not found\n",
            "fox13now not found\n",
            "reporting.caycee not found\n",
            "hinduism. not found\n",
            "said.students not found\n",
            "said.principal not found\n",
            "“clock” not found\n",
            "online.dan not found\n",
            "students.no not found\n",
            "him…accuses not found\n",
            "privilege”…there’s not found\n",
            "problem… not found\n",
            "smiling: not found\n",
            "$772,500.regent not found\n",
            "said.schlissel not found\n",
            "president.via: not found\n",
            "question.unfortunately, not found\n",
            "obamanation: not found\n",
            "began.a not found\n",
            "fair.everyone not found\n",
            "rage: not found\n",
            "do.from not found\n",
            "todaily not found\n",
            "woman.read not found\n",
            "wtkrnorfolk, not found\n",
            "(scroll not found\n",
            "wtkr: not found\n",
            "sentara not found\n",
            "9-11by not found\n",
            "#fukyoflag not found\n",
            "america.one not found\n",
            "f***yoflag not found\n",
            "@lolatwhitefear not found\n",
            "#fyf911the not found\n",
            "hannibal. not found\n",
            "calls.an not found\n",
            "[r not found\n",
            "calls.one not found\n",
            "#f***yoflag not found\n",
            "hoods.sierra not found\n",
            "mcgrone not found\n",
            "nocturnus not found\n",
            "libertus not found\n",
            "flag.for not found\n",
            "workers”…is not found\n",
            "100%she not found\n",
            "21.and not found\n",
            "chrissie not found\n",
            "music.in not found\n",
            "rihanna, not found\n",
            "audience:***warning**** not found\n",
            "video****not not found\n",
            "ageshttps://youtu.be/m2n2iiruvlomiss not found\n",
            "sex.miss not found\n",
            "“occupy” not found\n",
            "card… not found\n",
            "protests.stacey not found\n",
            "deland, not found\n",
            "online.but not found\n",
            "everywhere.hessler, not found\n",
            "post.she not found\n",
            "hessler not found\n",
            "unprofessional? not found\n",
            "9-11…”black not found\n",
            "enough…it’s not found\n",
            "unavoidable…it’s not found\n",
            "down…it’s not found\n",
            "crackers” not found\n",
            "#opdethrone not found\n",
            "lives.over not found\n",
            "illwriteit.com not found\n",
            "fruition.we not found\n",
            "connections.via: not found\n",
            "co…hours not found\n",
            "9news, not found\n",
            "colorado.fox31 not found\n",
            "affairsaccording not found\n",
            "top…all not found\n",
            "goforth, not found\n",
            "ems, not found\n",
            "continued:cops not found\n",
            "alien”…expected not found\n",
            "policies.much not found\n",
            "writing.according not found\n",
            "continued.white not found\n",
            "reformhe not found\n",
            "workplace” not found\n",
            "racism.now, not found\n",
            "wtwc-tv not found\n",
            "whistle.wtwc not found\n",
            "workplace.ultimately, not found\n",
            "goodfellas, not found\n",
            "guns.scorsese not found\n",
            "production.in not found\n",
            "said:like not found\n",
            "neeson. not found\n",
            "neeson not found\n",
            "mafia: not found\n",
            "dummies!spirit not found\n",
            "outrage.right. not found\n",
            "mean.based not found\n",
            "caitlyn. not found\n",
            "it.spirit not found\n",
            "anytimecostumes.com not found\n",
            "wholesalehalloweencostumes.com, not found\n",
            "$49.95.spirit not found\n",
            "jenner.of not found\n",
            "lenny. not found\n",
            "villano, not found\n",
            "costume:as not found\n",
            "(expensive) not found\n",
            "money.for not found\n",
            "manuals.cornell not found\n",
            "cornell: not found\n",
            "$64,164.brown not found\n",
            "kleist, not found\n",
            "kant, not found\n",
            "rousseau, not found\n",
            "coleridge, not found\n",
            "quincey, not found\n",
            "keats, not found\n",
            "blanchot, not found\n",
            "levinas, not found\n",
            "beckett, not found\n",
            "ashbery, not found\n",
            "schuyler. not found\n",
            "$65,380.university not found\n",
            "smsing, not found\n",
            "asmr, not found\n",
            "debord, not found\n",
            "erving not found\n",
            "goffman, not found\n",
            "perec, not found\n",
            "certeau, not found\n",
            "lefevbre, not found\n",
            "trin not found\n",
            "minh-ha, not found\n",
            "sianne not found\n",
            "ngai, not found\n",
            "kracauer not found\n",
            "$66,800.oberlin not found\n",
            "pageant: not found\n",
            "oberlin: not found\n",
            "$66,174.occidental not found\n",
            "nietzsche, not found\n",
            "deleuze, not found\n",
            "avital not found\n",
            "ronell, not found\n",
            "butthead. not found\n",
            "occidental: not found\n",
            "$63,194.pitzer not found\n",
            "piercing, not found\n",
            "adornment. not found\n",
            "pitzer: not found\n",
            "$63,880.rutgers not found\n",
            "$29,875.georgia not found\n",
            "everbody! not found\n",
            "$24,448.university not found\n",
            "okoboji, not found\n",
            "$21,010.skidmore not found\n",
            "sociology: not found\n",
            "cyrus: not found\n",
            "(summer not found\n",
            "skidmore: not found\n",
            "$62,042.and not found\n",
            "abortion:university not found\n",
            "coursera.for not found\n",
            "“blowout” not found\n",
            ".internal not found\n",
            "metals.epa not found\n",
            "silverton, not found\n",
            "colorado.among not found\n",
            "blowout.there not found\n",
            "yellow.elected not found\n",
            "water.much not found\n",
            "mountain.epa not found\n",
            "missionprotestpp not found\n",
            "society.creating not found\n",
            "organization.click not found\n",
            "locations.what: not found\n",
            "773-777-2900via: not found\n",
            "protestpp not found\n",
            "parts.while not found\n",
            "operation.last not found\n",
            "released.today, not found\n",
            "video.sign not found\n",
            "petition! not found\n",
            "immediatelyin not found\n",
            "adds.update: not found\n",
            "company.meanwhile, not found\n",
            "giant.the not found\n",
            "parts.in not found\n",
            "gatter not found\n",
            "abortion.so not found\n",
            "babies.congress not found\n",
            "far?an not found\n",
            "twitter.king not found\n",
            "re-newsit!, not found\n",
            "findings.she not found\n",
            "white.if not found\n",
            "morehouse. not found\n",
            "four.it not found\n",
            "happened.as not found\n",
            "reality.remarkably, not found\n",
            "shaun, not found\n",
            "renewsitone not found\n",
            "too.king not found\n",
            "jeffery, not found\n",
            "certificate.the not found\n",
            "snr not found\n",
            "(bottom)what not found\n",
            "state.by not found\n",
            "crimes.neither not found\n",
            "help?a not found\n",
            "reported.officer not found\n",
            "9.edina not found\n",
            "folks?an not found\n",
            "katv.they not found\n",
            "razorback not found\n",
            "it.oddly, not found\n",
            "?read not found\n",
            "highway… not found\n",
            "#dontplayinthestreets not found\n",
            "roads.the not found\n",
            "#lowinformationvoters not found\n",
            ".https://twitter.com/cassandrarules/status/630873997735911424 not found\n",
            "flag!” not found\n",
            "surgery.a not found\n",
            "appealed.the not found\n",
            "michelle-lael not found\n",
            "patino not found\n",
            "proceed.brown not found\n",
            "1985.norsworthy, not found\n",
            "later.she not found\n",
            "ione, not found\n",
            "1990s.she not found\n",
            "tigar not found\n",
            "therapy.the not found\n",
            "cdcr not found\n",
            "quine not found\n",
            "callison not found\n",
            "statement.quine, not found\n",
            "robbery.norsworthy not found\n",
            "prison.she not found\n",
            "judgments.via: not found\n",
            "m.i.a. not found\n",
            "website.gandhi, not found\n",
            "proudly.gandhi not found\n",
            "gandhivia: not found\n",
            "migration” not found\n",
            "then-uw not found\n",
            "policy.today, not found\n",
            "idea.prof. not found\n",
            "school.chavez not found\n",
            "610).chavez not found\n",
            "(cuss) not found\n",
            "biography.the not found\n",
            "border.according not found\n",
            "border.a not found\n",
            "wort, not found\n",
            "#blackcopkillerslivesmatter not found\n",
            "right?supporters not found\n",
            "wilbourn, not found\n",
            "family.wilbourn not found\n",
            "toney not found\n",
            "kill.the not found\n",
            "full:this not found\n",
            "manslaughter.tremaine not found\n",
            "living.these not found\n",
            "grime not found\n",
            "“stalk not found\n",
            "man)…the not found\n",
            "prescribed” not found\n",
            "re-distribution not found\n",
            "party.when not found\n",
            "april.one not found\n",
            "hands.newsmax not found\n",
            "maisey not found\n",
            "experience.gravity not found\n",
            "leave.but not found\n",
            "more.)for not found\n",
            "agree.via: not found\n",
            "levels?think not found\n",
            "media.is not found\n",
            "1968.take not found\n",
            "see:this not found\n",
            "(cjr) not found\n",
            "cjr: not found\n",
            "graveyardsorry not found\n",
            "sister? not found\n",
            "without).dream not found\n",
            "job?malia not found\n",
            "weekly.specifically, not found\n",
            "[dunham] not found\n",
            "politicstruth not found\n",
            "shrieked.my not found\n",
            "mama! not found\n",
            "success.dunham not found\n",
            "updateafter not found\n",
            "refused.monday, not found\n",
            ":lena not found\n",
            "researchmaybe not found\n",
            "language.but not found\n",
            "genome not found\n",
            "literature:doing not found\n",
            "tyrode not found\n",
            "(ts) not found\n",
            "dii not found\n",
            "pfa not found\n",
            "(ph not found\n",
            "fig. not found\n",
            "s8) not found\n",
            "(torrance, not found\n",
            "ca), not found\n",
            "ultrasound.catch not found\n",
            "agilent not found\n",
            "bladder, not found\n",
            "kidney, not found\n",
            "aorta, not found\n",
            "muscle.there not found\n",
            "trasancos not found\n",
            "up.there not found\n",
            "frankensteinian not found\n",
            "clinic:isn not found\n",
            "rescue.the not found\n",
            "#standwithpp: not found\n",
            "happening.click not found\n",
            "see:after not found\n",
            "#standwithpp not found\n",
            "hill.via: not found\n",
            "supporter…media not found\n",
            "wjbf not found\n",
            "today.houser not found\n",
            "said.nine not found\n",
            "injured.houser not found\n",
            "colorado.police not found\n",
            "well.houser not found\n",
            "check.houser not found\n",
            "pundita not found\n",
            "rag,the not found\n",
            "beast:from not found\n",
            "phenix, not found\n",
            "groups.and not found\n",
            "(video)****here not found\n",
            "statement:wwe not found\n",
            "bollea not found\n",
            "hogan). not found\n",
            "worldwide.why not found\n",
            "offensive.some not found\n",
            ":https://youtu.be/ovytgh_kbd0one not found\n",
            "racist:at not found\n",
            "hatred!according not found\n",
            "story.via: not found\n",
            "flag.although not found\n",
            "efforts.for not found\n",
            "[update] not found\n",
            "update:until not found\n",
            "altogether.a not found\n",
            "corporations:the not found\n",
            "supporters.since not found\n",
            "funding.however, not found\n",
            "gifts.forty not found\n",
            "group.planned not found\n",
            "lunch.in not found\n",
            "gatter, not found\n",
            "parts.here not found\n",
            "signaladobe not found\n",
            "clorox not found\n",
            "senza not found\n",
            "dimes not found\n",
            "tostitos not found\n",
            "fargoevery not found\n",
            "saying…that not found\n",
            "malley(d-md) not found\n",
            "apologize?! not found\n",
            "us.all not found\n",
            "matter!if not found\n",
            "decision…still not found\n",
            "policeman.president not found\n",
            "gunmen.in not found\n",
            "movement.also, not found\n",
            "shooting.obama not found\n",
            "massacre.president not found\n",
            "pinckney. not found\n",
            "victims.obama not found\n",
            "work.via: not found\n",
            "looking…this not found\n",
            "tsarnaev” not found\n",
            "on-air.this not found\n",
            "“tolerance”: not found\n",
            "t.v.: not found\n",
            "zoey not found\n",
            "tur:https://youtu.be/pckjiu6iyeu not found\n",
            "business.nucatola not found\n",
            "saying:this not found\n",
            "abuser.via: not found\n",
            "liveactionnews not found\n",
            "pilgrimage.morales not found\n",
            "bolivia.the not found\n",
            "ideology.francis, not found\n",
            "jesuit, not found\n",
            "1980s.during not found\n",
            "art.after not found\n",
            "future…this not found\n",
            "kids’…just not found\n",
            "administrators.labor not found\n",
            "retirees.earlier not found\n",
            "nbcchicago.as not found\n",
            "instruction.those not found\n",
            "million.is not found\n",
            "cawley not found\n",
            "ostro not found\n",
            "dhupelia not found\n",
            "gawley not found\n",
            "ulery not found\n",
            "$175,000.let not found\n",
            "bebley not found\n",
            "$151,131.one not found\n",
            "under-chiefs?for not found\n",
            "officer.and not found\n",
            "2013-14.there not found\n",
            "statement.district not found\n",
            "bittner, not found\n",
            "iori, not found\n",
            "year).via: not found\n",
            "‘pro-choice’ not found\n",
            "wow!a not found\n",
            "baby.in not found\n",
            "fetus.but not found\n",
            "21.otherwise, not found\n",
            "10.donations not found\n",
            "7.writing not found\n",
            "abortion.north not found\n",
            "utah.she not found\n",
            "stated.via:daily not found\n",
            "patriotism.the not found\n",
            "wptv.the not found\n",
            "p.loadvideoexpressv3('eyj1cgxvywrfawqioijlehbyzxnzlte0mzu4otuynjkwmzeilcj2awrlb190exblijoimsisinnyy19pbwfnzv91cmwioijodhrwoi8vbwvkaweylndwdhyuy29tl3bob3rvlziwmtuvmdyvmzavrmxhz19iyw5uzxjfy29kzv92aw9syxrpb25fmzeyndk4mdawmf8ymdu4otc2of92zxixljbfnjqwxzq4mc5qcgcilcjkzwzfdgl0bguioijobybmaw5lcybvcibhy3rpb24gdw50awwgsnvsesa2iiwidgl0bguioijobybmaw5lcybvcibhy3rpb24gdw50awwgsnvsesa2iiwizgvmx2rly3nyaxb0aw9uijoiiiwichvibglzagvkx3vybhmiolt7imzvcm1hdci6im1wndsilcjlbwjlzf91cmwioijodhrwoi8vbwvkaweylndwdhyuy29tl3zpzgvvl3zpzgvvx3n0dwrpby8ymde1lza3lzayl05vx2zpbmvzx29yx2fjdglvbl91bnrpbf9kdwx5xzzfmzezmjk5lm1wncisinbyb3rvy29sijoiahr0cdoilcjjzg5fbmftzsi6ikfryw1hasisimtichmiojuwmh1dlcjjyxb0aw9ucyi6w3sibgfuz3vhz2uioijlbiisimzvcm1hdci6ikrgwfailcj1cmwioijodhrwoi8vbwvkaweylndwdhyuy29tl3zpzgvvl3zpzgvvx3n0dwrpby8ymde1lza3lzayl2nhchrpb25zl05vx2zpbmvzx29yx2fjdglvbl91bnrpbf9kdwx5xzzfmzezmjk5mdawmc5kznhwin1dlcj0c19wdwjsaxnozwqioiiymde1xza3xzayin0=|1000011|sps'); not found\n",
            "himself.via: not found\n",
            "brummitt not found\n",
            "flag:a not found\n",
            "parmenter, not found\n",
            "wglt not found\n",
            "school.according not found\n",
            "tristatehomepage.com not found\n",
            "clouser, not found\n",
            "wthi-tv not found\n",
            "2.via: not found\n",
            "constitution.milwaukee not found\n",
            "noted.johnson not found\n",
            "layden not found\n",
            "renovation.the not found\n",
            "buildings.membership not found\n",
            "museum.via: not found\n",
            "threatening: not found\n",
            "#ericsheppardchallenge not found\n",
            "week.sheppard not found\n",
            "bond.sheppard not found\n",
            "17th.four not found\n",
            "walbsheppard not found\n",
            "manhart not found\n",
            "police:just not found\n",
            "both.april not found\n",
            "2015sheppard not found\n",
            "own.eric not found\n",
            "tuesday.arrest not found\n",
            "manhart, not found\n",
            "on.tuesday, not found\n",
            "run.eric not found\n",
            "found.now, not found\n",
            "mckinney. not found\n",
            "perimeter.valdosta not found\n",
            "911.april not found\n",
            "campus.local not found\n",
            "activist.reverend not found\n",
            "rose.may not found\n",
            "2015:breaking not found\n",
            "‘hope’ not found\n",
            "faireyfamed not found\n",
            "$10,000.police, not found\n",
            "avenue.fairey not found\n",
            "authorization.an not found\n",
            "elysia not found\n",
            "borowy-reeder, not found\n",
            "detroit.on not found\n",
            "borowy-reeder. not found\n",
            "frank.oklahoma not found\n",
            "2013.news9.com not found\n",
            "reason.barry not found\n",
            "news9.comhe not found\n",
            "yogurt? not found\n",
            "lesbians.created not found\n",
            "opperman not found\n",
            "onscreen.chobani not found\n",
            "cmo not found\n",
            "adweek. not found\n",
            "gap.television not found\n",
            "characters.bruce not found\n",
            "programming.transgender not found\n",
            "tambor not found\n",
            "pfefferman not found\n",
            "globes.over not found\n",
            "boys.via: not found\n",
            "newsbelow, not found\n",
            "chobani. not found\n",
            "www.care.chobani.comhave not found\n",
            "fage not found\n",
            "chobani! not found\n",
            "patty.thank not found\n",
            "commercial.we not found\n",
            "diversity.since not found\n",
            "us.regards, not found\n",
            "norwich, not found\n",
            "bayna-lehkiem not found\n",
            "said.bayna-lehkiem not found\n",
            "assault.el-amin not found\n",
            "snipes, not found\n",
            "york-adams, not found\n",
            "5.he not found\n",
            "said.el-amin not found\n",
            "online.here not found\n",
            "yorkwriting not found\n",
            "g-list, not found\n",
            "el-amin not found\n",
            "computers!!! not found\n",
            "k- not found\n",
            "youth?public not found\n",
            "(fle) not found\n",
            "news.fairfax not found\n",
            "flecac not found\n",
            "(vdoe) not found\n",
            "as-such not found\n",
            "wrote.lafferty not found\n",
            "fle not found\n",
            "sols not found\n",
            "kolbjornsen. not found\n",
            "area.during not found\n",
            "conservativesgroups not found\n",
            "nationally.graham not found\n",
            "dollars.asked not found\n",
            "said.bank not found\n",
            "monday.for not found\n",
            "bgea, not found\n",
            "report.samaritan not found\n",
            "million.tough not found\n",
            "banksbanks not found\n",
            "raleigh.leaders not found\n",
            "orientation.ed not found\n",
            "mccoll not found\n",
            "nationsbank, not found\n",
            "language.also, not found\n",
            "bankamerica, not found\n",
            "employees.graham not found\n",
            "wrote.two not found\n",
            "allstate.impact not found\n",
            "unknownit not found\n",
            "impact.as not found\n",
            "@bgea not found\n",
            "@wellsfargo not found\n",
            "regrets’ not found\n",
            "“spilling’ not found\n",
            "signs.via: not found\n",
            "bratton.the not found\n",
            "misdemeanors.stop not found\n",
            "scheindlin.scheindlin not found\n",
            "white.both not found\n",
            "post.fifty-three not found\n",
            "people.black not found\n",
            "angeles.but not found\n",
            "lay.robert not found\n",
            "gangi, not found\n",
            ".via:uk not found\n",
            "toler not found\n",
            "replies.bruce not found\n",
            "predict.jenner not found\n",
            "vh1 not found\n",
            "shuter not found\n",
            "bigspeak.com. not found\n",
            "balthazar, not found\n",
            "stompin’ not found\n",
            "weezy not found\n",
            "organizer.wayne not found\n",
            "here(watch not found\n",
            "made):some not found\n",
            "“cracka not found\n",
            "commandments” not found\n",
            "rap.according not found\n",
            "kashi not found\n",
            "asheru. not found\n",
            "white.driscoll not found\n",
            "gladd, not found\n",
            "imrc not found\n",
            "vimeo.in not found\n",
            "steinbeck not found\n",
            "eiden not found\n",
            "gatsby, not found\n",
            "perspective.she not found\n",
            "blog.other not found\n",
            "running: not found\n",
            "loca, not found\n",
            "prose.hancock not found\n",
            "lisseth not found\n",
            "“sh*t not found\n",
            "supervise.bedford, not found\n",
            "peers.it not found\n",
            "ignorance.here not found\n",
            "video:in not found\n",
            "production.superintendent not found\n",
            "sills.that not found\n",
            "tanveer, not found\n",
            "coordinatoryou not found\n",
            "event.hewitt not found\n",
            "racialized.hewitt not found\n",
            "ryerson not found\n",
            "(rsu). not found\n",
            "added.rsu not found\n",
            "ryersonian not found\n",
            "whiterabbitradio.net not found\n",
            "anonymity.o not found\n",
            "nayara not found\n",
            "‘patently not found\n",
            "offensive’ not found\n",
            "live?the not found\n",
            "environmentalism.judge not found\n",
            "pooler, not found\n",
            "cff not found\n",
            "behalf.new not found\n",
            "discrimination.via: not found\n",
            "sunday.rabble not found\n",
            "activists.in not found\n",
            "southall not found\n",
            "[border not found\n",
            "agency] not found\n",
            "concerns.activism not found\n",
            "anti-raids not found\n",
            "bullshit.via: not found\n",
            "german.het not found\n",
            "laatste not found\n",
            "nieuws not found\n",
            "translate): not found\n",
            "wever. not found\n",
            "formul not found\n",
            "anvers. not found\n",
            "anvers not found\n",
            "cela not found\n",
            "cette not found\n",
            "syrie not found\n",
            "speech…drops not found\n",
            "godfather: not found\n",
            "selma! not found\n",
            "‘silence not found\n",
            "lambs’ not found\n",
            "mcelhinney, not found\n",
            "crime…read not found\n",
            "rutgers-camden not found\n",
            "discuss.you not found\n",
            "article.i not found\n",
            "from?a not found\n",
            "pedophilia.how not found\n",
            "pedophilia?we not found\n",
            "that?there not found\n",
            "pedophilia.but not found\n",
            "pedophiles.since not found\n",
            "dsm not found\n",
            "[diagnostic not found\n",
            "disorders], not found\n",
            "young?for not found\n",
            "dunkenfeld, not found\n",
            "early.via: not found\n",
            "phillymag.com not found\n",
            "swantonpolice not found\n",
            "officers.state not found\n",
            "sunday.police not found\n",
            "gangs.https://youtu.be/4vv7gdwojk8sunday not found\n",
            "activity:law not found\n",
            "area.other not found\n",
            "way.waco not found\n",
            "reuters.according not found\n",
            "backdrop.if not found\n",
            "spree:https://youtu.be/rdidr8mjtbc not found\n",
            "“minister” not found\n",
            "case:https://twitter.com/drmauricelmlei/status/597419872641888256a not found\n",
            "warning:https://twitter.com/drmauricelmlei/status/597421745356742657milliere not found\n",
            "america,or not found\n",
            "community.[milliere] not found\n",
            "m.a.p.d.), not found\n",
            "personality.whether not found\n",
            "reasons.primarily, not found\n",
            "officer:https://twitter.com/drmauricelmlei/status/597421141125242880and not found\n",
            "self-defense:via: not found\n",
            "him…kill not found\n",
            "him”…good not found\n",
            "joint.the not found\n",
            "fight.two not found\n",
            "balmain, not found\n",
            "laughs.total not found\n",
            "counter.the not found\n",
            "balmain not found\n",
            "attention.via: not found\n",
            "pix11.com not found\n",
            "today..a not found\n",
            "@amtraknec not found\n",
            "@amtrak not found\n",
            "joke!major not found\n",
            "ally.the not found\n",
            "discrimination.melissa not found\n",
            "l.g.b.t., not found\n",
            "epa!!!environmental not found\n",
            "industry.mccarthy not found\n",
            "city-area not found\n",
            "visit.during not found\n",
            "‘pompous’ not found\n",
            "‘lone not found\n",
            "wolves’ not found\n",
            "randmilitary not found\n",
            "report.retired not found\n",
            "e.j. not found\n",
            "picassos, not found\n",
            "goghs not found\n",
            "monets not found\n",
            "kawara. not found\n",
            "bedford-stuyvesant, not found\n",
            "ban.via: not found\n",
            "lamont-hillwe not found\n",
            "scare.co-owner not found\n",
            "rubbin not found\n",
            "buttz not found\n",
            "saturday.shortly not found\n",
            "antillon. not found\n",
            "battlefield.in not found\n",
            "khadr, not found\n",
            "al-zawahiri not found\n",
            "atef.don not found\n",
            "jihad.but not found\n",
            "(audio)nation not found\n",
            "farrakhan: not found\n",
            "leader.farrakhan not found\n",
            "unedited.and not found\n",
            "television.one not found\n",
            "sloganeering.white not found\n",
            "stompers not found\n",
            "@dakota_meyer not found\n",
            "#neveroutgunned not found\n",
            "https://t.co/n8fb9sjwan not found\n",
            "away!a not found\n",
            "town.only not found\n",
            "bible-reading not found\n",
            "association.while not found\n",
            "bleckley not found\n",
            "memorial.in not found\n",
            "hall.via: not found\n",
            "urine?” not found\n",
            "“sister not found\n",
            "ghost!” not found\n",
            "anhoek not found\n",
            "[d]oes not found\n",
            "continued:because not found\n",
            ".papa not found\n",
            "offered.later, not found\n",
            "jess, not found\n",
            "https://t.co/inhttmxnz2 not found\n",
            "#ericsheppardchallenge, not found\n",
            "him.sheppard, not found\n",
            "disrespect.in not found\n",
            "pitiful!warning: not found\n",
            "profanity/strong not found\n",
            "jefferson. not found\n",
            "know.according not found\n",
            "117conversely, not found\n",
            "reported:nearly not found\n",
            "police.then not found\n",
            "year.remember not found\n",
            "cops.read not found\n",
            "struggling:the not found\n",
            "word).most not found\n",
            "rector.what not found\n",
            "blacks.now not found\n",
            "hopelessness.drug not found\n",
            "it.are not found\n",
            "hopeless.having not found\n",
            "opportunities.ask not found\n",
            "difference.your not found\n",
            "probably.you not found\n",
            "next:why not found\n",
            "you?i not found\n",
            "stuff.do not found\n",
            "re-open?yes, not found\n",
            "re-open.will not found\n",
            "differently?what not found\n",
            "neighborhood.you not found\n",
            "gun..yes?yes, not found\n",
            "me.at not found\n",
            "here:h/t not found\n",
            "failed” not found\n",
            "instead.harrison not found\n",
            "happened.harrison not found\n",
            "(video)baltimore not found\n",
            "nutshell: not found\n",
            "amen!a not found\n",
            ".st. not found\n",
            "department.american not found\n",
            "it?black not found\n",
            "philadelphia? not found\n",
            "francisco? not found\n",
            "ruins: not found\n",
            "benji not found\n",
            "meretricious not found\n",
            "political.but not found\n",
            "baltimore.would not found\n",
            "bad.this not found\n",
            "you?yes, not found\n",
            "project.when not found\n",
            "community-organizer not found\n",
            "grant? not found\n",
            "nope: not found\n",
            "‘accepting’ not found\n",
            "christian.2). not found\n",
            "bible.4). not found\n",
            "republican.5). not found\n",
            "constitutionin not found\n",
            "home.bruce not found\n",
            "identity.speculation not found\n",
            "size-36b not found\n",
            "breasts.in not found\n",
            "marriages.jenner not found\n",
            "kylie, not found\n",
            "transition.watch not found\n",
            "deuteronomy, not found\n",
            "others.his not found\n",
            "sawyer. not found\n",
            "“bravely” not found\n",
            "summer.it not found\n",
            "itch, not found\n",
            "play-turned-billy not found\n",
            "ewell. not found\n",
            "vows.gena not found\n",
            "part.via: not found\n",
            "enough?!!officials not found\n",
            "k-3 not found\n",
            "seacoastonline.com. not found\n",
            "said.criticism not found\n",
            "herthel not found\n",
            "transgender.from not found\n",
            "amazon.com: not found\n",
            ".my not found\n",
            "richerich, not found\n",
            "transgender.the not found\n",
            "hannity.com. not found\n",
            "born…this not found\n",
            "‘flying not found\n",
            "flying.one not found\n",
            "said.alan not found\n",
            "old!this not found\n",
            "syndrome.when not found\n",
            "fly.while not found\n",
            "alan. not found\n",
            "littlethings.comyou not found\n",
            "kimbery not found\n",
            "syndrome.a not found\n",
            "adults.and not found\n",
            "born.rayna not found\n",
            "rapp, not found\n",
            "family.(133)i not found\n",
            "(133)i not found\n",
            "134)the not found\n",
            "(91)i not found\n",
            "(138)if not found\n",
            "him.(92)it not found\n",
            "(134)i not found\n",
            "child?(146)all not found\n",
            "challenged.many not found\n",
            "expectations.you not found\n",
            "ones.two not found\n",
            "worth?i not found\n",
            "niece.the not found\n",
            "alverta not found\n",
            "hempstead.police not found\n",
            "engelhardt. not found\n",
            "7.engelhardt not found\n",
            "ensued.authorities not found\n",
            "floor.several not found\n",
            "engelhardt.she not found\n",
            "hospital.engelhardt, not found\n",
            "newsday.speaking not found\n",
            "rifle.a not found\n",
            "soldiers.fox not found\n",
            "wuerth, not found\n",
            "frankford, not found\n",
            "hearing.hall, not found\n",
            "‘shushing’ not found\n",
            "stroudsburg, not found\n",
            "santamaria-williams? not found\n",
            "wnep-tv, not found\n",
            "santamaria-williams not found\n",
            "missing…no not found\n",
            "incident.unlike not found\n",
            "philadelphia.***warning****video not found\n",
            "disturbing***https://youtu.be/thdrhavfiw8the not found\n",
            "touch.philadelphia not found\n",
            "attackers.philadelphia not found\n",
            "broke.this not found\n",
            "olney. not found\n",
            "215.686.tips not found\n",
            "ppd not found\n",
            "dc# not found\n",
            "joachim, not found\n",
            "coma.wpvi-tv not found\n",
            "drives11 not found\n",
            "lakenya not found\n",
            "ochsner not found\n",
            "recover.the not found\n",
            "kenner. not found\n",
            "about.afterwards, not found\n",
            "boy.police not found\n",
            "said.officers not found\n",
            "movie:while not found\n",
            "gosnell.phelim not found\n",
            "that.phelim not found\n",
            "degruccio. not found\n",
            "indicted.you not found\n",
            "here.ferguson not found\n",
            "fergusontheplay.com not found\n",
            "says.helmed not found\n",
            "degruccio not found\n",
            "laramie not found\n",
            "theatre), not found\n",
            "it.concludes not found\n",
            "sundaytimes, not found\n",
            "variety); not found\n",
            "moore-style not found\n",
            "fergusontheplay.com. not found\n",
            "manager.how not found\n",
            "shocking!whatever not found\n",
            "pregnant.the not found\n",
            "kaneshiro, not found\n",
            "d&e not found\n",
            "hemorrhage.the not found\n",
            "misoprostol, not found\n",
            "women.reports not found\n",
            "rescue.dilation not found\n",
            "removed.after not found\n",
            "complete.the not found\n",
            "discriminate.marjorie not found\n",
            "azucar not found\n",
            "bible-shaped not found\n",
            "content.silva not found\n",
            "olympia,washington. not found\n",
            "pow/mia not found\n",
            "tiankai. not found\n",
            "‘abusing not found\n",
            "registration.police not found\n",
            "police.soto not found\n",
            "soto.soto not found\n",
            "stanford.the not found\n",
            "windows.soto not found\n",
            "penndot not found\n",
            "penndot, not found\n",
            "stanford.we not found\n",
            "soto.and not found\n",
            "marshal.we not found\n",
            "soto.so not found\n",
            "soto?he not found\n",
            "firearms.he not found\n",
            "firefighter.we not found\n",
            "soto.police not found\n",
            "stop.while not found\n",
            "registration.in not found\n",
            "mcdonalds…15 not found\n",
            "sixteen-year-old not found\n",
            "aniah not found\n",
            "richey not found\n",
            "bandz not found\n",
            "good.reports not found\n",
            "bag.***warning**** not found\n",
            "violence:after not found\n",
            "“non-violence not found\n",
            "worked”…reverend not found\n",
            "working.at not found\n",
            "(sclc) not found\n",
            "masse.when not found\n",
            "least.of not found\n",
            "actors.the not found\n",
            "obama.such not found\n",
            "marriage.aside not found\n",
            "balances.the not found\n",
            "speech.one not found\n",
            "charleton not found\n",
            "heston.the not found\n",
            "hipaa not found\n",
            "theatre.the not found\n",
            "mockingbird: not found\n",
            "political-media not found\n",
            "cooper.no not found\n",
            "few.in not found\n",
            "today:early not found\n",
            "gladio-style, not found\n",
            "afraid.also not found\n",
            "guess.certainly, not found\n",
            "narrative’ not found\n",
            "anchor)for not found\n",
            "blue/ap not found\n",
            "photo/rebecca not found\n",
            "boone)news not found\n",
            "east.for not found\n",
            "here.so not found\n",
            "difference.things not found\n",
            "media.one not found\n",
            "issues.simplify not found\n",
            "industry.in not found\n",
            "glance:fbi not found\n",
            "refugearmed not found\n",
            "oregonoregon not found\n",
            "buildingthe not found\n",
            "sith? not found\n",
            "style:the not found\n",
            "hammonds: not found\n",
            "fires?the not found\n",
            "crusade?the not found\n",
            "authority?over-simplified, not found\n",
            "choice.when not found\n",
            "on.activists not found\n",
            "terrorists?part not found\n",
            "waves.in not found\n",
            "this.today not found\n",
            "decades.what not found\n",
            "#vanillaisis not found\n",
            "here.amazingly, not found\n",
            "militia.cnn not found\n",
            "terrorism?here not found\n",
            "(fbi): not found\n",
            "u.s.18 not found\n",
            "u.s.).granted, not found\n",
            "terrorism?what not found\n",
            "code) not found\n",
            "us)? not found\n",
            "elastic.cnn not found\n",
            "question.depending not found\n",
            "inter-related?let not found\n",
            "agencies:the not found\n",
            "(fs) not found\n",
            "(nps) not found\n",
            "(dod)here not found\n",
            "commons)the not found\n",
            "owyhee not found\n",
            "canyonlands not found\n",
            "control.part not found\n",
            "(doi), not found\n",
            "blm.hundreds not found\n",
            "not.watch not found\n",
            "each.they not found\n",
            "themselves.are not found\n",
            "fit?the not found\n",
            "cattlewomen. not found\n",
            "(aedpa). not found\n",
            "marshall.a not found\n",
            "aedpa not found\n",
            "dole] not found\n",
            "clinton]. not found\n",
            "live/the not found\n",
            "oregonian) not found\n",
            "subterfugeto not found\n",
            "tiller, not found\n",
            "2014.whether not found\n",
            "here.next not found\n",
            "oathkeepers, not found\n",
            "left.oathkeepers not found\n",
            "cause:bundy not found\n",
            "#bundyranch not found\n",
            "2014if not found\n",
            "ritzheimer.another not found\n",
            "hicks). not found\n",
            "cause.once not found\n",
            "farenheit not found\n",
            "cheetos.read not found\n",
            "jeopardy: not found\n",
            "officials.late not found\n",
            "pic.twitter.com/ec6tmdetik not found\n",
            "(burns not found\n",
            "portland), not found\n",
            "facility.malheur not found\n",
            "building.because not found\n",
            "morning.below not found\n",
            "weeks.watch: not found\n",
            "koin6, not found\n",
            "treehouse, not found\n",
            "indefinitely.here not found\n",
            "familyhistory: not found\n",
            "refuge.(a) not found\n",
            "oregon.(a1) not found\n",
            "blitzen not found\n",
            "fws, not found\n",
            "(fws), not found\n",
            "fws.(a4) not found\n",
            "hammonds.*(c) not found\n",
            "harney. not found\n",
            "fws.(e) not found\n",
            "range-con not found\n",
            "(frenchglen) not found\n",
            "glerup not found\n",
            "mother) not found\n",
            "allum, not found\n",
            "(wife) not found\n",
            "home.on not found\n",
            "(dwight not found\n",
            "blm.(v) not found\n",
            "treehousehere not found\n",
            "2020?just not found\n",
            "betti not found\n",
            "grandmother.last not found\n",
            "keep: not found\n",
            "emanuel.currently not found\n",
            "mondoweiss, not found\n",
            "idf. not found\n",
            "overdrive.read not found\n"
          ]
        }
      ],
      "source": [
        "embedding_vectors = get_weight_matrix(w2v_model)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qMxyHpOym9kk",
        "outputId": "23bb6dae-cb60-40dd-cc54-d31197ff78b0"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "(375374, 100)"
            ]
          },
          "execution_count": 67,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "embedding_vectors.shape"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "0SsyrrjSxENp"
      },
      "outputs": [],
      "source": [
        "model = Sequential()\n",
        "model.add(Embedding(vocab_size, output_dim=DIM, weights = [embedding_vectors], input_length=maxlen, trainable=False))\n",
        "model.add(LSTM(units=128))\n",
        "model.add(Dense(1, activation='sigmoid'))\n",
        "model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['acc'])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "0x5QoQc3m9nT"
      },
      "outputs": [],
      "source": [
        "model = Sequential()\n",
        "model.add(Embedding(vocab_size, output_dim=DIM, weights = [embedding_vectors], input_length=maxlen, trainable=False))\n",
        "model.add(LSTM(units=128))\n",
        "model.add(Dense(1, activation='sigmoid'))\n",
        "model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['acc'])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Fii0gTGgm9qI",
        "outputId": "c601b687-a813-4ecb-e7a4-7884fec2a22f"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Model: \"sequential_1\"\n",
            "_________________________________________________________________\n",
            " Layer (type)                Output Shape              Param #   \n",
            "=================================================================\n",
            " embedding_1 (Embedding)     (None, 1000, 100)         37537400  \n",
            "                                                                 \n",
            " lstm_1 (LSTM)               (None, 128)               117248    \n",
            "                                                                 \n",
            " dense_1 (Dense)             (None, 1)                 129       \n",
            "                                                                 \n",
            "=================================================================\n",
            "Total params: 37,654,777\n",
            "Trainable params: 117,377\n",
            "Non-trainable params: 37,537,400\n",
            "_________________________________________________________________\n"
          ]
        }
      ],
      "source": [
        "model.summary()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "2kTcGhNim9tf"
      },
      "outputs": [],
      "source": [
        "X_train, X_test, y_train, y_test = train_test_split(X, y)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "background_save": true,
          "base_uri": "https://localhost:8080/"
        },
        "id": "lLu3YKt7m9v2",
        "outputId": "7014b315-498d-4127-8ce0-90fa2a0a07d3"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Epoch 1/6\n",
            "737/737 [==============================] - 756s 1s/step - loss: 0.1687 - acc: 0.9323 - val_loss: 0.0859 - val_acc: 0.9706\n",
            "Epoch 2/6\n",
            "737/737 [==============================] - 752s 1s/step - loss: 0.0741 - acc: 0.9735 - val_loss: 0.0528 - val_acc: 0.9825\n",
            "Epoch 3/6\n",
            "737/737 [==============================] - 743s 1s/step - loss: 0.0421 - acc: 0.9859 - val_loss: 0.1062 - val_acc: 0.9542\n",
            "Epoch 4/6\n",
            "737/737 [==============================] - 762s 1s/step - loss: 0.0366 - acc: 0.9878 - val_loss: 0.0321 - val_acc: 0.9898\n",
            "Epoch 5/6\n",
            "737/737 [==============================] - 771s 1s/step - loss: 0.0159 - acc: 0.9949 - val_loss: 0.0283 - val_acc: 0.9906\n",
            "Epoch 6/6\n",
            "737/737 [==============================] - 776s 1s/step - loss: 0.0149 - acc: 0.9953 - val_loss: 0.0327 - val_acc: 0.9911\n"
          ]
        },
        {
          "data": {
            "text/plain": [
              "<keras.callbacks.History at 0x7f7eaf739b50>"
            ]
          },
          "execution_count": 80,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "model.fit(X_train, y_train, validation_split=0.3, epochs=6)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "background_save": true
        },
        "id": "fu-tZJ7fm9yw"
      },
      "outputs": [],
      "source": [
        "y_pred = (model.predict(X_test) >=0.5).astype(int)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "q1UX9Cfwm91t"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "WGuJeswEm94Q"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "_demkBTCm97M"
      },
      "outputs": [],
      "source": [
        "x = ['The fire brigade, which sent ten fire engines and around 70 firefighters to the scene, said there were no reports of any injuries and investigators had launched an investigation into the cause of the blaze.']\n",
        "x = tokenizer.texts_to_sequences(x)\n",
        "x = pad_sequences(x, maxlen=maxlen)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "oqI0Nb1xm9-v",
        "outputId": "0f64fd06-0555-4fe4-ef8a-4d6d022d9d49"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "array([[1]])"
            ]
          },
          "execution_count": 78,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "(model.predict(x) >= 0.5).astype(int)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "AQQYAr5Am-Bo"
      },
      "outputs": [],
      "source": [
        "x = [\"Scientists have discovered a reservoir of water three times the volume of all the oceans beneath the Earth's surface, according to an international study. The water has been found between the transition zone of the Earth's upper and lower mantle. The research team analyzed a rate diamond formed 660 meters below the Earth's surface using techniques including Raman spectroscopy and FTIR spectrometry, ANI reported.\"]\n",
        "x = tokenizer.texts_to_sequences(x)\n",
        "x = pad_sequences(x, maxlen=maxlen)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KIEtEQKhm-Ew",
        "outputId": "975b5b98-7892-4322-b2cd-b561a12ec663"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "array([[1]])"
            ]
          },
          "execution_count": 80,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "(model.predict(x) >= 0.5).astype(int)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "gWJQgbqBm-G0"
      },
      "outputs": [],
      "source": [
        "x = [\"Coronavirus Bioweapon – How China Stole Coronavirus From Canada And Weaponized It\"]\n",
        "x = tokenizer.texts_to_sequences(x)\n",
        "x = pad_sequences(x, maxlen=maxlen)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qfrEUT86m-JS",
        "outputId": "73fbab59-7812-4486-8b67-71052b04fb6e"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "array([[0]])"
            ]
          },
          "execution_count": 82,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "(model.predict(x) >= 0.5).astype(int)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "ws-BJEY0m-Mq"
      },
      "outputs": [],
      "source": []
    }
  ],
  "metadata": {
    "accelerator": "GPU",
    "colab": {
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyM14YOU42R8Q30sQYd5ZDeZ",
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}